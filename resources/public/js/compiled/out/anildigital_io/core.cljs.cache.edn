;; Analyzed by ClojureScript 0.0-2760
{:defs {->t17603 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name anildigital-io.core/->t17603, :variadic false, :file "src/anildigital_io/core.cljs", :method-params ([owner data meta17604]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :methods ({:tag anildigital-io.core/t17603, :variadic false, :max-fixed-arity 3}), :line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner data meta17604])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t17603 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name anildigital-io.core/t17603, :file "src/anildigital_io/core.cljs", :type true, :anonymous true, :column 4, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, fetch-feed {:protocol-inline nil, :name anildigital-io.core/fetch-feed, :variadic false, :file "src/anildigital_io/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 0}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, app-state {:file "src/anildigital_io/core.cljs", :line 11, :column 1, :end-line 11, :end-column 20, :test true, :name anildigital-io.core/app-state}}, :name anildigital-io.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async}, :requires {cljs.core.async cljs.core.async, http cljs-http.client, cljs-http.client cljs-http.client, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :imports nil}