// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20293__delegate = function (args){
return console.log.apply(console,(function (){var G__20292 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20292) : cljs.core.into_array.call(null,G__20292));
})());
};
var G__20293 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20294__i = 0, G__20294__a = new Array(arguments.length -  0);
while (G__20294__i < G__20294__a.length) {G__20294__a[G__20294__i] = arguments[G__20294__i + 0]; ++G__20294__i;}
  args = new cljs.core.IndexedSeq(G__20294__a,0);
} 
return G__20293__delegate.call(this,args);};
G__20293.cljs$lang$maxFixedArity = 0;
G__20293.cljs$lang$applyTo = (function (arglist__20295){
var args = cljs.core.seq(arglist__20295);
return G__20293__delegate(args);
});
G__20293.cljs$core$IFn$_invoke$arity$variadic = G__20293__delegate;
return G__20293;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20297 = x;
return goog.isString(G__20297);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20299 = x__$1;
return goog.typeOf(G__20299);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12706__auto__ = ty;
if(cljs.core.truth_(and__12706__auto__)){
return ty.cljs$lang$type;
} else {
return and__12706__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20301 = obj;
return goog.typeOf(G__20301);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20303 = Symbol;
return goog.typeOf(G__20303);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13605__auto___20305 = len;
var i_20306 = (0);
while(true){
if((i_20306 < n__13605__auto___20305)){
(new_arr[i_20306] = (arr[i_20306]));

var G__20307 = (i_20306 + (1));
i_20306 = G__20307;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20308 = (i + (1));
i = G__20308;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20317__delegate = function (array,i,idxs){
var G__20314 = aget;
var G__20315 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20316 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20314,G__20315,G__20316) : cljs.core.apply.call(null,G__20314,G__20315,G__20316));
};
var G__20317 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20318__i = 0, G__20318__a = new Array(arguments.length -  2);
while (G__20318__i < G__20318__a.length) {G__20318__a[G__20318__i] = arguments[G__20318__i + 2]; ++G__20318__i;}
  idxs = new cljs.core.IndexedSeq(G__20318__a,0);
} 
return G__20317__delegate.call(this,array,i,idxs);};
G__20317.cljs$lang$maxFixedArity = 2;
G__20317.cljs$lang$applyTo = (function (arglist__20319){
var array = cljs.core.first(arglist__20319);
arglist__20319 = cljs.core.next(arglist__20319);
var i = cljs.core.first(arglist__20319);
var idxs = cljs.core.rest(arglist__20319);
return G__20317__delegate(array,i,idxs);
});
G__20317.cljs$core$IFn$_invoke$arity$variadic = G__20317__delegate;
return G__20317;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20320 = null;
if (arguments.length > 2) {
var G__20321__i = 0, G__20321__a = new Array(arguments.length -  2);
while (G__20321__i < G__20321__a.length) {G__20321__a[G__20321__i] = arguments[G__20321__i + 2]; ++G__20321__i;}
G__20320 = new cljs.core.IndexedSeq(G__20321__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__20330__delegate = function (array,idx,idx2,idxv){
var G__20326 = aset;
var G__20327 = (array[idx]);
var G__20328 = idx2;
var G__20329 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20326,G__20327,G__20328,G__20329) : cljs.core.apply.call(null,G__20326,G__20327,G__20328,G__20329));
};
var G__20330 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__20331__i = 0, G__20331__a = new Array(arguments.length -  3);
while (G__20331__i < G__20331__a.length) {G__20331__a[G__20331__i] = arguments[G__20331__i + 3]; ++G__20331__i;}
  idxv = new cljs.core.IndexedSeq(G__20331__a,0);
} 
return G__20330__delegate.call(this,array,idx,idx2,idxv);};
G__20330.cljs$lang$maxFixedArity = 3;
G__20330.cljs$lang$applyTo = (function (arglist__20332){
var array = cljs.core.first(arglist__20332);
arglist__20332 = cljs.core.next(arglist__20332);
var idx = cljs.core.first(arglist__20332);
arglist__20332 = cljs.core.next(arglist__20332);
var idx2 = cljs.core.first(arglist__20332);
var idxv = cljs.core.rest(arglist__20332);
return G__20330__delegate(array,idx,idx2,idxv);
});
G__20330.cljs$core$IFn$_invoke$arity$variadic = G__20330__delegate;
return G__20330;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__20333 = null;
if (arguments.length > 3) {
var G__20334__i = 0, G__20334__a = new Array(arguments.length -  3);
while (G__20334__i < G__20334__a.length) {G__20334__a[G__20334__i] = arguments[G__20334__i + 3]; ++G__20334__i;}
G__20333 = new cljs.core.IndexedSeq(G__20334__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__20333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__20340 = (function (a,x){
a.push(x);

return a;
});
var G__20341 = [];
var G__20342 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20340,G__20341,G__20342) : cljs.core.reduce.call(null,G__20340,G__20341,G__20342));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__20343__i = 0, G__20343__a = new Array(arguments.length -  2);
while (G__20343__i < G__20343__a.length) {G__20343__a[G__20343__i] = arguments[G__20343__i + 2]; ++G__20343__i;}
  args = new cljs.core.IndexedSeq(G__20343__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__20344){
var obj = cljs.core.first(arglist__20344);
arglist__20344 = cljs.core.next(arglist__20344);
var s = cljs.core.first(arglist__20344);
var args = cljs.core.rest(arglist__20344);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj20346 = {};
return obj20346;
})();


cljs.core.IFn = (function (){var obj20348 = {};
return obj20348;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20394 = x__13362__auto__;
return goog.typeOf(G__20394);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20396 = x__13362__auto__;
return goog.typeOf(G__20396);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20398 = x__13362__auto__;
return goog.typeOf(G__20398);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20400 = x__13362__auto__;
return goog.typeOf(G__20400);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20402 = x__13362__auto__;
return goog.typeOf(G__20402);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20404 = x__13362__auto__;
return goog.typeOf(G__20404);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20406 = x__13362__auto__;
return goog.typeOf(G__20406);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20408 = x__13362__auto__;
return goog.typeOf(G__20408);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20410 = x__13362__auto__;
return goog.typeOf(G__20410);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20412 = x__13362__auto__;
return goog.typeOf(G__20412);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20414 = x__13362__auto__;
return goog.typeOf(G__20414);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20416 = x__13362__auto__;
return goog.typeOf(G__20416);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20418 = x__13362__auto__;
return goog.typeOf(G__20418);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20420 = x__13362__auto__;
return goog.typeOf(G__20420);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20422 = x__13362__auto__;
return goog.typeOf(G__20422);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20424 = x__13362__auto__;
return goog.typeOf(G__20424);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20426 = x__13362__auto__;
return goog.typeOf(G__20426);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20428 = x__13362__auto__;
return goog.typeOf(G__20428);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20430 = x__13362__auto__;
return goog.typeOf(G__20430);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20432 = x__13362__auto__;
return goog.typeOf(G__20432);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20434 = x__13362__auto__;
return goog.typeOf(G__20434);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._invoke[(function (){var G__20436 = x__13362__auto__;
return goog.typeOf(G__20436);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._invoke["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj20438 = {};
return obj20438;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12706__auto__ = value;
if(and__12706__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12706__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13362__auto__ = (((value == null))?null:value);
return (function (){var or__12718__auto__ = (cljs.core._clone[(function (){var G__20442 = x__13362__auto__;
return goog.typeOf(G__20442);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._clone["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj20444 = {};
return obj20444;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._count[(function (){var G__20448 = x__13362__auto__;
return goog.typeOf(G__20448);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._count["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj20450 = {};
return obj20450;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._empty[(function (){var G__20454 = x__13362__auto__;
return goog.typeOf(G__20454);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._empty["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj20456 = {};
return obj20456;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._conj[(function (){var G__20460 = x__13362__auto__;
return goog.typeOf(G__20460);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._conj["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj20462 = {};
return obj20462;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._nth[(function (){var G__20468 = x__13362__auto__;
return goog.typeOf(G__20468);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._nth["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._nth[(function (){var G__20470 = x__13362__auto__;
return goog.typeOf(G__20470);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._nth["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj20472 = {};
return obj20472;
})();


cljs.core.ISeq = (function (){var obj20474 = {};
return obj20474;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._first[(function (){var G__20478 = x__13362__auto__;
return goog.typeOf(G__20478);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._first["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._rest[(function (){var G__20482 = x__13362__auto__;
return goog.typeOf(G__20482);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._rest["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj20484 = {};
return obj20484;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._next[(function (){var G__20488 = x__13362__auto__;
return goog.typeOf(G__20488);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._next["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj20490 = {};
return obj20490;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._lookup[(function (){var G__20496 = x__13362__auto__;
return goog.typeOf(G__20496);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._lookup["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._lookup[(function (){var G__20498 = x__13362__auto__;
return goog.typeOf(G__20498);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._lookup["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj20500 = {};
return obj20500;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__20504 = x__13362__auto__;
return goog.typeOf(G__20504);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._assoc[(function (){var G__20508 = x__13362__auto__;
return goog.typeOf(G__20508);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._assoc["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj20510 = {};
return obj20510;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._dissoc[(function (){var G__20514 = x__13362__auto__;
return goog.typeOf(G__20514);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj20516 = {};
return obj20516;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._key[(function (){var G__20520 = x__13362__auto__;
return goog.typeOf(G__20520);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._key["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._val[(function (){var G__20524 = x__13362__auto__;
return goog.typeOf(G__20524);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._val["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj20526 = {};
return obj20526;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._disjoin[(function (){var G__20530 = x__13362__auto__;
return goog.typeOf(G__20530);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj20532 = {};
return obj20532;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._peek[(function (){var G__20536 = x__13362__auto__;
return goog.typeOf(G__20536);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._peek["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._pop[(function (){var G__20540 = x__13362__auto__;
return goog.typeOf(G__20540);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._pop["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj20542 = {};
return obj20542;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._assoc_n[(function (){var G__20546 = x__13362__auto__;
return goog.typeOf(G__20546);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj20548 = {};
return obj20548;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._deref[(function (){var G__20552 = x__13362__auto__;
return goog.typeOf(G__20552);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._deref["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj20554 = {};
return obj20554;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._deref_with_timeout[(function (){var G__20558 = x__13362__auto__;
return goog.typeOf(G__20558);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj20560 = {};
return obj20560;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._meta[(function (){var G__20564 = x__13362__auto__;
return goog.typeOf(G__20564);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._meta["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj20566 = {};
return obj20566;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._with_meta[(function (){var G__20570 = x__13362__auto__;
return goog.typeOf(G__20570);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj20572 = {};
return obj20572;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._reduce[(function (){var G__20578 = x__13362__auto__;
return goog.typeOf(G__20578);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._reduce["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._reduce[(function (){var G__20580 = x__13362__auto__;
return goog.typeOf(G__20580);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._reduce["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj20582 = {};
return obj20582;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._kv_reduce[(function (){var G__20586 = x__13362__auto__;
return goog.typeOf(G__20586);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj20588 = {};
return obj20588;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._equiv[(function (){var G__20592 = x__13362__auto__;
return goog.typeOf(G__20592);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._equiv["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj20594 = {};
return obj20594;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._hash[(function (){var G__20598 = x__13362__auto__;
return goog.typeOf(G__20598);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._hash["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj20600 = {};
return obj20600;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._seq[(function (){var G__20604 = x__13362__auto__;
return goog.typeOf(G__20604);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._seq["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj20606 = {};
return obj20606;
})();


cljs.core.IList = (function (){var obj20608 = {};
return obj20608;
})();


cljs.core.IRecord = (function (){var obj20610 = {};
return obj20610;
})();


cljs.core.IReversible = (function (){var obj20612 = {};
return obj20612;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._rseq[(function (){var G__20616 = x__13362__auto__;
return goog.typeOf(G__20616);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._rseq["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj20618 = {};
return obj20618;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._sorted_seq[(function (){var G__20622 = x__13362__auto__;
return goog.typeOf(G__20622);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._sorted_seq_from[(function (){var G__20626 = x__13362__auto__;
return goog.typeOf(G__20626);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._entry_key[(function (){var G__20630 = x__13362__auto__;
return goog.typeOf(G__20630);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._comparator[(function (){var G__20634 = x__13362__auto__;
return goog.typeOf(G__20634);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._comparator["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj20636 = {};
return obj20636;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12706__auto__ = writer;
if(and__12706__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12706__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13362__auto__ = (((writer == null))?null:writer);
return (function (){var or__12718__auto__ = (cljs.core._write[(function (){var G__20640 = x__13362__auto__;
return goog.typeOf(G__20640);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._write["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12706__auto__ = writer;
if(and__12706__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12706__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13362__auto__ = (((writer == null))?null:writer);
return (function (){var or__12718__auto__ = (cljs.core._flush[(function (){var G__20644 = x__13362__auto__;
return goog.typeOf(G__20644);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._flush["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj20646 = {};
return obj20646;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._pr_writer[(function (){var G__20650 = x__13362__auto__;
return goog.typeOf(G__20650);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj20652 = {};
return obj20652;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12706__auto__ = d;
if(and__12706__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12706__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13362__auto__ = (((d == null))?null:d);
return (function (){var or__12718__auto__ = (cljs.core._realized_QMARK_[(function (){var G__20656 = x__13362__auto__;
return goog.typeOf(G__20656);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj20658 = {};
return obj20658;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._notify_watches[(function (){var G__20662 = x__13362__auto__;
return goog.typeOf(G__20662);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._add_watch[(function (){var G__20666 = x__13362__auto__;
return goog.typeOf(G__20666);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12706__auto__ = this$;
if(and__12706__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12706__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13362__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12718__auto__ = (cljs.core._remove_watch[(function (){var G__20670 = x__13362__auto__;
return goog.typeOf(G__20670);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj20672 = {};
return obj20672;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._as_transient[(function (){var G__20676 = x__13362__auto__;
return goog.typeOf(G__20676);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj20678 = {};
return obj20678;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._conj_BANG_[(function (){var G__20682 = x__13362__auto__;
return goog.typeOf(G__20682);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._persistent_BANG_[(function (){var G__20686 = x__13362__auto__;
return goog.typeOf(G__20686);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj20688 = {};
return obj20688;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._assoc_BANG_[(function (){var G__20692 = x__13362__auto__;
return goog.typeOf(G__20692);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj20694 = {};
return obj20694;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__20698 = x__13362__auto__;
return goog.typeOf(G__20698);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj20700 = {};
return obj20700;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__20704 = x__13362__auto__;
return goog.typeOf(G__20704);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._pop_BANG_[(function (){var G__20708 = x__13362__auto__;
return goog.typeOf(G__20708);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj20710 = {};
return obj20710;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12706__auto__ = tcoll;
if(and__12706__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13362__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12718__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__20714 = x__13362__auto__;
return goog.typeOf(G__20714);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj20716 = {};
return obj20716;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._compare[(function (){var G__20720 = x__13362__auto__;
return goog.typeOf(G__20720);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._compare["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj20722 = {};
return obj20722;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._drop_first[(function (){var G__20726 = x__13362__auto__;
return goog.typeOf(G__20726);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj20728 = {};
return obj20728;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._chunked_first[(function (){var G__20732 = x__13362__auto__;
return goog.typeOf(G__20732);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._chunked_rest[(function (){var G__20736 = x__13362__auto__;
return goog.typeOf(G__20736);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj20738 = {};
return obj20738;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._chunked_next[(function (){var G__20742 = x__13362__auto__;
return goog.typeOf(G__20742);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj20744 = {};
return obj20744;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._name[(function (){var G__20748 = x__13362__auto__;
return goog.typeOf(G__20748);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._name["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._namespace[(function (){var G__20752 = x__13362__auto__;
return goog.typeOf(G__20752);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._namespace["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj20754 = {};
return obj20754;
})();


cljs.core.IReset = (function (){var obj20756 = {};
return obj20756;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._reset_BANG_[(function (){var G__20760 = x__13362__auto__;
return goog.typeOf(G__20760);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj20762 = {};
return obj20762;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._swap_BANG_[(function (){var G__20772 = x__13362__auto__;
return goog.typeOf(G__20772);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._swap_BANG_[(function (){var G__20774 = x__13362__auto__;
return goog.typeOf(G__20774);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._swap_BANG_[(function (){var G__20776 = x__13362__auto__;
return goog.typeOf(G__20776);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._swap_BANG_[(function (){var G__20778 = x__13362__auto__;
return goog.typeOf(G__20778);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj20780 = {};
return obj20780;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12706__auto__ = o;
if(and__12706__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12706__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13362__auto__ = (((o == null))?null:o);
return (function (){var or__12718__auto__ = (cljs.core._vreset_BANG_[(function (){var G__20784 = x__13362__auto__;
return goog.typeOf(G__20784);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj20786 = {};
return obj20786;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12706__auto__ = coll;
if(and__12706__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12706__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13362__auto__ = (((coll == null))?null:coll);
return (function (){var or__12718__auto__ = (cljs.core._iterator[(function (){var G__20790 = x__13362__auto__;
return goog.typeOf(G__20790);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._iterator["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__20793 = (4294967295);
var G__20794 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20793,G__20794) : Math.imul.call(null,G__20793,G__20794));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__20797 = a;
var G__20798 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20797,G__20798) : Math.imul.call(null,G__20797,G__20798));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__20799 = (i + (2));
var G__20800 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__20799;
h1 = G__20800;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj20802 = {};
return obj20802;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__20803 = (i + (1));
var G__20804 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__20803;
hash = G__20804;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj20808 = {};
return obj20808;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__20811 = o;
if(G__20811){
var bit__13392__auto__ = (G__20811.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13392__auto__) || (G__20811.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__20812 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20812) : Math.floor.call(null,G__20812));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12706__auto__ = cljs.core.not(a.ns);
if(and__12706__auto__){
return b.ns;
} else {
return and__12706__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20819 = a.ns;
var G__20820 = b.ns;
return goog.array.defaultCompare(G__20819,G__20820);
})();
if(((0) === nsc)){
var G__20821 = a.name;
var G__20822 = b.name;
return goog.array.defaultCompare(G__20821,G__20822);
} else {
return nsc;
}
}
} else {
var G__20823 = a.name;
var G__20824 = b.name;
return goog.array.defaultCompare(G__20823,G__20824);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13139__auto__ = self__._hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__20826 = null;
var G__20826__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__20826__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__20826 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20826__2.call(this,self__,coll);
case 3:
return G__20826__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20826.cljs$core$IFn$_invoke$arity$2 = G__20826__2;
G__20826.cljs$core$IFn$_invoke$arity$3 = G__20826__3;
return G__20826;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args20825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20825)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__20874 = null;
var G__20874__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__20874__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__20874__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__20874__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__20874__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__20874__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__20874__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__20874__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__20874__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__20874__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__20874__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__20874__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__20874__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__20874__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__20874__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__20874__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__20874__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__20874__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__20874__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__20874__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__20874__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__20874__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20830 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20831 = a;
var G__20832 = b;
var G__20833 = c;
var G__20834 = d;
var G__20835 = e;
var G__20836 = f;
var G__20837 = g;
var G__20838 = h;
var G__20839 = i;
var G__20840 = j;
var G__20841 = k;
var G__20842 = l;
var G__20843 = m;
var G__20844 = n;
var G__20845 = o;
var G__20846 = p;
var G__20847 = q;
var G__20848 = r;
var G__20849 = s;
var G__20850 = t;
var G__20851 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851) : cljs.core.apply.call(null,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851));
});
G__20874 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20874__1.call(this,self__);
case 2:
return G__20874__2.call(this,self__,a);
case 3:
return G__20874__3.call(this,self__,a,b);
case 4:
return G__20874__4.call(this,self__,a,b,c);
case 5:
return G__20874__5.call(this,self__,a,b,c,d);
case 6:
return G__20874__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20874__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20874__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20874__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20874__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20874__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20874__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20874__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20874__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20874__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20874__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20874__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20874__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20874__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20874__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20874__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20874__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20874.cljs$core$IFn$_invoke$arity$1 = G__20874__1;
G__20874.cljs$core$IFn$_invoke$arity$2 = G__20874__2;
G__20874.cljs$core$IFn$_invoke$arity$3 = G__20874__3;
G__20874.cljs$core$IFn$_invoke$arity$4 = G__20874__4;
G__20874.cljs$core$IFn$_invoke$arity$5 = G__20874__5;
G__20874.cljs$core$IFn$_invoke$arity$6 = G__20874__6;
G__20874.cljs$core$IFn$_invoke$arity$7 = G__20874__7;
G__20874.cljs$core$IFn$_invoke$arity$8 = G__20874__8;
G__20874.cljs$core$IFn$_invoke$arity$9 = G__20874__9;
G__20874.cljs$core$IFn$_invoke$arity$10 = G__20874__10;
G__20874.cljs$core$IFn$_invoke$arity$11 = G__20874__11;
G__20874.cljs$core$IFn$_invoke$arity$12 = G__20874__12;
G__20874.cljs$core$IFn$_invoke$arity$13 = G__20874__13;
G__20874.cljs$core$IFn$_invoke$arity$14 = G__20874__14;
G__20874.cljs$core$IFn$_invoke$arity$15 = G__20874__15;
G__20874.cljs$core$IFn$_invoke$arity$16 = G__20874__16;
G__20874.cljs$core$IFn$_invoke$arity$17 = G__20874__17;
G__20874.cljs$core$IFn$_invoke$arity$18 = G__20874__18;
G__20874.cljs$core$IFn$_invoke$arity$19 = G__20874__19;
G__20874.cljs$core$IFn$_invoke$arity$20 = G__20874__20;
G__20874.cljs$core$IFn$_invoke$arity$21 = G__20874__21;
G__20874.cljs$core$IFn$_invoke$arity$22 = G__20874__22;
return G__20874;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args20829){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20829)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20852 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20853 = a;
var G__20854 = b;
var G__20855 = c;
var G__20856 = d;
var G__20857 = e;
var G__20858 = f;
var G__20859 = g;
var G__20860 = h;
var G__20861 = i;
var G__20862 = j;
var G__20863 = k;
var G__20864 = l;
var G__20865 = m;
var G__20866 = n;
var G__20867 = o;
var G__20868 = p;
var G__20869 = q;
var G__20870 = r;
var G__20871 = s;
var G__20872 = t;
var G__20873 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873) : cljs.core.apply.call(null,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__20876 = x;
if(G__20876){
var bit__13399__auto__ = null;
if(cljs.core.truth_((function (){var or__12718__auto__ = bit__13399__auto__;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return G__20876.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__20876.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20876);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20876);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__20878 = value;
if(G__20878){
var bit__13399__auto__ = (G__20878.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13399__auto__) || (G__20878.cljs$core$ICloneable$)){
return true;
} else {
if((!G__20878.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20878);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20878);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20880 = coll;
if(G__20880){
var bit__13392__auto__ = (G__20880.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13392__auto__) || (G__20880.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20882 = coll;
if(G__20882){
var bit__13392__auto__ = (G__20882.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13392__auto__) || (G__20882.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__20884 = coll;
if(G__20884){
var bit__13392__auto__ = (G__20884.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13392__auto__) || (G__20884.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20886 = coll;
if(G__20886){
var bit__13392__auto__ = (G__20886.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13392__auto__) || (G__20886.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__20891__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20892 = y;
var G__20893 = cljs.core.first(more);
var G__20894 = cljs.core.next(more);
x = G__20892;
y = G__20893;
more = G__20894;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20891 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20895__i = 0, G__20895__a = new Array(arguments.length -  2);
while (G__20895__i < G__20895__a.length) {G__20895__a[G__20895__i] = arguments[G__20895__i + 2]; ++G__20895__i;}
  more = new cljs.core.IndexedSeq(G__20895__a,0);
} 
return G__20891__delegate.call(this,x,y,more);};
G__20891.cljs$lang$maxFixedArity = 2;
G__20891.cljs$lang$applyTo = (function (arglist__20896){
var x = cljs.core.first(arglist__20896);
arglist__20896 = cljs.core.next(arglist__20896);
var y = cljs.core.first(arglist__20896);
var more = cljs.core.rest(arglist__20896);
return G__20891__delegate(x,y,more);
});
G__20891.cljs$core$IFn$_invoke$arity$variadic = G__20891__delegate;
return G__20891;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__20897 = null;
if (arguments.length > 2) {
var G__20898__i = 0, G__20898__a = new Array(arguments.length -  2);
while (G__20898__i < G__20898__a.length) {G__20898__a[G__20898__i] = arguments[G__20898__i + 2]; ++G__20898__i;}
G__20897 = new cljs.core.IndexedSeq(G__20898__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__20899 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__20899) : cljs.core.es6_iterator_seq.call(null,G__20899));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20900 = (n + (1));
var G__20901 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20902 = cljs.core.next(coll__$1);
n = G__20900;
hash_code = G__20901;
coll__$1 = G__20902;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20903 = (n + (1));
var G__20904 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20905 = cljs.core.next(coll__$1);
n = G__20903;
hash_code = G__20904;
coll__$1 = G__20905;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__20906 = o;
return goog.getUid(G__20906);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__20908 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20908) : cljs.core.deref.call(null,G__20908));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20915 = val;
var G__20916 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20915,G__20916) : f.call(null,G__20915,G__20916));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20921 = nval;
var G__20922 = (n + (1));
val = G__20921;
n = G__20922;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20917 = val__$1;
var G__20918 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20917,G__20918) : f.call(null,G__20917,G__20918));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20923 = nval;
var G__20924 = (n + (1));
val__$1 = G__20923;
n = G__20924;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20919 = val__$1;
var G__20920 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20919,G__20920) : f.call(null,G__20919,G__20920));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20925 = nval;
var G__20926 = (n + (1));
val__$1 = G__20925;
n = G__20926;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20933 = val;
var G__20934 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20933,G__20934) : f.call(null,G__20933,G__20934));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20939 = nval;
var G__20940 = (n + (1));
val = G__20939;
n = G__20940;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20935 = val__$1;
var G__20936 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20935,G__20936) : f.call(null,G__20935,G__20936));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20941 = nval;
var G__20942 = (n + (1));
val__$1 = G__20941;
n = G__20942;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20937 = val__$1;
var G__20938 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20937,G__20938) : f.call(null,G__20937,G__20938));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20943 = nval;
var G__20944 = (n + (1));
val__$1 = G__20943;
n = G__20944;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__20946 = x;
if(G__20946){
var bit__13399__auto__ = (G__20946.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13399__auto__) || (G__20946.cljs$core$ICounted$)){
return true;
} else {
if((!G__20946.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20946);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20946);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__20948 = x;
if(G__20948){
var bit__13399__auto__ = (G__20948.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13399__auto__) || (G__20948.cljs$core$IIndexed$)){
return true;
} else {
if((!G__20948.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20948);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20948);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20949 = coll__$1;
var G__20950 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20949,G__20950) : cljs.core.equiv_sequential.call(null,G__20949,G__20950));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20951 = o;
var G__20952 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20951,G__20952) : cljs.core.cons.call(null,G__20951,G__20952));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20955 = coll__$1;
var G__20956 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20955,G__20956) : cljs.core.equiv_sequential.call(null,G__20955,G__20956));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__20957 = cljs.core.List.EMPTY;
var G__20958 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__20957,G__20958) : cljs.core.with_meta.call(null,G__20957,G__20958));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__20959 = f;
var G__20960 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__20959,G__20960) : cljs.core.seq_reduce.call(null,G__20959,G__20960));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__20961 = f;
var G__20962 = start;
var G__20963 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__20961,G__20962,G__20963) : cljs.core.seq_reduce.call(null,G__20961,G__20962,G__20963));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20964 = o;
var G__20965 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20964,G__20965) : cljs.core.cons.call(null,G__20964,G__20965));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__20966 = sn;
s = G__20966;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__20971__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__20972 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__20973 = cljs.core.first(xs);
var G__20974 = cljs.core.next(xs);
coll = G__20972;
x = G__20973;
xs = G__20974;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__20971 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__20975__i = 0, G__20975__a = new Array(arguments.length -  2);
while (G__20975__i < G__20975__a.length) {G__20975__a[G__20975__i] = arguments[G__20975__i + 2]; ++G__20975__i;}
  xs = new cljs.core.IndexedSeq(G__20975__a,0);
} 
return G__20971__delegate.call(this,coll,x,xs);};
G__20971.cljs$lang$maxFixedArity = 2;
G__20971.cljs$lang$applyTo = (function (arglist__20976){
var coll = cljs.core.first(arglist__20976);
arglist__20976 = cljs.core.next(arglist__20976);
var x = cljs.core.first(arglist__20976);
var xs = cljs.core.rest(arglist__20976);
return G__20971__delegate(coll,x,xs);
});
G__20971.cljs$core$IFn$_invoke$arity$variadic = G__20971__delegate;
return G__20971;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__20977 = null;
if (arguments.length > 2) {
var G__20978__i = 0, G__20978__a = new Array(arguments.length -  2);
while (G__20978__i < G__20978__a.length) {G__20978__a[G__20978__i] = arguments[G__20978__i + 2]; ++G__20978__i;}
G__20977 = new cljs.core.IndexedSeq(G__20978__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__20977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__20979 = cljs.core.next(s);
var G__20980 = (acc + (1));
s = G__20979;
acc = G__20980;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__20982 = coll;
if(G__20982){
var bit__13392__auto__ = (G__20982.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13392__auto__) || (G__20982.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__20983 = cljs.core.next(coll);
var G__20984 = (n - (1));
coll = G__20983;
n = G__20984;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__20985 = cljs.core.next(coll);
var G__20986 = (n - (1));
var G__20987 = not_found;
coll = G__20985;
n = G__20986;
not_found = G__20987;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__20992 = coll;
if(G__20992){
var bit__13392__auto__ = (G__20992.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13392__auto__) || (G__20992.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20993 = coll;
if(G__20993){
var bit__13399__auto__ = (G__20993.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13399__auto__) || (G__20993.cljs$core$ISeq$)){
return true;
} else {
if((!G__20993.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20993);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20993);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__20994 = coll;
if(G__20994){
var bit__13392__auto__ = (G__20994.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13392__auto__) || (G__20994.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20995 = coll;
if(G__20995){
var bit__13399__auto__ = (G__20995.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13399__auto__) || (G__20995.cljs$core$ISeq$)){
return true;
} else {
if((!G__20995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20995);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__20996 = (n__$1 - (1));
var G__20997 = cljs.core.rest(xs);
n__$1 = G__20996;
xs = G__20997;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__21000 = o;
if(G__21000){
var bit__13392__auto__ = (G__21000.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13392__auto__) || (G__21000.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__21001 = o;
if(G__21001){
var bit__13392__auto__ = (G__21001.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13392__auto__) || (G__21001.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__21005__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__21006 = ret;
var G__21007 = cljs.core.first(kvs);
var G__21008 = cljs.core.second(kvs);
var G__21009 = cljs.core.nnext(kvs);
coll = G__21006;
k = G__21007;
v = G__21008;
kvs = G__21009;
continue;
} else {
return ret;
}
break;
}
};
var G__21005 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21010__i = 0, G__21010__a = new Array(arguments.length -  3);
while (G__21010__i < G__21010__a.length) {G__21010__a[G__21010__i] = arguments[G__21010__i + 3]; ++G__21010__i;}
  kvs = new cljs.core.IndexedSeq(G__21010__a,0);
} 
return G__21005__delegate.call(this,coll,k,v,kvs);};
G__21005.cljs$lang$maxFixedArity = 3;
G__21005.cljs$lang$applyTo = (function (arglist__21011){
var coll = cljs.core.first(arglist__21011);
arglist__21011 = cljs.core.next(arglist__21011);
var k = cljs.core.first(arglist__21011);
arglist__21011 = cljs.core.next(arglist__21011);
var v = cljs.core.first(arglist__21011);
var kvs = cljs.core.rest(arglist__21011);
return G__21005__delegate(coll,k,v,kvs);
});
G__21005.cljs$core$IFn$_invoke$arity$variadic = G__21005__delegate;
return G__21005;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__21012 = null;
if (arguments.length > 3) {
var G__21013__i = 0, G__21013__a = new Array(arguments.length -  3);
while (G__21013__i < G__21013__a.length) {G__21013__a[G__21013__i] = arguments[G__21013__i + 3]; ++G__21013__i;}
G__21012 = new cljs.core.IndexedSeq(G__21013__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__21012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__21016__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21017 = ret;
var G__21018 = cljs.core.first(ks);
var G__21019 = cljs.core.next(ks);
coll = G__21017;
k = G__21018;
ks = G__21019;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21016 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21020__i = 0, G__21020__a = new Array(arguments.length -  2);
while (G__21020__i < G__21020__a.length) {G__21020__a[G__21020__i] = arguments[G__21020__i + 2]; ++G__21020__i;}
  ks = new cljs.core.IndexedSeq(G__21020__a,0);
} 
return G__21016__delegate.call(this,coll,k,ks);};
G__21016.cljs$lang$maxFixedArity = 2;
G__21016.cljs$lang$applyTo = (function (arglist__21021){
var coll = cljs.core.first(arglist__21021);
arglist__21021 = cljs.core.next(arglist__21021);
var k = cljs.core.first(arglist__21021);
var ks = cljs.core.rest(arglist__21021);
return G__21016__delegate(coll,k,ks);
});
G__21016.cljs$core$IFn$_invoke$arity$variadic = G__21016__delegate;
return G__21016;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__21022 = null;
if (arguments.length > 2) {
var G__21023__i = 0, G__21023__a = new Array(arguments.length -  2);
while (G__21023__i < G__21023__a.length) {G__21023__a[G__21023__i] = arguments[G__21023__i + 2]; ++G__21023__i;}
G__21022 = new cljs.core.IndexedSeq(G__21023__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12718__auto__ = (function (){var G__21028 = f;
return goog.isFunction(G__21028);
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var G__21029 = f;
if(G__21029){
var bit__13399__auto__ = null;
if(cljs.core.truth_((function (){var or__12718__auto____$1 = bit__13399__auto__;
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
return G__21029.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__21029.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21029);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21029);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__21495 = null;
var G__21495__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__21495__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21031 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21031) : self__.afn.call(null,G__21031));
});
var G__21495__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21032 = a;
var G__21033 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21032,G__21033) : self__.afn.call(null,G__21032,G__21033));
});
var G__21495__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21034 = a;
var G__21035 = b;
var G__21036 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21034,G__21035,G__21036) : self__.afn.call(null,G__21034,G__21035,G__21036));
});
var G__21495__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21037 = a;
var G__21038 = b;
var G__21039 = c;
var G__21040 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21037,G__21038,G__21039,G__21040) : self__.afn.call(null,G__21037,G__21038,G__21039,G__21040));
});
var G__21495__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21041 = a;
var G__21042 = b;
var G__21043 = c;
var G__21044 = d;
var G__21045 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21041,G__21042,G__21043,G__21044,G__21045) : self__.afn.call(null,G__21041,G__21042,G__21043,G__21044,G__21045));
});
var G__21495__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21046 = a;
var G__21047 = b;
var G__21048 = c;
var G__21049 = d;
var G__21050 = e;
var G__21051 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21046,G__21047,G__21048,G__21049,G__21050,G__21051) : self__.afn.call(null,G__21046,G__21047,G__21048,G__21049,G__21050,G__21051));
});
var G__21495__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21052 = a;
var G__21053 = b;
var G__21054 = c;
var G__21055 = d;
var G__21056 = e;
var G__21057 = f;
var G__21058 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058) : self__.afn.call(null,G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058));
});
var G__21495__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21059 = a;
var G__21060 = b;
var G__21061 = c;
var G__21062 = d;
var G__21063 = e;
var G__21064 = f;
var G__21065 = g;
var G__21066 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066) : self__.afn.call(null,G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066));
});
var G__21495__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21067 = a;
var G__21068 = b;
var G__21069 = c;
var G__21070 = d;
var G__21071 = e;
var G__21072 = f;
var G__21073 = g;
var G__21074 = h;
var G__21075 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075) : self__.afn.call(null,G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075));
});
var G__21495__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21076 = a;
var G__21077 = b;
var G__21078 = c;
var G__21079 = d;
var G__21080 = e;
var G__21081 = f;
var G__21082 = g;
var G__21083 = h;
var G__21084 = i;
var G__21085 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21076,G__21077,G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085) : self__.afn.call(null,G__21076,G__21077,G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085));
});
var G__21495__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21086 = a;
var G__21087 = b;
var G__21088 = c;
var G__21089 = d;
var G__21090 = e;
var G__21091 = f;
var G__21092 = g;
var G__21093 = h;
var G__21094 = i;
var G__21095 = j;
var G__21096 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092,G__21093,G__21094,G__21095,G__21096) : self__.afn.call(null,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092,G__21093,G__21094,G__21095,G__21096));
});
var G__21495__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21097 = a;
var G__21098 = b;
var G__21099 = c;
var G__21100 = d;
var G__21101 = e;
var G__21102 = f;
var G__21103 = g;
var G__21104 = h;
var G__21105 = i;
var G__21106 = j;
var G__21107 = k;
var G__21108 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108) : self__.afn.call(null,G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108));
});
var G__21495__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21109 = a;
var G__21110 = b;
var G__21111 = c;
var G__21112 = d;
var G__21113 = e;
var G__21114 = f;
var G__21115 = g;
var G__21116 = h;
var G__21117 = i;
var G__21118 = j;
var G__21119 = k;
var G__21120 = l;
var G__21121 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118,G__21119,G__21120,G__21121) : self__.afn.call(null,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118,G__21119,G__21120,G__21121));
});
var G__21495__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21122 = a;
var G__21123 = b;
var G__21124 = c;
var G__21125 = d;
var G__21126 = e;
var G__21127 = f;
var G__21128 = g;
var G__21129 = h;
var G__21130 = i;
var G__21131 = j;
var G__21132 = k;
var G__21133 = l;
var G__21134 = m;
var G__21135 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133,G__21134,G__21135) : self__.afn.call(null,G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133,G__21134,G__21135));
});
var G__21495__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21136 = a;
var G__21137 = b;
var G__21138 = c;
var G__21139 = d;
var G__21140 = e;
var G__21141 = f;
var G__21142 = g;
var G__21143 = h;
var G__21144 = i;
var G__21145 = j;
var G__21146 = k;
var G__21147 = l;
var G__21148 = m;
var G__21149 = n;
var G__21150 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150) : self__.afn.call(null,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150));
});
var G__21495__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21151 = a;
var G__21152 = b;
var G__21153 = c;
var G__21154 = d;
var G__21155 = e;
var G__21156 = f;
var G__21157 = g;
var G__21158 = h;
var G__21159 = i;
var G__21160 = j;
var G__21161 = k;
var G__21162 = l;
var G__21163 = m;
var G__21164 = n;
var G__21165 = o;
var G__21166 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164,G__21165,G__21166) : self__.afn.call(null,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164,G__21165,G__21166));
});
var G__21495__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21167 = a;
var G__21168 = b;
var G__21169 = c;
var G__21170 = d;
var G__21171 = e;
var G__21172 = f;
var G__21173 = g;
var G__21174 = h;
var G__21175 = i;
var G__21176 = j;
var G__21177 = k;
var G__21178 = l;
var G__21179 = m;
var G__21180 = n;
var G__21181 = o;
var G__21182 = p;
var G__21183 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183) : self__.afn.call(null,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183));
});
var G__21495__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21184 = a;
var G__21185 = b;
var G__21186 = c;
var G__21187 = d;
var G__21188 = e;
var G__21189 = f;
var G__21190 = g;
var G__21191 = h;
var G__21192 = i;
var G__21193 = j;
var G__21194 = k;
var G__21195 = l;
var G__21196 = m;
var G__21197 = n;
var G__21198 = o;
var G__21199 = p;
var G__21200 = q;
var G__21201 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201) : self__.afn.call(null,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201));
});
var G__21495__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21202 = a;
var G__21203 = b;
var G__21204 = c;
var G__21205 = d;
var G__21206 = e;
var G__21207 = f;
var G__21208 = g;
var G__21209 = h;
var G__21210 = i;
var G__21211 = j;
var G__21212 = k;
var G__21213 = l;
var G__21214 = m;
var G__21215 = n;
var G__21216 = o;
var G__21217 = p;
var G__21218 = q;
var G__21219 = r;
var G__21220 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211,G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219,G__21220) : self__.afn.call(null,G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211,G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219,G__21220));
});
var G__21495__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21221 = a;
var G__21222 = b;
var G__21223 = c;
var G__21224 = d;
var G__21225 = e;
var G__21226 = f;
var G__21227 = g;
var G__21228 = h;
var G__21229 = i;
var G__21230 = j;
var G__21231 = k;
var G__21232 = l;
var G__21233 = m;
var G__21234 = n;
var G__21235 = o;
var G__21236 = p;
var G__21237 = q;
var G__21238 = r;
var G__21239 = s;
var G__21240 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228,G__21229,G__21230,G__21231,G__21232,G__21233,G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240) : self__.afn.call(null,G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228,G__21229,G__21230,G__21231,G__21232,G__21233,G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240));
});
var G__21495__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21241 = self__.afn;
var G__21242 = a;
var G__21243 = b;
var G__21244 = c;
var G__21245 = d;
var G__21246 = e;
var G__21247 = f;
var G__21248 = g;
var G__21249 = h;
var G__21250 = i;
var G__21251 = j;
var G__21252 = k;
var G__21253 = l;
var G__21254 = m;
var G__21255 = n;
var G__21256 = o;
var G__21257 = p;
var G__21258 = q;
var G__21259 = r;
var G__21260 = s;
var G__21261 = t;
var G__21262 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21241,G__21242,G__21243,G__21244,G__21245,G__21246,G__21247,G__21248,G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262) : cljs.core.apply.call(null,G__21241,G__21242,G__21243,G__21244,G__21245,G__21246,G__21247,G__21248,G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262));
});
G__21495 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21495__1.call(this,self__);
case 2:
return G__21495__2.call(this,self__,a);
case 3:
return G__21495__3.call(this,self__,a,b);
case 4:
return G__21495__4.call(this,self__,a,b,c);
case 5:
return G__21495__5.call(this,self__,a,b,c,d);
case 6:
return G__21495__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21495__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21495__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21495__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21495__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21495__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21495__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21495__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21495__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21495__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21495__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21495__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21495__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21495__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21495__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21495__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21495__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21495.cljs$core$IFn$_invoke$arity$1 = G__21495__1;
G__21495.cljs$core$IFn$_invoke$arity$2 = G__21495__2;
G__21495.cljs$core$IFn$_invoke$arity$3 = G__21495__3;
G__21495.cljs$core$IFn$_invoke$arity$4 = G__21495__4;
G__21495.cljs$core$IFn$_invoke$arity$5 = G__21495__5;
G__21495.cljs$core$IFn$_invoke$arity$6 = G__21495__6;
G__21495.cljs$core$IFn$_invoke$arity$7 = G__21495__7;
G__21495.cljs$core$IFn$_invoke$arity$8 = G__21495__8;
G__21495.cljs$core$IFn$_invoke$arity$9 = G__21495__9;
G__21495.cljs$core$IFn$_invoke$arity$10 = G__21495__10;
G__21495.cljs$core$IFn$_invoke$arity$11 = G__21495__11;
G__21495.cljs$core$IFn$_invoke$arity$12 = G__21495__12;
G__21495.cljs$core$IFn$_invoke$arity$13 = G__21495__13;
G__21495.cljs$core$IFn$_invoke$arity$14 = G__21495__14;
G__21495.cljs$core$IFn$_invoke$arity$15 = G__21495__15;
G__21495.cljs$core$IFn$_invoke$arity$16 = G__21495__16;
G__21495.cljs$core$IFn$_invoke$arity$17 = G__21495__17;
G__21495.cljs$core$IFn$_invoke$arity$18 = G__21495__18;
G__21495.cljs$core$IFn$_invoke$arity$19 = G__21495__19;
G__21495.cljs$core$IFn$_invoke$arity$20 = G__21495__20;
G__21495.cljs$core$IFn$_invoke$arity$21 = G__21495__21;
G__21495.cljs$core$IFn$_invoke$arity$22 = G__21495__22;
return G__21495;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args21030){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21030)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__21263 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21263) : self__.afn.call(null,G__21263));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__21264 = a;
var G__21265 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21264,G__21265) : self__.afn.call(null,G__21264,G__21265));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__21266 = a;
var G__21267 = b;
var G__21268 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21266,G__21267,G__21268) : self__.afn.call(null,G__21266,G__21267,G__21268));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__21269 = a;
var G__21270 = b;
var G__21271 = c;
var G__21272 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21269,G__21270,G__21271,G__21272) : self__.afn.call(null,G__21269,G__21270,G__21271,G__21272));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__21273 = a;
var G__21274 = b;
var G__21275 = c;
var G__21276 = d;
var G__21277 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21273,G__21274,G__21275,G__21276,G__21277) : self__.afn.call(null,G__21273,G__21274,G__21275,G__21276,G__21277));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__21278 = a;
var G__21279 = b;
var G__21280 = c;
var G__21281 = d;
var G__21282 = e;
var G__21283 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21278,G__21279,G__21280,G__21281,G__21282,G__21283) : self__.afn.call(null,G__21278,G__21279,G__21280,G__21281,G__21282,G__21283));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__21284 = a;
var G__21285 = b;
var G__21286 = c;
var G__21287 = d;
var G__21288 = e;
var G__21289 = f;
var G__21290 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290) : self__.afn.call(null,G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21291 = a;
var G__21292 = b;
var G__21293 = c;
var G__21294 = d;
var G__21295 = e;
var G__21296 = f;
var G__21297 = g;
var G__21298 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298) : self__.afn.call(null,G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21299 = a;
var G__21300 = b;
var G__21301 = c;
var G__21302 = d;
var G__21303 = e;
var G__21304 = f;
var G__21305 = g;
var G__21306 = h;
var G__21307 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21299,G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307) : self__.afn.call(null,G__21299,G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21308 = a;
var G__21309 = b;
var G__21310 = c;
var G__21311 = d;
var G__21312 = e;
var G__21313 = f;
var G__21314 = g;
var G__21315 = h;
var G__21316 = i;
var G__21317 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317) : self__.afn.call(null,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21318 = a;
var G__21319 = b;
var G__21320 = c;
var G__21321 = d;
var G__21322 = e;
var G__21323 = f;
var G__21324 = g;
var G__21325 = h;
var G__21326 = i;
var G__21327 = j;
var G__21328 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21318,G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328) : self__.afn.call(null,G__21318,G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__21329 = a;
var G__21330 = b;
var G__21331 = c;
var G__21332 = d;
var G__21333 = e;
var G__21334 = f;
var G__21335 = g;
var G__21336 = h;
var G__21337 = i;
var G__21338 = j;
var G__21339 = k;
var G__21340 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338,G__21339,G__21340) : self__.afn.call(null,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338,G__21339,G__21340));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__21341 = a;
var G__21342 = b;
var G__21343 = c;
var G__21344 = d;
var G__21345 = e;
var G__21346 = f;
var G__21347 = g;
var G__21348 = h;
var G__21349 = i;
var G__21350 = j;
var G__21351 = k;
var G__21352 = l;
var G__21353 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21341,G__21342,G__21343,G__21344,G__21345,G__21346,G__21347,G__21348,G__21349,G__21350,G__21351,G__21352,G__21353) : self__.afn.call(null,G__21341,G__21342,G__21343,G__21344,G__21345,G__21346,G__21347,G__21348,G__21349,G__21350,G__21351,G__21352,G__21353));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__21354 = a;
var G__21355 = b;
var G__21356 = c;
var G__21357 = d;
var G__21358 = e;
var G__21359 = f;
var G__21360 = g;
var G__21361 = h;
var G__21362 = i;
var G__21363 = j;
var G__21364 = k;
var G__21365 = l;
var G__21366 = m;
var G__21367 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21354,G__21355,G__21356,G__21357,G__21358,G__21359,G__21360,G__21361,G__21362,G__21363,G__21364,G__21365,G__21366,G__21367) : self__.afn.call(null,G__21354,G__21355,G__21356,G__21357,G__21358,G__21359,G__21360,G__21361,G__21362,G__21363,G__21364,G__21365,G__21366,G__21367));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__21368 = a;
var G__21369 = b;
var G__21370 = c;
var G__21371 = d;
var G__21372 = e;
var G__21373 = f;
var G__21374 = g;
var G__21375 = h;
var G__21376 = i;
var G__21377 = j;
var G__21378 = k;
var G__21379 = l;
var G__21380 = m;
var G__21381 = n;
var G__21382 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21368,G__21369,G__21370,G__21371,G__21372,G__21373,G__21374,G__21375,G__21376,G__21377,G__21378,G__21379,G__21380,G__21381,G__21382) : self__.afn.call(null,G__21368,G__21369,G__21370,G__21371,G__21372,G__21373,G__21374,G__21375,G__21376,G__21377,G__21378,G__21379,G__21380,G__21381,G__21382));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__21383 = a;
var G__21384 = b;
var G__21385 = c;
var G__21386 = d;
var G__21387 = e;
var G__21388 = f;
var G__21389 = g;
var G__21390 = h;
var G__21391 = i;
var G__21392 = j;
var G__21393 = k;
var G__21394 = l;
var G__21395 = m;
var G__21396 = n;
var G__21397 = o;
var G__21398 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21383,G__21384,G__21385,G__21386,G__21387,G__21388,G__21389,G__21390,G__21391,G__21392,G__21393,G__21394,G__21395,G__21396,G__21397,G__21398) : self__.afn.call(null,G__21383,G__21384,G__21385,G__21386,G__21387,G__21388,G__21389,G__21390,G__21391,G__21392,G__21393,G__21394,G__21395,G__21396,G__21397,G__21398));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__21399 = a;
var G__21400 = b;
var G__21401 = c;
var G__21402 = d;
var G__21403 = e;
var G__21404 = f;
var G__21405 = g;
var G__21406 = h;
var G__21407 = i;
var G__21408 = j;
var G__21409 = k;
var G__21410 = l;
var G__21411 = m;
var G__21412 = n;
var G__21413 = o;
var G__21414 = p;
var G__21415 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21399,G__21400,G__21401,G__21402,G__21403,G__21404,G__21405,G__21406,G__21407,G__21408,G__21409,G__21410,G__21411,G__21412,G__21413,G__21414,G__21415) : self__.afn.call(null,G__21399,G__21400,G__21401,G__21402,G__21403,G__21404,G__21405,G__21406,G__21407,G__21408,G__21409,G__21410,G__21411,G__21412,G__21413,G__21414,G__21415));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__21416 = a;
var G__21417 = b;
var G__21418 = c;
var G__21419 = d;
var G__21420 = e;
var G__21421 = f;
var G__21422 = g;
var G__21423 = h;
var G__21424 = i;
var G__21425 = j;
var G__21426 = k;
var G__21427 = l;
var G__21428 = m;
var G__21429 = n;
var G__21430 = o;
var G__21431 = p;
var G__21432 = q;
var G__21433 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21416,G__21417,G__21418,G__21419,G__21420,G__21421,G__21422,G__21423,G__21424,G__21425,G__21426,G__21427,G__21428,G__21429,G__21430,G__21431,G__21432,G__21433) : self__.afn.call(null,G__21416,G__21417,G__21418,G__21419,G__21420,G__21421,G__21422,G__21423,G__21424,G__21425,G__21426,G__21427,G__21428,G__21429,G__21430,G__21431,G__21432,G__21433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__21434 = a;
var G__21435 = b;
var G__21436 = c;
var G__21437 = d;
var G__21438 = e;
var G__21439 = f;
var G__21440 = g;
var G__21441 = h;
var G__21442 = i;
var G__21443 = j;
var G__21444 = k;
var G__21445 = l;
var G__21446 = m;
var G__21447 = n;
var G__21448 = o;
var G__21449 = p;
var G__21450 = q;
var G__21451 = r;
var G__21452 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21434,G__21435,G__21436,G__21437,G__21438,G__21439,G__21440,G__21441,G__21442,G__21443,G__21444,G__21445,G__21446,G__21447,G__21448,G__21449,G__21450,G__21451,G__21452) : self__.afn.call(null,G__21434,G__21435,G__21436,G__21437,G__21438,G__21439,G__21440,G__21441,G__21442,G__21443,G__21444,G__21445,G__21446,G__21447,G__21448,G__21449,G__21450,G__21451,G__21452));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__21453 = a;
var G__21454 = b;
var G__21455 = c;
var G__21456 = d;
var G__21457 = e;
var G__21458 = f;
var G__21459 = g;
var G__21460 = h;
var G__21461 = i;
var G__21462 = j;
var G__21463 = k;
var G__21464 = l;
var G__21465 = m;
var G__21466 = n;
var G__21467 = o;
var G__21468 = p;
var G__21469 = q;
var G__21470 = r;
var G__21471 = s;
var G__21472 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21453,G__21454,G__21455,G__21456,G__21457,G__21458,G__21459,G__21460,G__21461,G__21462,G__21463,G__21464,G__21465,G__21466,G__21467,G__21468,G__21469,G__21470,G__21471,G__21472) : self__.afn.call(null,G__21453,G__21454,G__21455,G__21456,G__21457,G__21458,G__21459,G__21460,G__21461,G__21462,G__21463,G__21464,G__21465,G__21466,G__21467,G__21468,G__21469,G__21470,G__21471,G__21472));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21473 = self__.afn;
var G__21474 = a;
var G__21475 = b;
var G__21476 = c;
var G__21477 = d;
var G__21478 = e;
var G__21479 = f;
var G__21480 = g;
var G__21481 = h;
var G__21482 = i;
var G__21483 = j;
var G__21484 = k;
var G__21485 = l;
var G__21486 = m;
var G__21487 = n;
var G__21488 = o;
var G__21489 = p;
var G__21490 = q;
var G__21491 = r;
var G__21492 = s;
var G__21493 = t;
var G__21494 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21473,G__21474,G__21475,G__21476,G__21477,G__21478,G__21479,G__21480,G__21481,G__21482,G__21483,G__21484,G__21485,G__21486,G__21487,G__21488,G__21489,G__21490,G__21491,G__21492,G__21493,G__21494) : cljs.core.apply.call(null,G__21473,G__21474,G__21475,G__21476,G__21477,G__21478,G__21479,G__21480,G__21481,G__21482,G__21483,G__21484,G__21485,G__21486,G__21487,G__21488,G__21489,G__21490,G__21491,G__21492,G__21493,G__21494));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__21499 = o;
if(G__21499){
var bit__13399__auto__ = (G__21499.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13399__auto__) || (G__21499.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__21499.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21499);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12706__auto__ = !((o == null));
if(and__12706__auto__){
var G__21503 = o;
if(G__21503){
var bit__13399__auto__ = (G__21503.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13399__auto__) || (G__21503.cljs$core$IMeta$)){
return true;
} else {
if((!G__21503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21503);
}
} else {
return and__12706__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__21506__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21507 = ret;
var G__21508 = cljs.core.first(ks);
var G__21509 = cljs.core.next(ks);
coll = G__21507;
k = G__21508;
ks = G__21509;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21506 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21510__i = 0, G__21510__a = new Array(arguments.length -  2);
while (G__21510__i < G__21510__a.length) {G__21510__a[G__21510__i] = arguments[G__21510__i + 2]; ++G__21510__i;}
  ks = new cljs.core.IndexedSeq(G__21510__a,0);
} 
return G__21506__delegate.call(this,coll,k,ks);};
G__21506.cljs$lang$maxFixedArity = 2;
G__21506.cljs$lang$applyTo = (function (arglist__21511){
var coll = cljs.core.first(arglist__21511);
arglist__21511 = cljs.core.next(arglist__21511);
var k = cljs.core.first(arglist__21511);
var ks = cljs.core.rest(arglist__21511);
return G__21506__delegate(coll,k,ks);
});
G__21506.cljs$core$IFn$_invoke$arity$variadic = G__21506__delegate;
return G__21506;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__21512 = null;
if (arguments.length > 2) {
var G__21513__i = 0, G__21513__a = new Array(arguments.length -  2);
while (G__21513__i < G__21513__a.length) {G__21513__a[G__21513__i] = arguments[G__21513__i + 2]; ++G__21513__i;}
G__21512 = new cljs.core.IndexedSeq(G__21513__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21515 = x;
if(G__21515){
var bit__13399__auto__ = (G__21515.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13399__auto__) || (G__21515.cljs$core$ICollection$)){
return true;
} else {
if((!G__21515.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21515);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21515);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21517 = x;
if(G__21517){
var bit__13399__auto__ = (G__21517.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13399__auto__) || (G__21517.cljs$core$ISet$)){
return true;
} else {
if((!G__21517.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21517);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__21519 = x;
if(G__21519){
var bit__13399__auto__ = (G__21519.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13399__auto__) || (G__21519.cljs$core$IAssociative$)){
return true;
} else {
if((!G__21519.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21519);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21519);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__21521 = x;
if(G__21521){
var bit__13399__auto__ = (G__21521.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13399__auto__) || (G__21521.cljs$core$ISequential$)){
return true;
} else {
if((!G__21521.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21521);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21521);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__21523 = x;
if(G__21523){
var bit__13399__auto__ = (G__21523.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13399__auto__) || (G__21523.cljs$core$ISorted$)){
return true;
} else {
if((!G__21523.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21523);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21523);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__21525 = x;
if(G__21525){
var bit__13399__auto__ = (G__21525.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13399__auto__) || (G__21525.cljs$core$IReduce$)){
return true;
} else {
if((!G__21525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21525);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21527 = x;
if(G__21527){
var bit__13399__auto__ = (G__21527.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13399__auto__) || (G__21527.cljs$core$IMap$)){
return true;
} else {
if((!G__21527.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21527);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21527);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__21529 = x;
if(G__21529){
var bit__13399__auto__ = (G__21529.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13399__auto__) || (G__21529.cljs$core$IVector$)){
return true;
} else {
if((!G__21529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21529);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__21531 = x;
if(G__21531){
var bit__13392__auto__ = (G__21531.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13392__auto__) || (G__21531.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj21537 = {};
return obj21537;
});
var js_obj__1 = (function() { 
var G__21540__delegate = function (keyvals){
var G__21538 = goog.object.create;
var G__21539 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__21538,G__21539) : cljs.core.apply.call(null,G__21538,G__21539));
};
var G__21540 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21541__i = 0, G__21541__a = new Array(arguments.length -  0);
while (G__21541__i < G__21541__a.length) {G__21541__a[G__21541__i] = arguments[G__21541__i + 0]; ++G__21541__i;}
  keyvals = new cljs.core.IndexedSeq(G__21541__a,0);
} 
return G__21540__delegate.call(this,keyvals);};
G__21540.cljs$lang$maxFixedArity = 0;
G__21540.cljs$lang$applyTo = (function (arglist__21542){
var keyvals = cljs.core.seq(arglist__21542);
return G__21540__delegate(keyvals);
});
G__21540.cljs$core$IFn$_invoke$arity$variadic = G__21540__delegate;
return G__21540;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__21543 = null;
if (arguments.length > 0) {
var G__21544__i = 0, G__21544__a = new Array(arguments.length -  0);
while (G__21544__i < G__21544__a.length) {G__21544__a[G__21544__i] = arguments[G__21544__i + 0]; ++G__21544__i;}
G__21543 = new cljs.core.IndexedSeq(G__21544__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__21543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__21547_21549 = obj;
var G__21548_21550 = ((function (G__21547_21549,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__21547_21549,keys))
;
goog.object.forEach(G__21547_21549,G__21548_21550);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21551 = (i__$1 + (1));
var G__21552 = (j__$1 + (1));
var G__21553 = (len__$1 - (1));
i__$1 = G__21551;
j__$1 = G__21552;
len__$1 = G__21553;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21554 = (i__$1 - (1));
var G__21555 = (j__$1 - (1));
var G__21556 = (len__$1 - (1));
i__$1 = G__21554;
j__$1 = G__21555;
len__$1 = G__21556;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj21558 = {};
return obj21558;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__21560 = s;
if(G__21560){
var bit__13399__auto__ = (G__21560.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13399__auto__) || (G__21560.cljs$core$ISeq$)){
return true;
} else {
if((!G__21560.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21560);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21560);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__21562 = s;
if(G__21562){
var bit__13399__auto__ = (G__21562.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13399__auto__) || (G__21562.cljs$core$ISeqable$)){
return true;
} else {
if((!G__21562.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21562);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21562);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12718__auto__ = cljs.core.fn_QMARK_(f);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var G__21566 = f;
if(G__21566){
var bit__13399__auto__ = (G__21566.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13399__auto__) || (G__21566.cljs$core$IFn$)){
return true;
} else {
if((!G__21566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21566);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__21579 = n;
return isNaN(G__21579);
})())) && (!((n === Infinity))) && (((function (){var G__21580 = n;
return parseFloat(G__21580);
})() === (function (){var G__21581 = n;
var G__21582 = (10);
return parseInt(G__21581,G__21582);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__21583__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__21584 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__21585 = etc;
s = G__21584;
xs = G__21585;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__21583 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21586__i = 0, G__21586__a = new Array(arguments.length -  2);
while (G__21586__i < G__21586__a.length) {G__21586__a[G__21586__i] = arguments[G__21586__i + 2]; ++G__21586__i;}
  more = new cljs.core.IndexedSeq(G__21586__a,0);
} 
return G__21583__delegate.call(this,x,y,more);};
G__21583.cljs$lang$maxFixedArity = 2;
G__21583.cljs$lang$applyTo = (function (arglist__21587){
var x = cljs.core.first(arglist__21587);
arglist__21587 = cljs.core.next(arglist__21587);
var y = cljs.core.first(arglist__21587);
var more = cljs.core.rest(arglist__21587);
return G__21583__delegate(x,y,more);
});
G__21583.cljs$core$IFn$_invoke$arity$variadic = G__21583__delegate;
return G__21583;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__21588 = null;
if (arguments.length > 2) {
var G__21589__i = 0, G__21589__a = new Array(arguments.length -  2);
while (G__21589__i < G__21589__a.length) {G__21589__a[G__21589__i] = arguments[G__21589__i + 2]; ++G__21589__i;}
G__21588 = new cljs.core.IndexedSeq(G__21589__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__21593 = x;
if(G__21593){
var bit__13392__auto__ = (G__21593.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13392__auto__) || (G__21593.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__21594 = x;
var G__21595 = y;
return goog.array.defaultCompare(G__21594,G__21595);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__21600 = xs;
var G__21601 = ys;
var G__21602 = len;
var G__21603 = (n + (1));
xs = G__21600;
ys = G__21601;
len = G__21602;
n = G__21603;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__21608 = x;
var G__21609 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21608,G__21609) : f.call(null,G__21608,G__21609));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__21610 = y;
var G__21611 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21610,G__21611) : f.call(null,G__21610,G__21611));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__21617 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21617) : cljs.core.to_array.call(null,G__21617));
})();
var G__21618_21620 = a;
var G__21619_21621 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__21618_21620,G__21619_21621);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__21627 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21627) : keyfn.call(null,G__21627));
})(),(function (){var G__21628 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21628) : keyfn.call(null,G__21628));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__21634 = f;
var G__21635 = cljs.core.first(s);
var G__21636 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21634,G__21635,G__21636) : cljs.core.reduce.call(null,G__21634,G__21635,G__21636));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__21637 = val__$1;
var G__21638 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21637,G__21638) : f.call(null,G__21637,G__21638));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21639 = nval;
var G__21640 = cljs.core.next(coll__$1);
val__$1 = G__21639;
coll__$1 = G__21640;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__21644 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21644) : cljs.core.to_array.call(null,G__21644));
})();
var G__21645_21647 = a;
goog.array.shuffle(G__21645_21647);

var G__21646 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__21646) : cljs.core.vec.call(null,G__21646));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__21650 = coll;
if(G__21650){
var bit__13392__auto__ = (G__21650.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13392__auto__) || (G__21650.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__21651 = coll;
if(G__21651){
var bit__13392__auto__ = (G__21651.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13392__auto__) || (G__21651.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__21660 = null;
var G__21660__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__21660__1 = (function (x){
var G__21657 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__21657) : cf.call(null,G__21657));
});
var G__21660__2 = (function (x,y){
var G__21658 = x;
var G__21659 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21658,G__21659) : f.call(null,G__21658,G__21659));
});
G__21660 = function(x,y){
switch(arguments.length){
case 0:
return G__21660__0.call(this);
case 1:
return G__21660__1.call(this,x);
case 2:
return G__21660__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21660.cljs$core$IFn$_invoke$arity$0 = G__21660__0;
G__21660.cljs$core$IFn$_invoke$arity$1 = G__21660__1;
G__21660.cljs$core$IFn$_invoke$arity$2 = G__21660__2;
return G__21660;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__21667 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21667) : xform.call(null,G__21667));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__21668 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__21668) : f__$1.call(null,G__21668));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__21669__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__21669 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21670__i = 0, G__21670__a = new Array(arguments.length -  2);
while (G__21670__i < G__21670__a.length) {G__21670__a[G__21670__i] = arguments[G__21670__i + 2]; ++G__21670__i;}
  more = new cljs.core.IndexedSeq(G__21670__a,0);
} 
return G__21669__delegate.call(this,x,y,more);};
G__21669.cljs$lang$maxFixedArity = 2;
G__21669.cljs$lang$applyTo = (function (arglist__21671){
var x = cljs.core.first(arglist__21671);
arglist__21671 = cljs.core.next(arglist__21671);
var y = cljs.core.first(arglist__21671);
var more = cljs.core.rest(arglist__21671);
return G__21669__delegate(x,y,more);
});
G__21669.cljs$core$IFn$_invoke$arity$variadic = G__21669__delegate;
return G__21669;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__21672 = null;
if (arguments.length > 2) {
var G__21673__i = 0, G__21673__a = new Array(arguments.length -  2);
while (G__21673__i < G__21673__a.length) {G__21673__a[G__21673__i] = arguments[G__21673__i + 2]; ++G__21673__i;}
G__21672 = new cljs.core.IndexedSeq(G__21673__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__21674__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__21674 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21675__i = 0, G__21675__a = new Array(arguments.length -  2);
while (G__21675__i < G__21675__a.length) {G__21675__a[G__21675__i] = arguments[G__21675__i + 2]; ++G__21675__i;}
  more = new cljs.core.IndexedSeq(G__21675__a,0);
} 
return G__21674__delegate.call(this,x,y,more);};
G__21674.cljs$lang$maxFixedArity = 2;
G__21674.cljs$lang$applyTo = (function (arglist__21676){
var x = cljs.core.first(arglist__21676);
arglist__21676 = cljs.core.next(arglist__21676);
var y = cljs.core.first(arglist__21676);
var more = cljs.core.rest(arglist__21676);
return G__21674__delegate(x,y,more);
});
G__21674.cljs$core$IFn$_invoke$arity$variadic = G__21674__delegate;
return G__21674;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__21677 = null;
if (arguments.length > 2) {
var G__21678__i = 0, G__21678__a = new Array(arguments.length -  2);
while (G__21678__i < G__21678__a.length) {G__21678__a[G__21678__i] = arguments[G__21678__i + 2]; ++G__21678__i;}
G__21677 = new cljs.core.IndexedSeq(G__21678__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__21679__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__21679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21680__i = 0, G__21680__a = new Array(arguments.length -  2);
while (G__21680__i < G__21680__a.length) {G__21680__a[G__21680__i] = arguments[G__21680__i + 2]; ++G__21680__i;}
  more = new cljs.core.IndexedSeq(G__21680__a,0);
} 
return G__21679__delegate.call(this,x,y,more);};
G__21679.cljs$lang$maxFixedArity = 2;
G__21679.cljs$lang$applyTo = (function (arglist__21681){
var x = cljs.core.first(arglist__21681);
arglist__21681 = cljs.core.next(arglist__21681);
var y = cljs.core.first(arglist__21681);
var more = cljs.core.rest(arglist__21681);
return G__21679__delegate(x,y,more);
});
G__21679.cljs$core$IFn$_invoke$arity$variadic = G__21679__delegate;
return G__21679;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__21682 = null;
if (arguments.length > 2) {
var G__21683__i = 0, G__21683__a = new Array(arguments.length -  2);
while (G__21683__i < G__21683__a.length) {G__21683__a[G__21683__i] = arguments[G__21683__i + 2]; ++G__21683__i;}
G__21682 = new cljs.core.IndexedSeq(G__21683__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__21688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21689__i = 0, G__21689__a = new Array(arguments.length -  2);
while (G__21689__i < G__21689__a.length) {G__21689__a[G__21689__i] = arguments[G__21689__i + 2]; ++G__21689__i;}
  more = new cljs.core.IndexedSeq(G__21689__a,0);
} 
return G__21688__delegate.call(this,x,y,more);};
G__21688.cljs$lang$maxFixedArity = 2;
G__21688.cljs$lang$applyTo = (function (arglist__21690){
var x = cljs.core.first(arglist__21690);
arglist__21690 = cljs.core.next(arglist__21690);
var y = cljs.core.first(arglist__21690);
var more = cljs.core.rest(arglist__21690);
return G__21688__delegate(x,y,more);
});
G__21688.cljs$core$IFn$_invoke$arity$variadic = G__21688__delegate;
return G__21688;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__21691 = null;
if (arguments.length > 2) {
var G__21692__i = 0, G__21692__a = new Array(arguments.length -  2);
while (G__21692__i < G__21692__a.length) {G__21692__a[G__21692__i] = arguments[G__21692__i + 2]; ++G__21692__i;}
G__21691 = new cljs.core.IndexedSeq(G__21692__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__21693__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__21694 = y;
var G__21695 = cljs.core.first(more);
var G__21696 = cljs.core.next(more);
x = G__21694;
y = G__21695;
more = G__21696;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21697__i = 0, G__21697__a = new Array(arguments.length -  2);
while (G__21697__i < G__21697__a.length) {G__21697__a[G__21697__i] = arguments[G__21697__i + 2]; ++G__21697__i;}
  more = new cljs.core.IndexedSeq(G__21697__a,0);
} 
return G__21693__delegate.call(this,x,y,more);};
G__21693.cljs$lang$maxFixedArity = 2;
G__21693.cljs$lang$applyTo = (function (arglist__21698){
var x = cljs.core.first(arglist__21698);
arglist__21698 = cljs.core.next(arglist__21698);
var y = cljs.core.first(arglist__21698);
var more = cljs.core.rest(arglist__21698);
return G__21693__delegate(x,y,more);
});
G__21693.cljs$core$IFn$_invoke$arity$variadic = G__21693__delegate;
return G__21693;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__21699 = null;
if (arguments.length > 2) {
var G__21700__i = 0, G__21700__a = new Array(arguments.length -  2);
while (G__21700__i < G__21700__a.length) {G__21700__a[G__21700__i] = arguments[G__21700__i + 2]; ++G__21700__i;}
G__21699 = new cljs.core.IndexedSeq(G__21700__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__21701__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__21702 = y;
var G__21703 = cljs.core.first(more);
var G__21704 = cljs.core.next(more);
x = G__21702;
y = G__21703;
more = G__21704;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21705__i = 0, G__21705__a = new Array(arguments.length -  2);
while (G__21705__i < G__21705__a.length) {G__21705__a[G__21705__i] = arguments[G__21705__i + 2]; ++G__21705__i;}
  more = new cljs.core.IndexedSeq(G__21705__a,0);
} 
return G__21701__delegate.call(this,x,y,more);};
G__21701.cljs$lang$maxFixedArity = 2;
G__21701.cljs$lang$applyTo = (function (arglist__21706){
var x = cljs.core.first(arglist__21706);
arglist__21706 = cljs.core.next(arglist__21706);
var y = cljs.core.first(arglist__21706);
var more = cljs.core.rest(arglist__21706);
return G__21701__delegate(x,y,more);
});
G__21701.cljs$core$IFn$_invoke$arity$variadic = G__21701__delegate;
return G__21701;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__21707 = null;
if (arguments.length > 2) {
var G__21708__i = 0, G__21708__a = new Array(arguments.length -  2);
while (G__21708__i < G__21708__a.length) {G__21708__a[G__21708__i] = arguments[G__21708__i + 2]; ++G__21708__i;}
G__21707 = new cljs.core.IndexedSeq(G__21708__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__21709__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__21710 = y;
var G__21711 = cljs.core.first(more);
var G__21712 = cljs.core.next(more);
x = G__21710;
y = G__21711;
more = G__21712;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21709 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21713__i = 0, G__21713__a = new Array(arguments.length -  2);
while (G__21713__i < G__21713__a.length) {G__21713__a[G__21713__i] = arguments[G__21713__i + 2]; ++G__21713__i;}
  more = new cljs.core.IndexedSeq(G__21713__a,0);
} 
return G__21709__delegate.call(this,x,y,more);};
G__21709.cljs$lang$maxFixedArity = 2;
G__21709.cljs$lang$applyTo = (function (arglist__21714){
var x = cljs.core.first(arglist__21714);
arglist__21714 = cljs.core.next(arglist__21714);
var y = cljs.core.first(arglist__21714);
var more = cljs.core.rest(arglist__21714);
return G__21709__delegate(x,y,more);
});
G__21709.cljs$core$IFn$_invoke$arity$variadic = G__21709__delegate;
return G__21709;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__21715 = null;
if (arguments.length > 2) {
var G__21716__i = 0, G__21716__a = new Array(arguments.length -  2);
while (G__21716__i < G__21716__a.length) {G__21716__a[G__21716__i] = arguments[G__21716__i + 2]; ++G__21716__i;}
G__21715 = new cljs.core.IndexedSeq(G__21716__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__21717__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__21718 = y;
var G__21719 = cljs.core.first(more);
var G__21720 = cljs.core.next(more);
x = G__21718;
y = G__21719;
more = G__21720;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21717 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21721__i = 0, G__21721__a = new Array(arguments.length -  2);
while (G__21721__i < G__21721__a.length) {G__21721__a[G__21721__i] = arguments[G__21721__i + 2]; ++G__21721__i;}
  more = new cljs.core.IndexedSeq(G__21721__a,0);
} 
return G__21717__delegate.call(this,x,y,more);};
G__21717.cljs$lang$maxFixedArity = 2;
G__21717.cljs$lang$applyTo = (function (arglist__21722){
var x = cljs.core.first(arglist__21722);
arglist__21722 = cljs.core.next(arglist__21722);
var y = cljs.core.first(arglist__21722);
var more = cljs.core.rest(arglist__21722);
return G__21717__delegate(x,y,more);
});
G__21717.cljs$core$IFn$_invoke$arity$variadic = G__21717__delegate;
return G__21717;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__21723 = null;
if (arguments.length > 2) {
var G__21724__i = 0, G__21724__a = new Array(arguments.length -  2);
while (G__21724__i < G__21724__a.length) {G__21724__a[G__21724__i] = arguments[G__21724__i + 2]; ++G__21724__i;}
G__21723 = new cljs.core.IndexedSeq(G__21724__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__13035__auto__ = x;
var y__13036__auto__ = y;
return ((x__13035__auto__ > y__13036__auto__) ? x__13035__auto__ : y__13036__auto__);
});
var max__3 = (function() { 
var G__21725__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__13035__auto__ = x;
var y__13036__auto__ = y;
return ((x__13035__auto__ > y__13036__auto__) ? x__13035__auto__ : y__13036__auto__);
})(),more);
};
var G__21725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21726__i = 0, G__21726__a = new Array(arguments.length -  2);
while (G__21726__i < G__21726__a.length) {G__21726__a[G__21726__i] = arguments[G__21726__i + 2]; ++G__21726__i;}
  more = new cljs.core.IndexedSeq(G__21726__a,0);
} 
return G__21725__delegate.call(this,x,y,more);};
G__21725.cljs$lang$maxFixedArity = 2;
G__21725.cljs$lang$applyTo = (function (arglist__21727){
var x = cljs.core.first(arglist__21727);
arglist__21727 = cljs.core.next(arglist__21727);
var y = cljs.core.first(arglist__21727);
var more = cljs.core.rest(arglist__21727);
return G__21725__delegate(x,y,more);
});
G__21725.cljs$core$IFn$_invoke$arity$variadic = G__21725__delegate;
return G__21725;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__21728 = null;
if (arguments.length > 2) {
var G__21729__i = 0, G__21729__a = new Array(arguments.length -  2);
while (G__21729__i < G__21729__a.length) {G__21729__a[G__21729__i] = arguments[G__21729__i + 2]; ++G__21729__i;}
G__21728 = new cljs.core.IndexedSeq(G__21729__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__13042__auto__ = x;
var y__13043__auto__ = y;
return ((x__13042__auto__ < y__13043__auto__) ? x__13042__auto__ : y__13043__auto__);
});
var min__3 = (function() { 
var G__21730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__13042__auto__ = x;
var y__13043__auto__ = y;
return ((x__13042__auto__ < y__13043__auto__) ? x__13042__auto__ : y__13043__auto__);
})(),more);
};
var G__21730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21731__i = 0, G__21731__a = new Array(arguments.length -  2);
while (G__21731__i < G__21731__a.length) {G__21731__a[G__21731__i] = arguments[G__21731__i + 2]; ++G__21731__i;}
  more = new cljs.core.IndexedSeq(G__21731__a,0);
} 
return G__21730__delegate.call(this,x,y,more);};
G__21730.cljs$lang$maxFixedArity = 2;
G__21730.cljs$lang$applyTo = (function (arglist__21732){
var x = cljs.core.first(arglist__21732);
arglist__21732 = cljs.core.next(arglist__21732);
var y = cljs.core.first(arglist__21732);
var more = cljs.core.rest(arglist__21732);
return G__21730__delegate(x,y,more);
});
G__21730.cljs$core$IFn$_invoke$arity$variadic = G__21730__delegate;
return G__21730;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__21733 = null;
if (arguments.length > 2) {
var G__21734__i = 0, G__21734__a = new Array(arguments.length -  2);
while (G__21734__i < G__21734__a.length) {G__21734__a[G__21734__i] = arguments[G__21734__i + 2]; ++G__21734__i;}
G__21733 = new cljs.core.IndexedSeq(G__21734__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__21735__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__21735 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21736__i = 0, G__21736__a = new Array(arguments.length -  2);
while (G__21736__i < G__21736__a.length) {G__21736__a[G__21736__i] = arguments[G__21736__i + 2]; ++G__21736__i;}
  more = new cljs.core.IndexedSeq(G__21736__a,0);
} 
return G__21735__delegate.call(this,x,y,more);};
G__21735.cljs$lang$maxFixedArity = 2;
G__21735.cljs$lang$applyTo = (function (arglist__21737){
var x = cljs.core.first(arglist__21737);
arglist__21737 = cljs.core.next(arglist__21737);
var y = cljs.core.first(arglist__21737);
var more = cljs.core.rest(arglist__21737);
return G__21735__delegate(x,y,more);
});
G__21735.cljs$core$IFn$_invoke$arity$variadic = G__21735__delegate;
return G__21735;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__21738 = null;
if (arguments.length > 2) {
var G__21739__i = 0, G__21739__a = new Array(arguments.length -  2);
while (G__21739__i < G__21739__a.length) {G__21739__a[G__21739__i] = arguments[G__21739__i + 2]; ++G__21739__i;}
G__21738 = new cljs.core.IndexedSeq(G__21739__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__21740__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__21740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21741__i = 0, G__21741__a = new Array(arguments.length -  2);
while (G__21741__i < G__21741__a.length) {G__21741__a[G__21741__i] = arguments[G__21741__i + 2]; ++G__21741__i;}
  more = new cljs.core.IndexedSeq(G__21741__a,0);
} 
return G__21740__delegate.call(this,x,y,more);};
G__21740.cljs$lang$maxFixedArity = 2;
G__21740.cljs$lang$applyTo = (function (arglist__21742){
var x = cljs.core.first(arglist__21742);
arglist__21742 = cljs.core.next(arglist__21742);
var y = cljs.core.first(arglist__21742);
var more = cljs.core.rest(arglist__21742);
return G__21740__delegate(x,y,more);
});
G__21740.cljs$core$IFn$_invoke$arity$variadic = G__21740__delegate;
return G__21740;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__21743 = null;
if (arguments.length > 2) {
var G__21744__i = 0, G__21744__a = new Array(arguments.length -  2);
while (G__21744__i < G__21744__a.length) {G__21744__a[G__21744__i] = arguments[G__21744__i + 2]; ++G__21744__i;}
G__21743 = new cljs.core.IndexedSeq(G__21744__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__21749__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21750__i = 0, G__21750__a = new Array(arguments.length -  2);
while (G__21750__i < G__21750__a.length) {G__21750__a[G__21750__i] = arguments[G__21750__i + 2]; ++G__21750__i;}
  more = new cljs.core.IndexedSeq(G__21750__a,0);
} 
return G__21749__delegate.call(this,x,y,more);};
G__21749.cljs$lang$maxFixedArity = 2;
G__21749.cljs$lang$applyTo = (function (arglist__21751){
var x = cljs.core.first(arglist__21751);
arglist__21751 = cljs.core.next(arglist__21751);
var y = cljs.core.first(arglist__21751);
var more = cljs.core.rest(arglist__21751);
return G__21749__delegate(x,y,more);
});
G__21749.cljs$core$IFn$_invoke$arity$variadic = G__21749__delegate;
return G__21749;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__21752 = null;
if (arguments.length > 2) {
var G__21753__i = 0, G__21753__a = new Array(arguments.length -  2);
while (G__21753__i < G__21753__a.length) {G__21753__a[G__21753__i] = arguments[G__21753__i + 2]; ++G__21753__i;}
G__21752 = new cljs.core.IndexedSeq(G__21753__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__21754__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__21754 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21755__i = 0, G__21755__a = new Array(arguments.length -  2);
while (G__21755__i < G__21755__a.length) {G__21755__a[G__21755__i] = arguments[G__21755__i + 2]; ++G__21755__i;}
  more = new cljs.core.IndexedSeq(G__21755__a,0);
} 
return G__21754__delegate.call(this,x,y,more);};
G__21754.cljs$lang$maxFixedArity = 2;
G__21754.cljs$lang$applyTo = (function (arglist__21756){
var x = cljs.core.first(arglist__21756);
arglist__21756 = cljs.core.next(arglist__21756);
var y = cljs.core.first(arglist__21756);
var more = cljs.core.rest(arglist__21756);
return G__21754__delegate(x,y,more);
});
G__21754.cljs$core$IFn$_invoke$arity$variadic = G__21754__delegate;
return G__21754;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__21757 = null;
if (arguments.length > 2) {
var G__21758__i = 0, G__21758__a = new Array(arguments.length -  2);
while (G__21758__i < G__21758__a.length) {G__21758__a[G__21758__i] = arguments[G__21758__i + 2]; ++G__21758__i;}
G__21757 = new cljs.core.IndexedSeq(G__21758__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__21759__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__21759 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21760__i = 0, G__21760__a = new Array(arguments.length -  2);
while (G__21760__i < G__21760__a.length) {G__21760__a[G__21760__i] = arguments[G__21760__i + 2]; ++G__21760__i;}
  more = new cljs.core.IndexedSeq(G__21760__a,0);
} 
return G__21759__delegate.call(this,x,y,more);};
G__21759.cljs$lang$maxFixedArity = 2;
G__21759.cljs$lang$applyTo = (function (arglist__21761){
var x = cljs.core.first(arglist__21761);
arglist__21761 = cljs.core.next(arglist__21761);
var y = cljs.core.first(arglist__21761);
var more = cljs.core.rest(arglist__21761);
return G__21759__delegate(x,y,more);
});
G__21759.cljs$core$IFn$_invoke$arity$variadic = G__21759__delegate;
return G__21759;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__21762 = null;
if (arguments.length > 2) {
var G__21763__i = 0, G__21763__a = new Array(arguments.length -  2);
while (G__21763__i < G__21763__a.length) {G__21763__a[G__21763__i] = arguments[G__21763__i + 2]; ++G__21763__i;}
G__21762 = new cljs.core.IndexedSeq(G__21763__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__21766 = x;
var G__21767 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__21766,G__21767) : cljs.core.mod.call(null,G__21766,G__21767));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__21768__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__21768 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21769__i = 0, G__21769__a = new Array(arguments.length -  2);
while (G__21769__i < G__21769__a.length) {G__21769__a[G__21769__i] = arguments[G__21769__i + 2]; ++G__21769__i;}
  more = new cljs.core.IndexedSeq(G__21769__a,0);
} 
return G__21768__delegate.call(this,x,y,more);};
G__21768.cljs$lang$maxFixedArity = 2;
G__21768.cljs$lang$applyTo = (function (arglist__21770){
var x = cljs.core.first(arglist__21770);
arglist__21770 = cljs.core.next(arglist__21770);
var y = cljs.core.first(arglist__21770);
var more = cljs.core.rest(arglist__21770);
return G__21768__delegate(x,y,more);
});
G__21768.cljs$core$IFn$_invoke$arity$variadic = G__21768__delegate;
return G__21768;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__21771 = null;
if (arguments.length > 2) {
var G__21772__i = 0, G__21772__a = new Array(arguments.length -  2);
while (G__21772__i < G__21772__a.length) {G__21772__a[G__21772__i] = arguments[G__21772__i + 2]; ++G__21772__i;}
G__21771 = new cljs.core.IndexedSeq(G__21772__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__21773__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__21773 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21774__i = 0, G__21774__a = new Array(arguments.length -  2);
while (G__21774__i < G__21774__a.length) {G__21774__a[G__21774__i] = arguments[G__21774__i + 2]; ++G__21774__i;}
  more = new cljs.core.IndexedSeq(G__21774__a,0);
} 
return G__21773__delegate.call(this,x,y,more);};
G__21773.cljs$lang$maxFixedArity = 2;
G__21773.cljs$lang$applyTo = (function (arglist__21775){
var x = cljs.core.first(arglist__21775);
arglist__21775 = cljs.core.next(arglist__21775);
var y = cljs.core.first(arglist__21775);
var more = cljs.core.rest(arglist__21775);
return G__21773__delegate(x,y,more);
});
G__21773.cljs$core$IFn$_invoke$arity$variadic = G__21773__delegate;
return G__21773;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__21776 = null;
if (arguments.length > 2) {
var G__21777__i = 0, G__21777__a = new Array(arguments.length -  2);
while (G__21777__i < G__21777__a.length) {G__21777__a[G__21777__i] = arguments[G__21777__i + 2]; ++G__21777__i;}
G__21776 = new cljs.core.IndexedSeq(G__21777__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__21780 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21780) : Math.floor.call(null,G__21780));
} else {
var G__21781 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21781) : Math.ceil.call(null,G__21781));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__21782__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__21782 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21783__i = 0, G__21783__a = new Array(arguments.length -  2);
while (G__21783__i < G__21783__a.length) {G__21783__a[G__21783__i] = arguments[G__21783__i + 2]; ++G__21783__i;}
  more = new cljs.core.IndexedSeq(G__21783__a,0);
} 
return G__21782__delegate.call(this,x,y,more);};
G__21782.cljs$lang$maxFixedArity = 2;
G__21782.cljs$lang$applyTo = (function (arglist__21784){
var x = cljs.core.first(arglist__21784);
arglist__21784 = cljs.core.next(arglist__21784);
var y = cljs.core.first(arglist__21784);
var more = cljs.core.rest(arglist__21784);
return G__21782__delegate(x,y,more);
});
G__21782.cljs$core$IFn$_invoke$arity$variadic = G__21782__delegate;
return G__21782;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__21785 = null;
if (arguments.length > 2) {
var G__21786__i = 0, G__21786__a = new Array(arguments.length -  2);
while (G__21786__i < G__21786__a.length) {G__21786__a[G__21786__i] = arguments[G__21786__i + 2]; ++G__21786__i;}
G__21785 = new cljs.core.IndexedSeq(G__21786__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__21787__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__21787 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21788__i = 0, G__21788__a = new Array(arguments.length -  2);
while (G__21788__i < G__21788__a.length) {G__21788__a[G__21788__i] = arguments[G__21788__i + 2]; ++G__21788__i;}
  more = new cljs.core.IndexedSeq(G__21788__a,0);
} 
return G__21787__delegate.call(this,x,y,more);};
G__21787.cljs$lang$maxFixedArity = 2;
G__21787.cljs$lang$applyTo = (function (arglist__21789){
var x = cljs.core.first(arglist__21789);
arglist__21789 = cljs.core.next(arglist__21789);
var y = cljs.core.first(arglist__21789);
var more = cljs.core.rest(arglist__21789);
return G__21787__delegate(x,y,more);
});
G__21787.cljs$core$IFn$_invoke$arity$variadic = G__21787__delegate;
return G__21787;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__21790 = null;
if (arguments.length > 2) {
var G__21791__i = 0, G__21791__a = new Array(arguments.length -  2);
while (G__21791__i < G__21791__a.length) {G__21791__a[G__21791__i] = arguments[G__21791__i + 2]; ++G__21791__i;}
G__21790 = new cljs.core.IndexedSeq(G__21791__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__21792__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__21792 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21793__i = 0, G__21793__a = new Array(arguments.length -  2);
while (G__21793__i < G__21793__a.length) {G__21793__a[G__21793__i] = arguments[G__21793__i + 2]; ++G__21793__i;}
  more = new cljs.core.IndexedSeq(G__21793__a,0);
} 
return G__21792__delegate.call(this,x,y,more);};
G__21792.cljs$lang$maxFixedArity = 2;
G__21792.cljs$lang$applyTo = (function (arglist__21794){
var x = cljs.core.first(arglist__21794);
arglist__21794 = cljs.core.next(arglist__21794);
var y = cljs.core.first(arglist__21794);
var more = cljs.core.rest(arglist__21794);
return G__21792__delegate(x,y,more);
});
G__21792.cljs$core$IFn$_invoke$arity$variadic = G__21792__delegate;
return G__21792;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__21795 = null;
if (arguments.length > 2) {
var G__21796__i = 0, G__21796__a = new Array(arguments.length -  2);
while (G__21796__i < G__21796__a.length) {G__21796__a[G__21796__i] = arguments[G__21796__i + 2]; ++G__21796__i;}
G__21795 = new cljs.core.IndexedSeq(G__21796__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__21797__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__21797 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21798__i = 0, G__21798__a = new Array(arguments.length -  2);
while (G__21798__i < G__21798__a.length) {G__21798__a[G__21798__i] = arguments[G__21798__i + 2]; ++G__21798__i;}
  more = new cljs.core.IndexedSeq(G__21798__a,0);
} 
return G__21797__delegate.call(this,x,y,more);};
G__21797.cljs$lang$maxFixedArity = 2;
G__21797.cljs$lang$applyTo = (function (arglist__21799){
var x = cljs.core.first(arglist__21799);
arglist__21799 = cljs.core.next(arglist__21799);
var y = cljs.core.first(arglist__21799);
var more = cljs.core.rest(arglist__21799);
return G__21797__delegate(x,y,more);
});
G__21797.cljs$core$IFn$_invoke$arity$variadic = G__21797__delegate;
return G__21797;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__21800 = null;
if (arguments.length > 2) {
var G__21801__i = 0, G__21801__a = new Array(arguments.length -  2);
while (G__21801__i < G__21801__a.length) {G__21801__a[G__21801__i] = arguments[G__21801__i + 2]; ++G__21801__i;}
G__21800 = new cljs.core.IndexedSeq(G__21801__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__21806__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21807 = y;
var G__21808 = cljs.core.first(more);
var G__21809 = cljs.core.next(more);
x = G__21807;
y = G__21808;
more = G__21809;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21806 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21810__i = 0, G__21810__a = new Array(arguments.length -  2);
while (G__21810__i < G__21810__a.length) {G__21810__a[G__21810__i] = arguments[G__21810__i + 2]; ++G__21810__i;}
  more = new cljs.core.IndexedSeq(G__21810__a,0);
} 
return G__21806__delegate.call(this,x,y,more);};
G__21806.cljs$lang$maxFixedArity = 2;
G__21806.cljs$lang$applyTo = (function (arglist__21811){
var x = cljs.core.first(arglist__21811);
arglist__21811 = cljs.core.next(arglist__21811);
var y = cljs.core.first(arglist__21811);
var more = cljs.core.rest(arglist__21811);
return G__21806__delegate(x,y,more);
});
G__21806.cljs$core$IFn$_invoke$arity$variadic = G__21806__delegate;
return G__21806;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__21812 = null;
if (arguments.length > 2) {
var G__21813__i = 0, G__21813__a = new Array(arguments.length -  2);
while (G__21813__i < G__21813__a.length) {G__21813__a[G__21813__i] = arguments[G__21813__i + 2]; ++G__21813__i;}
G__21812 = new cljs.core.IndexedSeq(G__21813__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__21814 = (n__$1 - (1));
var G__21815 = cljs.core.next(xs);
n__$1 = G__21814;
xs = G__21815;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__21819 = x;
return goog.string.buildString(G__21819);
}
});
var str__2 = (function() { 
var G__21820__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__21821 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__21822 = cljs.core.next(more);
sb = G__21821;
more = G__21822;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__21820 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__21823__i = 0, G__21823__a = new Array(arguments.length -  1);
while (G__21823__i < G__21823__a.length) {G__21823__a[G__21823__i] = arguments[G__21823__i + 1]; ++G__21823__i;}
  ys = new cljs.core.IndexedSeq(G__21823__a,0);
} 
return G__21820__delegate.call(this,x,ys);};
G__21820.cljs$lang$maxFixedArity = 1;
G__21820.cljs$lang$applyTo = (function (arglist__21824){
var x = cljs.core.first(arglist__21824);
var ys = cljs.core.rest(arglist__21824);
return G__21820__delegate(x,ys);
});
G__21820.cljs$core$IFn$_invoke$arity$variadic = G__21820__delegate;
return G__21820;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__21825 = null;
if (arguments.length > 1) {
var G__21826__i = 0, G__21826__a = new Array(arguments.length -  1);
while (G__21826__i < G__21826__a.length) {G__21826__a[G__21826__i] = arguments[G__21826__i + 1]; ++G__21826__i;}
G__21825 = new cljs.core.IndexedSeq(G__21826__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__21827 = cljs.core.next(xs);
var G__21828 = cljs.core.next(ys);
xs = G__21827;
ys = G__21828;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__21829 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__21830 = cljs.core.next(s);
res = G__21829;
s = G__21830;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__21835 = ((h + (cljs.core.hash((function (){var G__21833 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21833) : cljs.core.key.call(null,G__21833));
})()) ^ cljs.core.hash((function (){var G__21834 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21834) : cljs.core.val.call(null,G__21834));
})()))) % (4503599627370496));
var G__21836 = cljs.core.next(s);
h = G__21835;
s = G__21836;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__21837 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__21838 = cljs.core.next(s__$1);
h = G__21837;
s__$1 = G__21838;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__21849_21859 = cljs.core.seq(fn_map);
var chunk__21850_21860 = null;
var count__21851_21861 = (0);
var i__21852_21862 = (0);
while(true){
if((i__21852_21862 < count__21851_21861)){
var vec__21853_21863 = chunk__21850_21860.cljs$core$IIndexed$_nth$arity$2(null,i__21852_21862);
var key_name_21864 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21853_21863,(0),null);
var f_21865 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21853_21863,(1),null);
var str_name_21866 = (function (){var G__21854 = key_name_21864;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21854) : cljs.core.name.call(null,G__21854));
})();
(obj[str_name_21866] = f_21865);

var G__21867 = seq__21849_21859;
var G__21868 = chunk__21850_21860;
var G__21869 = count__21851_21861;
var G__21870 = (i__21852_21862 + (1));
seq__21849_21859 = G__21867;
chunk__21850_21860 = G__21868;
count__21851_21861 = G__21869;
i__21852_21862 = G__21870;
continue;
} else {
var temp__4126__auto___21871 = cljs.core.seq(seq__21849_21859);
if(temp__4126__auto___21871){
var seq__21849_21872__$1 = temp__4126__auto___21871;
if(cljs.core.chunked_seq_QMARK_(seq__21849_21872__$1)){
var c__13505__auto___21873 = (function (){var G__21855 = seq__21849_21872__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__21855) : cljs.core.chunk_first.call(null,G__21855));
})();
var G__21874 = (function (){var G__21856 = seq__21849_21872__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__21856) : cljs.core.chunk_rest.call(null,G__21856));
})();
var G__21875 = c__13505__auto___21873;
var G__21876 = cljs.core.count(c__13505__auto___21873);
var G__21877 = (0);
seq__21849_21859 = G__21874;
chunk__21850_21860 = G__21875;
count__21851_21861 = G__21876;
i__21852_21862 = G__21877;
continue;
} else {
var vec__21857_21878 = cljs.core.first(seq__21849_21872__$1);
var key_name_21879 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21857_21878,(0),null);
var f_21880 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21857_21878,(1),null);
var str_name_21881 = (function (){var G__21858 = key_name_21879;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21858) : cljs.core.name.call(null,G__21858));
})();
(obj[str_name_21881] = f_21880);

var G__21882 = cljs.core.next(seq__21849_21872__$1);
var G__21883 = null;
var G__21884 = (0);
var G__21885 = (0);
seq__21849_21859 = G__21882;
chunk__21850_21860 = G__21883;
count__21851_21861 = G__21884;
i__21852_21862 = G__21885;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__21887 = coll;
if(G__21887){
var bit__13399__auto__ = (G__21887.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13399__auto__) || (G__21887.cljs$core$IReversible$)){
return true;
} else {
if((!G__21887.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21887);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21887);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__21888 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__21888;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__21889 = (i - (1));
var G__21890 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__21889;
r = G__21890;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__21891__i = 0, G__21891__a = new Array(arguments.length -  0);
while (G__21891__i < G__21891__a.length) {G__21891__a[G__21891__i] = arguments[G__21891__i + 0]; ++G__21891__i;}
  xs = new cljs.core.IndexedSeq(G__21891__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__21892){
var xs = cljs.core.seq(arglist__21892);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12718__auto__ = (coll == null);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var G__21896 = coll;
if(G__21896){
var bit__13392__auto__ = (G__21896.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13392__auto__) || (G__21896.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__21898 = x;
if(G__21898){
var bit__13399__auto__ = (G__21898.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13399__auto__) || (G__21898.cljs$core$IList$)){
return true;
} else {
if((!G__21898.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21898);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21898);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12706__auto__ = cljs.core.not(a.ns);
if(and__12706__auto__){
return b.ns;
} else {
return and__12706__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21905 = a.ns;
var G__21906 = b.ns;
return goog.array.defaultCompare(G__21905,G__21906);
})();
if(((0) === nsc)){
var G__21907 = a.name;
var G__21908 = b.name;
return goog.array.defaultCompare(G__21907,G__21908);
} else {
return nsc;
}
}
} else {
var G__21909 = a.name;
var G__21910 = b.name;
return goog.array.defaultCompare(G__21909,G__21910);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13139__auto__ = self__._hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__21912 = null;
var G__21912__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__21912__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__21912 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21912__2.call(this,self__,coll);
case 3:
return G__21912__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21912.cljs$core$IFn$_invoke$arity$2 = G__21912__2;
G__21912.cljs$core$IFn$_invoke$arity$3 = G__21912__3;
return G__21912;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args21911){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21911)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__21914 = x;
if(G__21914){
var bit__13392__auto__ = (G__21914.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13392__auto__) || (G__21914.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__21916 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21916) : cljs.core.name.call(null,G__21916));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__21917 = ls.sval();
ls = G__21917;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__21919 = s;
if(G__21919){
var bit__13392__auto__ = (G__21919.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13392__auto__) || (G__21919.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__21920 = cljs.core.next(s__$1);
s__$1 = G__21920;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_21921 = (0);
var xs_21922 = cljs.core.seq(coll);
while(true){
if(xs_21922){
(ret[i_21921] = cljs.core.to_array(cljs.core.first(xs_21922)));

var G__21923 = (i_21921 + (1));
var G__21924 = cljs.core.next(xs_21922);
i_21921 = G__21923;
xs_21922 = G__21924;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21927 = (i + (1));
var G__21928 = cljs.core.next(s__$1);
i = G__21927;
s__$1 = G__21928;
continue;
} else {
return a;
}
break;
}
} else {
var n__13605__auto___21929 = size;
var i_21930 = (0);
while(true){
if((i_21930 < n__13605__auto___21929)){
(a[i_21930] = init_val_or_seq);

var G__21931 = (i_21930 + (1));
i_21930 = G__21931;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21934 = (i + (1));
var G__21935 = cljs.core.next(s__$1);
i = G__21934;
s__$1 = G__21935;
continue;
} else {
return a;
}
break;
}
} else {
var n__13605__auto___21936 = size;
var i_21937 = (0);
while(true){
if((i_21937 < n__13605__auto___21936)){
(a[i_21937] = init_val_or_seq);

var G__21938 = (i_21937 + (1));
i_21937 = G__21938;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21941 = (i + (1));
var G__21942 = cljs.core.next(s__$1);
i = G__21941;
s__$1 = G__21942;
continue;
} else {
return a;
}
break;
}
} else {
var n__13605__auto___21943 = size;
var i_21944 = (0);
while(true){
if((i_21944 < n__13605__auto___21943)){
(a[i_21944] = init_val_or_seq);

var G__21945 = (i_21944 + (1));
i_21944 = G__21945;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21948 = (i + (1));
var G__21949 = cljs.core.next(s__$1);
i = G__21948;
s__$1 = G__21949;
continue;
} else {
return a;
}
break;
}
} else {
var n__13605__auto___21950 = size;
var i_21951 = (0);
while(true){
if((i_21951 < n__13605__auto___21950)){
(a[i_21951] = init_val_or_seq);

var G__21952 = (i_21951 + (1));
i_21951 = G__21952;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__21953 = cljs.core.next(s__$1);
var G__21954 = (i - (1));
var G__21955 = (sum + (1));
s__$1 = G__21953;
i = G__21954;
sum = G__21955;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__21975__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__21975 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21976__i = 0, G__21976__a = new Array(arguments.length -  2);
while (G__21976__i < G__21976__a.length) {G__21976__a[G__21976__i] = arguments[G__21976__i + 2]; ++G__21976__i;}
  zs = new cljs.core.IndexedSeq(G__21976__a,0);
} 
return G__21975__delegate.call(this,x,y,zs);};
G__21975.cljs$lang$maxFixedArity = 2;
G__21975.cljs$lang$applyTo = (function (arglist__21977){
var x = cljs.core.first(arglist__21977);
arglist__21977 = cljs.core.next(arglist__21977);
var y = cljs.core.first(arglist__21977);
var zs = cljs.core.rest(arglist__21977);
return G__21975__delegate(x,y,zs);
});
G__21975.cljs$core$IFn$_invoke$arity$variadic = G__21975__delegate;
return G__21975;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__21978 = null;
if (arguments.length > 2) {
var G__21979__i = 0, G__21979__a = new Array(arguments.length -  2);
while (G__21979__i < G__21979__a.length) {G__21979__a[G__21979__i] = arguments[G__21979__i + 2]; ++G__21979__i;}
G__21978 = new cljs.core.IndexedSeq(G__21979__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__21980__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__21980 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__21981__i = 0, G__21981__a = new Array(arguments.length -  4);
while (G__21981__i < G__21981__a.length) {G__21981__a[G__21981__i] = arguments[G__21981__i + 4]; ++G__21981__i;}
  more = new cljs.core.IndexedSeq(G__21981__a,0);
} 
return G__21980__delegate.call(this,a,b,c,d,more);};
G__21980.cljs$lang$maxFixedArity = 4;
G__21980.cljs$lang$applyTo = (function (arglist__21982){
var a = cljs.core.first(arglist__21982);
arglist__21982 = cljs.core.next(arglist__21982);
var b = cljs.core.first(arglist__21982);
arglist__21982 = cljs.core.next(arglist__21982);
var c = cljs.core.first(arglist__21982);
arglist__21982 = cljs.core.next(arglist__21982);
var d = cljs.core.first(arglist__21982);
var more = cljs.core.rest(arglist__21982);
return G__21980__delegate(a,b,c,d,more);
});
G__21980.cljs$core$IFn$_invoke$arity$variadic = G__21980__delegate;
return G__21980;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__21983 = null;
if (arguments.length > 4) {
var G__21984__i = 0, G__21984__a = new Array(arguments.length -  4);
while (G__21984__i < G__21984__a.length) {G__21984__a[G__21984__i] = arguments[G__21984__i + 4]; ++G__21984__i;}
G__21983 = new cljs.core.IndexedSeq(G__21984__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__21983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__21985__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21986 = ntcoll;
var G__21987 = cljs.core.first(vals);
var G__21988 = cljs.core.next(vals);
tcoll = G__21986;
val = G__21987;
vals = G__21988;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21985 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21989__i = 0, G__21989__a = new Array(arguments.length -  2);
while (G__21989__i < G__21989__a.length) {G__21989__a[G__21989__i] = arguments[G__21989__i + 2]; ++G__21989__i;}
  vals = new cljs.core.IndexedSeq(G__21989__a,0);
} 
return G__21985__delegate.call(this,tcoll,val,vals);};
G__21985.cljs$lang$maxFixedArity = 2;
G__21985.cljs$lang$applyTo = (function (arglist__21990){
var tcoll = cljs.core.first(arglist__21990);
arglist__21990 = cljs.core.next(arglist__21990);
var val = cljs.core.first(arglist__21990);
var vals = cljs.core.rest(arglist__21990);
return G__21985__delegate(tcoll,val,vals);
});
G__21985.cljs$core$IFn$_invoke$arity$variadic = G__21985__delegate;
return G__21985;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__21991 = null;
if (arguments.length > 2) {
var G__21992__i = 0, G__21992__a = new Array(arguments.length -  2);
while (G__21992__i < G__21992__a.length) {G__21992__a[G__21992__i] = arguments[G__21992__i + 2]; ++G__21992__i;}
G__21991 = new cljs.core.IndexedSeq(G__21992__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__21993__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__21994 = ntcoll;
var G__21995 = cljs.core.first(kvs);
var G__21996 = cljs.core.second(kvs);
var G__21997 = cljs.core.nnext(kvs);
tcoll = G__21994;
key = G__21995;
val = G__21996;
kvs = G__21997;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21993 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21998__i = 0, G__21998__a = new Array(arguments.length -  3);
while (G__21998__i < G__21998__a.length) {G__21998__a[G__21998__i] = arguments[G__21998__i + 3]; ++G__21998__i;}
  kvs = new cljs.core.IndexedSeq(G__21998__a,0);
} 
return G__21993__delegate.call(this,tcoll,key,val,kvs);};
G__21993.cljs$lang$maxFixedArity = 3;
G__21993.cljs$lang$applyTo = (function (arglist__21999){
var tcoll = cljs.core.first(arglist__21999);
arglist__21999 = cljs.core.next(arglist__21999);
var key = cljs.core.first(arglist__21999);
arglist__21999 = cljs.core.next(arglist__21999);
var val = cljs.core.first(arglist__21999);
var kvs = cljs.core.rest(arglist__21999);
return G__21993__delegate(tcoll,key,val,kvs);
});
G__21993.cljs$core$IFn$_invoke$arity$variadic = G__21993__delegate;
return G__21993;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__22000 = null;
if (arguments.length > 3) {
var G__22001__i = 0, G__22001__a = new Array(arguments.length -  3);
while (G__22001__i < G__22001__a.length) {G__22001__a[G__22001__i] = arguments[G__22001__i + 3]; ++G__22001__i;}
G__22000 = new cljs.core.IndexedSeq(G__22001__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__22000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__22002__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__22003 = ntcoll;
var G__22004 = cljs.core.first(ks);
var G__22005 = cljs.core.next(ks);
tcoll = G__22003;
key = G__22004;
ks = G__22005;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22002 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22006__i = 0, G__22006__a = new Array(arguments.length -  2);
while (G__22006__i < G__22006__a.length) {G__22006__a[G__22006__i] = arguments[G__22006__i + 2]; ++G__22006__i;}
  ks = new cljs.core.IndexedSeq(G__22006__a,0);
} 
return G__22002__delegate.call(this,tcoll,key,ks);};
G__22002.cljs$lang$maxFixedArity = 2;
G__22002.cljs$lang$applyTo = (function (arglist__22007){
var tcoll = cljs.core.first(arglist__22007);
arglist__22007 = cljs.core.next(arglist__22007);
var key = cljs.core.first(arglist__22007);
var ks = cljs.core.rest(arglist__22007);
return G__22002__delegate(tcoll,key,ks);
});
G__22002.cljs$core$IFn$_invoke$arity$variadic = G__22002__delegate;
return G__22002;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__22008 = null;
if (arguments.length > 2) {
var G__22009__i = 0, G__22009__a = new Array(arguments.length -  2);
while (G__22009__i < G__22009__a.length) {G__22009__a[G__22009__i] = arguments[G__22009__i + 2]; ++G__22009__i;}
G__22008 = new cljs.core.IndexedSeq(G__22009__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__22008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__22010__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22011 = ntcoll;
var G__22012 = cljs.core.first(vals);
var G__22013 = cljs.core.next(vals);
tcoll = G__22011;
val = G__22012;
vals = G__22013;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22010 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22014__i = 0, G__22014__a = new Array(arguments.length -  2);
while (G__22014__i < G__22014__a.length) {G__22014__a[G__22014__i] = arguments[G__22014__i + 2]; ++G__22014__i;}
  vals = new cljs.core.IndexedSeq(G__22014__a,0);
} 
return G__22010__delegate.call(this,tcoll,val,vals);};
G__22010.cljs$lang$maxFixedArity = 2;
G__22010.cljs$lang$applyTo = (function (arglist__22015){
var tcoll = cljs.core.first(arglist__22015);
arglist__22015 = cljs.core.next(arglist__22015);
var val = cljs.core.first(arglist__22015);
var vals = cljs.core.rest(arglist__22015);
return G__22010__delegate(tcoll,val,vals);
});
G__22010.cljs$core$IFn$_invoke$arity$variadic = G__22010__delegate;
return G__22010;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__22016 = null;
if (arguments.length > 2) {
var G__22017__i = 0, G__22017__a = new Array(arguments.length -  2);
while (G__22017__i < G__22017__a.length) {G__22017__a[G__22017__i] = arguments[G__22017__i + 2]; ++G__22017__i;}
G__22016 = new cljs.core.IndexedSeq(G__22017__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13649 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13649);
} else {
var G__22228 = a13649;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22228) : f.call(null,G__22228));
}
} else {
var b13650 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13649,b13650);
} else {
var G__22229 = a13649;
var G__22230 = b13650;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22229,G__22230) : f.call(null,G__22229,G__22230));
}
} else {
var c13651 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13649,b13650,c13651);
} else {
var G__22231 = a13649;
var G__22232 = b13650;
var G__22233 = c13651;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22231,G__22232,G__22233) : f.call(null,G__22231,G__22232,G__22233));
}
} else {
var d13652 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13649,b13650,c13651,d13652);
} else {
var G__22234 = a13649;
var G__22235 = b13650;
var G__22236 = c13651;
var G__22237 = d13652;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22234,G__22235,G__22236,G__22237) : f.call(null,G__22234,G__22235,G__22236,G__22237));
}
} else {
var e13653 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13649,b13650,c13651,d13652,e13653);
} else {
var G__22238 = a13649;
var G__22239 = b13650;
var G__22240 = c13651;
var G__22241 = d13652;
var G__22242 = e13653;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22238,G__22239,G__22240,G__22241,G__22242) : f.call(null,G__22238,G__22239,G__22240,G__22241,G__22242));
}
} else {
var f13654 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13649,b13650,c13651,d13652,e13653,f13654);
} else {
var G__22243 = a13649;
var G__22244 = b13650;
var G__22245 = c13651;
var G__22246 = d13652;
var G__22247 = e13653;
var G__22248 = f13654;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22243,G__22244,G__22245,G__22246,G__22247,G__22248) : f.call(null,G__22243,G__22244,G__22245,G__22246,G__22247,G__22248));
}
} else {
var g13655 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13649,b13650,c13651,d13652,e13653,f13654,g13655);
} else {
var G__22249 = a13649;
var G__22250 = b13650;
var G__22251 = c13651;
var G__22252 = d13652;
var G__22253 = e13653;
var G__22254 = f13654;
var G__22255 = g13655;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__22249,G__22250,G__22251,G__22252,G__22253,G__22254,G__22255) : f.call(null,G__22249,G__22250,G__22251,G__22252,G__22253,G__22254,G__22255));
}
} else {
var h13656 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656);
} else {
var G__22256 = a13649;
var G__22257 = b13650;
var G__22258 = c13651;
var G__22259 = d13652;
var G__22260 = e13653;
var G__22261 = f13654;
var G__22262 = g13655;
var G__22263 = h13656;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__22256,G__22257,G__22258,G__22259,G__22260,G__22261,G__22262,G__22263) : f.call(null,G__22256,G__22257,G__22258,G__22259,G__22260,G__22261,G__22262,G__22263));
}
} else {
var i13657 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657);
} else {
var G__22264 = a13649;
var G__22265 = b13650;
var G__22266 = c13651;
var G__22267 = d13652;
var G__22268 = e13653;
var G__22269 = f13654;
var G__22270 = g13655;
var G__22271 = h13656;
var G__22272 = i13657;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__22264,G__22265,G__22266,G__22267,G__22268,G__22269,G__22270,G__22271,G__22272) : f.call(null,G__22264,G__22265,G__22266,G__22267,G__22268,G__22269,G__22270,G__22271,G__22272));
}
} else {
var j13658 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658);
} else {
var G__22273 = a13649;
var G__22274 = b13650;
var G__22275 = c13651;
var G__22276 = d13652;
var G__22277 = e13653;
var G__22278 = f13654;
var G__22279 = g13655;
var G__22280 = h13656;
var G__22281 = i13657;
var G__22282 = j13658;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__22273,G__22274,G__22275,G__22276,G__22277,G__22278,G__22279,G__22280,G__22281,G__22282) : f.call(null,G__22273,G__22274,G__22275,G__22276,G__22277,G__22278,G__22279,G__22280,G__22281,G__22282));
}
} else {
var k13659 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659);
} else {
var G__22283 = a13649;
var G__22284 = b13650;
var G__22285 = c13651;
var G__22286 = d13652;
var G__22287 = e13653;
var G__22288 = f13654;
var G__22289 = g13655;
var G__22290 = h13656;
var G__22291 = i13657;
var G__22292 = j13658;
var G__22293 = k13659;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__22283,G__22284,G__22285,G__22286,G__22287,G__22288,G__22289,G__22290,G__22291,G__22292,G__22293) : f.call(null,G__22283,G__22284,G__22285,G__22286,G__22287,G__22288,G__22289,G__22290,G__22291,G__22292,G__22293));
}
} else {
var l13660 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660);
} else {
var G__22294 = a13649;
var G__22295 = b13650;
var G__22296 = c13651;
var G__22297 = d13652;
var G__22298 = e13653;
var G__22299 = f13654;
var G__22300 = g13655;
var G__22301 = h13656;
var G__22302 = i13657;
var G__22303 = j13658;
var G__22304 = k13659;
var G__22305 = l13660;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22294,G__22295,G__22296,G__22297,G__22298,G__22299,G__22300,G__22301,G__22302,G__22303,G__22304,G__22305) : f.call(null,G__22294,G__22295,G__22296,G__22297,G__22298,G__22299,G__22300,G__22301,G__22302,G__22303,G__22304,G__22305));
}
} else {
var m13661 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661);
} else {
var G__22306 = a13649;
var G__22307 = b13650;
var G__22308 = c13651;
var G__22309 = d13652;
var G__22310 = e13653;
var G__22311 = f13654;
var G__22312 = g13655;
var G__22313 = h13656;
var G__22314 = i13657;
var G__22315 = j13658;
var G__22316 = k13659;
var G__22317 = l13660;
var G__22318 = m13661;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22306,G__22307,G__22308,G__22309,G__22310,G__22311,G__22312,G__22313,G__22314,G__22315,G__22316,G__22317,G__22318) : f.call(null,G__22306,G__22307,G__22308,G__22309,G__22310,G__22311,G__22312,G__22313,G__22314,G__22315,G__22316,G__22317,G__22318));
}
} else {
var n13662 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662);
} else {
var G__22319 = a13649;
var G__22320 = b13650;
var G__22321 = c13651;
var G__22322 = d13652;
var G__22323 = e13653;
var G__22324 = f13654;
var G__22325 = g13655;
var G__22326 = h13656;
var G__22327 = i13657;
var G__22328 = j13658;
var G__22329 = k13659;
var G__22330 = l13660;
var G__22331 = m13661;
var G__22332 = n13662;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22319,G__22320,G__22321,G__22322,G__22323,G__22324,G__22325,G__22326,G__22327,G__22328,G__22329,G__22330,G__22331,G__22332) : f.call(null,G__22319,G__22320,G__22321,G__22322,G__22323,G__22324,G__22325,G__22326,G__22327,G__22328,G__22329,G__22330,G__22331,G__22332));
}
} else {
var o13663 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663);
} else {
var G__22333 = a13649;
var G__22334 = b13650;
var G__22335 = c13651;
var G__22336 = d13652;
var G__22337 = e13653;
var G__22338 = f13654;
var G__22339 = g13655;
var G__22340 = h13656;
var G__22341 = i13657;
var G__22342 = j13658;
var G__22343 = k13659;
var G__22344 = l13660;
var G__22345 = m13661;
var G__22346 = n13662;
var G__22347 = o13663;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__22333,G__22334,G__22335,G__22336,G__22337,G__22338,G__22339,G__22340,G__22341,G__22342,G__22343,G__22344,G__22345,G__22346,G__22347) : f.call(null,G__22333,G__22334,G__22335,G__22336,G__22337,G__22338,G__22339,G__22340,G__22341,G__22342,G__22343,G__22344,G__22345,G__22346,G__22347));
}
} else {
var p13664 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663,p13664);
} else {
var G__22348 = a13649;
var G__22349 = b13650;
var G__22350 = c13651;
var G__22351 = d13652;
var G__22352 = e13653;
var G__22353 = f13654;
var G__22354 = g13655;
var G__22355 = h13656;
var G__22356 = i13657;
var G__22357 = j13658;
var G__22358 = k13659;
var G__22359 = l13660;
var G__22360 = m13661;
var G__22361 = n13662;
var G__22362 = o13663;
var G__22363 = p13664;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__22348,G__22349,G__22350,G__22351,G__22352,G__22353,G__22354,G__22355,G__22356,G__22357,G__22358,G__22359,G__22360,G__22361,G__22362,G__22363) : f.call(null,G__22348,G__22349,G__22350,G__22351,G__22352,G__22353,G__22354,G__22355,G__22356,G__22357,G__22358,G__22359,G__22360,G__22361,G__22362,G__22363));
}
} else {
var q13665 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663,p13664,q13665);
} else {
var G__22364 = a13649;
var G__22365 = b13650;
var G__22366 = c13651;
var G__22367 = d13652;
var G__22368 = e13653;
var G__22369 = f13654;
var G__22370 = g13655;
var G__22371 = h13656;
var G__22372 = i13657;
var G__22373 = j13658;
var G__22374 = k13659;
var G__22375 = l13660;
var G__22376 = m13661;
var G__22377 = n13662;
var G__22378 = o13663;
var G__22379 = p13664;
var G__22380 = q13665;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__22364,G__22365,G__22366,G__22367,G__22368,G__22369,G__22370,G__22371,G__22372,G__22373,G__22374,G__22375,G__22376,G__22377,G__22378,G__22379,G__22380) : f.call(null,G__22364,G__22365,G__22366,G__22367,G__22368,G__22369,G__22370,G__22371,G__22372,G__22373,G__22374,G__22375,G__22376,G__22377,G__22378,G__22379,G__22380));
}
} else {
var r13666 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663,p13664,q13665,r13666);
} else {
var G__22381 = a13649;
var G__22382 = b13650;
var G__22383 = c13651;
var G__22384 = d13652;
var G__22385 = e13653;
var G__22386 = f13654;
var G__22387 = g13655;
var G__22388 = h13656;
var G__22389 = i13657;
var G__22390 = j13658;
var G__22391 = k13659;
var G__22392 = l13660;
var G__22393 = m13661;
var G__22394 = n13662;
var G__22395 = o13663;
var G__22396 = p13664;
var G__22397 = q13665;
var G__22398 = r13666;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__22381,G__22382,G__22383,G__22384,G__22385,G__22386,G__22387,G__22388,G__22389,G__22390,G__22391,G__22392,G__22393,G__22394,G__22395,G__22396,G__22397,G__22398) : f.call(null,G__22381,G__22382,G__22383,G__22384,G__22385,G__22386,G__22387,G__22388,G__22389,G__22390,G__22391,G__22392,G__22393,G__22394,G__22395,G__22396,G__22397,G__22398));
}
} else {
var s13667 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663,p13664,q13665,r13666,s13667);
} else {
var G__22399 = a13649;
var G__22400 = b13650;
var G__22401 = c13651;
var G__22402 = d13652;
var G__22403 = e13653;
var G__22404 = f13654;
var G__22405 = g13655;
var G__22406 = h13656;
var G__22407 = i13657;
var G__22408 = j13658;
var G__22409 = k13659;
var G__22410 = l13660;
var G__22411 = m13661;
var G__22412 = n13662;
var G__22413 = o13663;
var G__22414 = p13664;
var G__22415 = q13665;
var G__22416 = r13666;
var G__22417 = s13667;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__22399,G__22400,G__22401,G__22402,G__22403,G__22404,G__22405,G__22406,G__22407,G__22408,G__22409,G__22410,G__22411,G__22412,G__22413,G__22414,G__22415,G__22416,G__22417) : f.call(null,G__22399,G__22400,G__22401,G__22402,G__22403,G__22404,G__22405,G__22406,G__22407,G__22408,G__22409,G__22410,G__22411,G__22412,G__22413,G__22414,G__22415,G__22416,G__22417));
}
} else {
var t13668 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13649,b13650,c13651,d13652,e13653,f13654,g13655,h13656,i13657,j13658,k13659,l13660,m13661,n13662,o13663,p13664,q13665,r13666,s13667,t13668);
} else {
var G__22418 = a13649;
var G__22419 = b13650;
var G__22420 = c13651;
var G__22421 = d13652;
var G__22422 = e13653;
var G__22423 = f13654;
var G__22424 = g13655;
var G__22425 = h13656;
var G__22426 = i13657;
var G__22427 = j13658;
var G__22428 = k13659;
var G__22429 = l13660;
var G__22430 = m13661;
var G__22431 = n13662;
var G__22432 = o13663;
var G__22433 = p13664;
var G__22434 = q13665;
var G__22435 = r13666;
var G__22436 = s13667;
var G__22437 = t13668;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__22418,G__22419,G__22420,G__22421,G__22422,G__22423,G__22424,G__22425,G__22426,G__22427,G__22428,G__22429,G__22430,G__22431,G__22432,G__22433,G__22434,G__22435,G__22436,G__22437) : f.call(null,G__22418,G__22419,G__22420,G__22421,G__22422,G__22423,G__22424,G__22425,G__22426,G__22427,G__22428,G__22429,G__22430,G__22431,G__22432,G__22433,G__22434,G__22435,G__22436,G__22437));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__22438__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__22438 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__22439__i = 0, G__22439__a = new Array(arguments.length -  5);
while (G__22439__i < G__22439__a.length) {G__22439__a[G__22439__i] = arguments[G__22439__i + 5]; ++G__22439__i;}
  args = new cljs.core.IndexedSeq(G__22439__a,0);
} 
return G__22438__delegate.call(this,f,a,b,c,d,args);};
G__22438.cljs$lang$maxFixedArity = 5;
G__22438.cljs$lang$applyTo = (function (arglist__22440){
var f = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var a = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var b = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var c = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var d = cljs.core.first(arglist__22440);
var args = cljs.core.rest(arglist__22440);
return G__22438__delegate(f,a,b,c,d,args);
});
G__22438.cljs$core$IFn$_invoke$arity$variadic = G__22438__delegate;
return G__22438;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__22441 = null;
if (arguments.length > 5) {
var G__22442__i = 0, G__22442__a = new Array(arguments.length -  5);
while (G__22442__i < G__22442__a.length) {G__22442__a[G__22442__i] = arguments[G__22442__i + 5]; ++G__22442__i;}
G__22441 = new cljs.core.IndexedSeq(G__22442__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__22441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__22458 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22458) : f.call(null,G__22458));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__22459 = cljs.core.meta(obj);
var G__22460 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22459,G__22460) : f.call(null,G__22459,G__22460));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__22461 = cljs.core.meta(obj);
var G__22462 = a;
var G__22463 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22461,G__22462,G__22463) : f.call(null,G__22461,G__22462,G__22463));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__22464 = cljs.core.meta(obj);
var G__22465 = a;
var G__22466 = b;
var G__22467 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22464,G__22465,G__22466,G__22467) : f.call(null,G__22464,G__22465,G__22466,G__22467));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__22468 = cljs.core.meta(obj);
var G__22469 = a;
var G__22470 = b;
var G__22471 = c;
var G__22472 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22468,G__22469,G__22470,G__22471,G__22472) : f.call(null,G__22468,G__22469,G__22470,G__22471,G__22472));
})());
});
var vary_meta__7 = (function() { 
var G__22473__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__22473 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__22474__i = 0, G__22474__a = new Array(arguments.length -  6);
while (G__22474__i < G__22474__a.length) {G__22474__a[G__22474__i] = arguments[G__22474__i + 6]; ++G__22474__i;}
  args = new cljs.core.IndexedSeq(G__22474__a,0);
} 
return G__22473__delegate.call(this,obj,f,a,b,c,d,args);};
G__22473.cljs$lang$maxFixedArity = 6;
G__22473.cljs$lang$applyTo = (function (arglist__22475){
var obj = cljs.core.first(arglist__22475);
arglist__22475 = cljs.core.next(arglist__22475);
var f = cljs.core.first(arglist__22475);
arglist__22475 = cljs.core.next(arglist__22475);
var a = cljs.core.first(arglist__22475);
arglist__22475 = cljs.core.next(arglist__22475);
var b = cljs.core.first(arglist__22475);
arglist__22475 = cljs.core.next(arglist__22475);
var c = cljs.core.first(arglist__22475);
arglist__22475 = cljs.core.next(arglist__22475);
var d = cljs.core.first(arglist__22475);
var args = cljs.core.rest(arglist__22475);
return G__22473__delegate(obj,f,a,b,c,d,args);
});
G__22473.cljs$core$IFn$_invoke$arity$variadic = G__22473__delegate;
return G__22473;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__22476 = null;
if (arguments.length > 6) {
var G__22477__i = 0, G__22477__a = new Array(arguments.length -  6);
while (G__22477__i < G__22477__a.length) {G__22477__a[G__22477__i] = arguments[G__22477__i + 6]; ++G__22477__i;}
G__22476 = new cljs.core.IndexedSeq(G__22477__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__22476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__22478__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__22478 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22479__i = 0, G__22479__a = new Array(arguments.length -  2);
while (G__22479__i < G__22479__a.length) {G__22479__a[G__22479__i] = arguments[G__22479__i + 2]; ++G__22479__i;}
  more = new cljs.core.IndexedSeq(G__22479__a,0);
} 
return G__22478__delegate.call(this,x,y,more);};
G__22478.cljs$lang$maxFixedArity = 2;
G__22478.cljs$lang$applyTo = (function (arglist__22480){
var x = cljs.core.first(arglist__22480);
arglist__22480 = cljs.core.next(arglist__22480);
var y = cljs.core.first(arglist__22480);
var more = cljs.core.rest(arglist__22480);
return G__22478__delegate(x,y,more);
});
G__22478.cljs$core$IFn$_invoke$arity$variadic = G__22478__delegate;
return G__22478;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__22481 = null;
if (arguments.length > 2) {
var G__22482__i = 0, G__22482__a = new Array(arguments.length -  2);
while (G__22482__i < G__22482__a.length) {G__22482__a[G__22482__i] = arguments[G__22482__i + 2]; ++G__22482__i;}
G__22481 = new cljs.core.IndexedSeq(G__22482__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t22486 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t22486 = (function (nil_iter,meta22487){
this.nil_iter = nil_iter;
this.meta22487 = meta22487;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t22486.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t22486.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t22486.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t22486.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_22488){
var self__ = this;
var _22488__$1 = this;
return self__.meta22487;
});

cljs.core.t22486.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_22488,meta22487__$1){
var self__ = this;
var _22488__$1 = this;
return (new cljs.core.t22486(self__.nil_iter,meta22487__$1));
});

cljs.core.t22486.cljs$lang$type = true;

cljs.core.t22486.cljs$lang$ctorStr = "cljs.core/t22486";

cljs.core.t22486.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/t22486");
});

cljs.core.__GT_t22486 = (function __GT_t22486(nil_iter__$1,meta22487){
return (new cljs.core.t22486(nil_iter__$1,meta22487));
});

}

return (new cljs.core.t22486(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/anil/Code/clojure/clojurescript/anildigital-io/resources/public/js/compiled/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12706__auto__ = !((lt.stepper == null));
if(and__12706__auto__){
return self__.iter.hasNext();
} else {
return and__12706__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__22489 = lt;
var G__22490 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__22489,G__22490) : self__.xform.call(null,G__22489,G__22490));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22491 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22491) : self__.xform.call(null,G__22491));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__22493 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22493) : xform.call(null,G__22493));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__22495 = cljs.core.next(iters__$1);
iters__$1 = G__22495;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13605__auto___22496 = self__.iters.length;
var i_22497 = (0);
while(true){
if((i_22497 < n__13605__auto___22496)){
(self__.nexts[i_22497] = (self__.iters[i_22497]).next());

var G__22498 = (i_22497 + (1));
i_22497 = G__22498;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12706__auto__ = !((lt.stepper == null));
if(and__12706__auto__){
return this$.hasNext();
} else {
return and__12706__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22494 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22494) : self__.xform.call(null,G__22494));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__22503 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22503) : xform.call(null,G__22503));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__22504_22508 = cljs.core.seq(colls);
var chunk__22505_22509 = null;
var count__22506_22510 = (0);
var i__22507_22511 = (0);
while(true){
if((i__22507_22511 < count__22506_22510)){
var coll_22512 = chunk__22505_22509.cljs$core$IIndexed$_nth$arity$2(null,i__22507_22511);
iters.push(cljs.core.iter(coll_22512));

var G__22513 = seq__22504_22508;
var G__22514 = chunk__22505_22509;
var G__22515 = count__22506_22510;
var G__22516 = (i__22507_22511 + (1));
seq__22504_22508 = G__22513;
chunk__22505_22509 = G__22514;
count__22506_22510 = G__22515;
i__22507_22511 = G__22516;
continue;
} else {
var temp__4126__auto___22517 = cljs.core.seq(seq__22504_22508);
if(temp__4126__auto___22517){
var seq__22504_22518__$1 = temp__4126__auto___22517;
if(cljs.core.chunked_seq_QMARK_(seq__22504_22518__$1)){
var c__13505__auto___22519 = cljs.core.chunk_first(seq__22504_22518__$1);
var G__22520 = cljs.core.chunk_rest(seq__22504_22518__$1);
var G__22521 = c__13505__auto___22519;
var G__22522 = cljs.core.count(c__13505__auto___22519);
var G__22523 = (0);
seq__22504_22508 = G__22520;
chunk__22505_22509 = G__22521;
count__22506_22510 = G__22522;
i__22507_22511 = G__22523;
continue;
} else {
var coll_22524 = cljs.core.first(seq__22504_22518__$1);
iters.push(cljs.core.iter(coll_22524));

var G__22525 = cljs.core.next(seq__22504_22518__$1);
var G__22526 = null;
var G__22527 = (0);
var G__22528 = (0);
seq__22504_22508 = G__22525;
chunk__22505_22509 = G__22526;
count__22506_22510 = G__22527;
i__22507_22511 = G__22528;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12718__auto__ = cljs.core.seq(coll);
if(or__12718__auto__){
return or__12718__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__22529__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__22529 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22530__i = 0, G__22530__a = new Array(arguments.length -  2);
while (G__22530__i < G__22530__a.length) {G__22530__a[G__22530__i] = arguments[G__22530__i + 2]; ++G__22530__i;}
  colls = new cljs.core.IndexedSeq(G__22530__a,0);
} 
return G__22529__delegate.call(this,xform,coll,colls);};
G__22529.cljs$lang$maxFixedArity = 2;
G__22529.cljs$lang$applyTo = (function (arglist__22531){
var xform = cljs.core.first(arglist__22531);
arglist__22531 = cljs.core.next(arglist__22531);
var coll = cljs.core.first(arglist__22531);
var colls = cljs.core.rest(arglist__22531);
return G__22529__delegate(xform,coll,colls);
});
G__22529.cljs$core$IFn$_invoke$arity$variadic = G__22529__delegate;
return G__22529;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__22532 = null;
if (arguments.length > 2) {
var G__22533__i = 0, G__22533__a = new Array(arguments.length -  2);
while (G__22533__i < G__22533__a.length) {G__22533__a[G__22533__i] = arguments[G__22533__i + 2]; ++G__22533__i;}
G__22532 = new cljs.core.IndexedSeq(G__22533__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__22532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__22535 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22535) : pred.call(null,G__22535));
})())){
var G__22536 = pred;
var G__22537 = cljs.core.next(coll);
pred = G__22536;
coll = G__22537;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12718__auto__ = (function (){var G__22541 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22541) : pred.call(null,G__22541));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var G__22542 = pred;
var G__22543 = cljs.core.next(coll);
pred = G__22542;
coll = G__22543;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__22550 = null;
var G__22550__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__22550__1 = (function (x){
return cljs.core.not((function (){var G__22547 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22547) : f.call(null,G__22547));
})());
});
var G__22550__2 = (function (x,y){
return cljs.core.not((function (){var G__22548 = x;
var G__22549 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22548,G__22549) : f.call(null,G__22548,G__22549));
})());
});
var G__22550__3 = (function() { 
var G__22551__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__22551 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22552__i = 0, G__22552__a = new Array(arguments.length -  2);
while (G__22552__i < G__22552__a.length) {G__22552__a[G__22552__i] = arguments[G__22552__i + 2]; ++G__22552__i;}
  zs = new cljs.core.IndexedSeq(G__22552__a,0);
} 
return G__22551__delegate.call(this,x,y,zs);};
G__22551.cljs$lang$maxFixedArity = 2;
G__22551.cljs$lang$applyTo = (function (arglist__22553){
var x = cljs.core.first(arglist__22553);
arglist__22553 = cljs.core.next(arglist__22553);
var y = cljs.core.first(arglist__22553);
var zs = cljs.core.rest(arglist__22553);
return G__22551__delegate(x,y,zs);
});
G__22551.cljs$core$IFn$_invoke$arity$variadic = G__22551__delegate;
return G__22551;
})()
;
G__22550 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__22550__0.call(this);
case 1:
return G__22550__1.call(this,x);
case 2:
return G__22550__2.call(this,x,y);
default:
var G__22554 = null;
if (arguments.length > 2) {
var G__22555__i = 0, G__22555__a = new Array(arguments.length -  2);
while (G__22555__i < G__22555__a.length) {G__22555__a[G__22555__i] = arguments[G__22555__i + 2]; ++G__22555__i;}
G__22554 = new cljs.core.IndexedSeq(G__22555__a,0);
}
return G__22550__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22550.cljs$lang$maxFixedArity = 2;
G__22550.cljs$lang$applyTo = G__22550__3.cljs$lang$applyTo;
G__22550.cljs$core$IFn$_invoke$arity$0 = G__22550__0;
G__22550.cljs$core$IFn$_invoke$arity$1 = G__22550__1;
G__22550.cljs$core$IFn$_invoke$arity$2 = G__22550__2;
G__22550.cljs$core$IFn$_invoke$arity$variadic = G__22550__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22550;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__22556__delegate = function (args){
return x;
};
var G__22556 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22557__i = 0, G__22557__a = new Array(arguments.length -  0);
while (G__22557__i < G__22557__a.length) {G__22557__a[G__22557__i] = arguments[G__22557__i + 0]; ++G__22557__i;}
  args = new cljs.core.IndexedSeq(G__22557__a,0);
} 
return G__22556__delegate.call(this,args);};
G__22556.cljs$lang$maxFixedArity = 0;
G__22556.cljs$lang$applyTo = (function (arglist__22558){
var args = cljs.core.seq(arglist__22558);
return G__22556__delegate(args);
});
G__22556.cljs$core$IFn$_invoke$arity$variadic = G__22556__delegate;
return G__22556;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__22613 = null;
var G__22613__0 = (function (){
var G__22586 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22586) : f.call(null,G__22586));
});
var G__22613__1 = (function (x){
var G__22587 = (function (){var G__22588 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22588) : g.call(null,G__22588));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22587) : f.call(null,G__22587));
});
var G__22613__2 = (function (x,y){
var G__22589 = (function (){var G__22590 = x;
var G__22591 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22590,G__22591) : g.call(null,G__22590,G__22591));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22589) : f.call(null,G__22589));
});
var G__22613__3 = (function (x,y,z){
var G__22592 = (function (){var G__22593 = x;
var G__22594 = y;
var G__22595 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22593,G__22594,G__22595) : g.call(null,G__22593,G__22594,G__22595));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22592) : f.call(null,G__22592));
});
var G__22613__4 = (function() { 
var G__22614__delegate = function (x,y,z,args){
var G__22596 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22596) : f.call(null,G__22596));
};
var G__22614 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22615__i = 0, G__22615__a = new Array(arguments.length -  3);
while (G__22615__i < G__22615__a.length) {G__22615__a[G__22615__i] = arguments[G__22615__i + 3]; ++G__22615__i;}
  args = new cljs.core.IndexedSeq(G__22615__a,0);
} 
return G__22614__delegate.call(this,x,y,z,args);};
G__22614.cljs$lang$maxFixedArity = 3;
G__22614.cljs$lang$applyTo = (function (arglist__22616){
var x = cljs.core.first(arglist__22616);
arglist__22616 = cljs.core.next(arglist__22616);
var y = cljs.core.first(arglist__22616);
arglist__22616 = cljs.core.next(arglist__22616);
var z = cljs.core.first(arglist__22616);
var args = cljs.core.rest(arglist__22616);
return G__22614__delegate(x,y,z,args);
});
G__22614.cljs$core$IFn$_invoke$arity$variadic = G__22614__delegate;
return G__22614;
})()
;
G__22613 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22613__0.call(this);
case 1:
return G__22613__1.call(this,x);
case 2:
return G__22613__2.call(this,x,y);
case 3:
return G__22613__3.call(this,x,y,z);
default:
var G__22617 = null;
if (arguments.length > 3) {
var G__22618__i = 0, G__22618__a = new Array(arguments.length -  3);
while (G__22618__i < G__22618__a.length) {G__22618__a[G__22618__i] = arguments[G__22618__i + 3]; ++G__22618__i;}
G__22617 = new cljs.core.IndexedSeq(G__22618__a,0);
}
return G__22613__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22613.cljs$lang$maxFixedArity = 3;
G__22613.cljs$lang$applyTo = G__22613__4.cljs$lang$applyTo;
G__22613.cljs$core$IFn$_invoke$arity$0 = G__22613__0;
G__22613.cljs$core$IFn$_invoke$arity$1 = G__22613__1;
G__22613.cljs$core$IFn$_invoke$arity$2 = G__22613__2;
G__22613.cljs$core$IFn$_invoke$arity$3 = G__22613__3;
G__22613.cljs$core$IFn$_invoke$arity$variadic = G__22613__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22613;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__22619 = null;
var G__22619__0 = (function (){
var G__22597 = (function (){var G__22598 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22598) : g.call(null,G__22598));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22597) : f.call(null,G__22597));
});
var G__22619__1 = (function (x){
var G__22599 = (function (){var G__22600 = (function (){var G__22601 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22601) : h.call(null,G__22601));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22600) : g.call(null,G__22600));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22599) : f.call(null,G__22599));
});
var G__22619__2 = (function (x,y){
var G__22602 = (function (){var G__22603 = (function (){var G__22604 = x;
var G__22605 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22604,G__22605) : h.call(null,G__22604,G__22605));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22603) : g.call(null,G__22603));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22602) : f.call(null,G__22602));
});
var G__22619__3 = (function (x,y,z){
var G__22606 = (function (){var G__22607 = (function (){var G__22608 = x;
var G__22609 = y;
var G__22610 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22608,G__22609,G__22610) : h.call(null,G__22608,G__22609,G__22610));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22607) : g.call(null,G__22607));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22606) : f.call(null,G__22606));
});
var G__22619__4 = (function() { 
var G__22620__delegate = function (x,y,z,args){
var G__22611 = (function (){var G__22612 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22612) : g.call(null,G__22612));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22611) : f.call(null,G__22611));
};
var G__22620 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22621__i = 0, G__22621__a = new Array(arguments.length -  3);
while (G__22621__i < G__22621__a.length) {G__22621__a[G__22621__i] = arguments[G__22621__i + 3]; ++G__22621__i;}
  args = new cljs.core.IndexedSeq(G__22621__a,0);
} 
return G__22620__delegate.call(this,x,y,z,args);};
G__22620.cljs$lang$maxFixedArity = 3;
G__22620.cljs$lang$applyTo = (function (arglist__22622){
var x = cljs.core.first(arglist__22622);
arglist__22622 = cljs.core.next(arglist__22622);
var y = cljs.core.first(arglist__22622);
arglist__22622 = cljs.core.next(arglist__22622);
var z = cljs.core.first(arglist__22622);
var args = cljs.core.rest(arglist__22622);
return G__22620__delegate(x,y,z,args);
});
G__22620.cljs$core$IFn$_invoke$arity$variadic = G__22620__delegate;
return G__22620;
})()
;
G__22619 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22619__0.call(this);
case 1:
return G__22619__1.call(this,x);
case 2:
return G__22619__2.call(this,x,y);
case 3:
return G__22619__3.call(this,x,y,z);
default:
var G__22623 = null;
if (arguments.length > 3) {
var G__22624__i = 0, G__22624__a = new Array(arguments.length -  3);
while (G__22624__i < G__22624__a.length) {G__22624__a[G__22624__i] = arguments[G__22624__i + 3]; ++G__22624__i;}
G__22623 = new cljs.core.IndexedSeq(G__22624__a,0);
}
return G__22619__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22619.cljs$lang$maxFixedArity = 3;
G__22619.cljs$lang$applyTo = G__22619__4.cljs$lang$applyTo;
G__22619.cljs$core$IFn$_invoke$arity$0 = G__22619__0;
G__22619.cljs$core$IFn$_invoke$arity$1 = G__22619__1;
G__22619.cljs$core$IFn$_invoke$arity$2 = G__22619__2;
G__22619.cljs$core$IFn$_invoke$arity$3 = G__22619__3;
G__22619.cljs$core$IFn$_invoke$arity$variadic = G__22619__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22619;
})()
});
var comp__4 = (function() { 
var G__22625__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__22626__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__22627 = cljs.core.first(fs__$2).call(null,ret);
var G__22628 = cljs.core.next(fs__$2);
ret = G__22627;
fs__$2 = G__22628;
continue;
} else {
return ret;
}
break;
}
};
var G__22626 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22629__i = 0, G__22629__a = new Array(arguments.length -  0);
while (G__22629__i < G__22629__a.length) {G__22629__a[G__22629__i] = arguments[G__22629__i + 0]; ++G__22629__i;}
  args = new cljs.core.IndexedSeq(G__22629__a,0);
} 
return G__22626__delegate.call(this,args);};
G__22626.cljs$lang$maxFixedArity = 0;
G__22626.cljs$lang$applyTo = (function (arglist__22630){
var args = cljs.core.seq(arglist__22630);
return G__22626__delegate(args);
});
G__22626.cljs$core$IFn$_invoke$arity$variadic = G__22626__delegate;
return G__22626;
})()
;
;})(fs__$1))
};
var G__22625 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22631__i = 0, G__22631__a = new Array(arguments.length -  3);
while (G__22631__i < G__22631__a.length) {G__22631__a[G__22631__i] = arguments[G__22631__i + 3]; ++G__22631__i;}
  fs = new cljs.core.IndexedSeq(G__22631__a,0);
} 
return G__22625__delegate.call(this,f1,f2,f3,fs);};
G__22625.cljs$lang$maxFixedArity = 3;
G__22625.cljs$lang$applyTo = (function (arglist__22632){
var f1 = cljs.core.first(arglist__22632);
arglist__22632 = cljs.core.next(arglist__22632);
var f2 = cljs.core.first(arglist__22632);
arglist__22632 = cljs.core.next(arglist__22632);
var f3 = cljs.core.first(arglist__22632);
var fs = cljs.core.rest(arglist__22632);
return G__22625__delegate(f1,f2,f3,fs);
});
G__22625.cljs$core$IFn$_invoke$arity$variadic = G__22625__delegate;
return G__22625;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__22633 = null;
if (arguments.length > 3) {
var G__22634__i = 0, G__22634__a = new Array(arguments.length -  3);
while (G__22634__i < G__22634__a.length) {G__22634__a[G__22634__i] = arguments[G__22634__i + 3]; ++G__22634__i;}
G__22633 = new cljs.core.IndexedSeq(G__22634__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__22633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__22719 = null;
var G__22719__0 = (function (){
var G__22677 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22677) : f.call(null,G__22677));
});
var G__22719__1 = (function (x){
var G__22678 = arg1;
var G__22679 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22678,G__22679) : f.call(null,G__22678,G__22679));
});
var G__22719__2 = (function (x,y){
var G__22680 = arg1;
var G__22681 = x;
var G__22682 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22680,G__22681,G__22682) : f.call(null,G__22680,G__22681,G__22682));
});
var G__22719__3 = (function (x,y,z){
var G__22683 = arg1;
var G__22684 = x;
var G__22685 = y;
var G__22686 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22683,G__22684,G__22685,G__22686) : f.call(null,G__22683,G__22684,G__22685,G__22686));
});
var G__22719__4 = (function() { 
var G__22720__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__22720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22721__i = 0, G__22721__a = new Array(arguments.length -  3);
while (G__22721__i < G__22721__a.length) {G__22721__a[G__22721__i] = arguments[G__22721__i + 3]; ++G__22721__i;}
  args = new cljs.core.IndexedSeq(G__22721__a,0);
} 
return G__22720__delegate.call(this,x,y,z,args);};
G__22720.cljs$lang$maxFixedArity = 3;
G__22720.cljs$lang$applyTo = (function (arglist__22722){
var x = cljs.core.first(arglist__22722);
arglist__22722 = cljs.core.next(arglist__22722);
var y = cljs.core.first(arglist__22722);
arglist__22722 = cljs.core.next(arglist__22722);
var z = cljs.core.first(arglist__22722);
var args = cljs.core.rest(arglist__22722);
return G__22720__delegate(x,y,z,args);
});
G__22720.cljs$core$IFn$_invoke$arity$variadic = G__22720__delegate;
return G__22720;
})()
;
G__22719 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22719__0.call(this);
case 1:
return G__22719__1.call(this,x);
case 2:
return G__22719__2.call(this,x,y);
case 3:
return G__22719__3.call(this,x,y,z);
default:
var G__22723 = null;
if (arguments.length > 3) {
var G__22724__i = 0, G__22724__a = new Array(arguments.length -  3);
while (G__22724__i < G__22724__a.length) {G__22724__a[G__22724__i] = arguments[G__22724__i + 3]; ++G__22724__i;}
G__22723 = new cljs.core.IndexedSeq(G__22724__a,0);
}
return G__22719__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22719.cljs$lang$maxFixedArity = 3;
G__22719.cljs$lang$applyTo = G__22719__4.cljs$lang$applyTo;
G__22719.cljs$core$IFn$_invoke$arity$0 = G__22719__0;
G__22719.cljs$core$IFn$_invoke$arity$1 = G__22719__1;
G__22719.cljs$core$IFn$_invoke$arity$2 = G__22719__2;
G__22719.cljs$core$IFn$_invoke$arity$3 = G__22719__3;
G__22719.cljs$core$IFn$_invoke$arity$variadic = G__22719__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22719;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__22725 = null;
var G__22725__0 = (function (){
var G__22687 = arg1;
var G__22688 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22687,G__22688) : f.call(null,G__22687,G__22688));
});
var G__22725__1 = (function (x){
var G__22689 = arg1;
var G__22690 = arg2;
var G__22691 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22689,G__22690,G__22691) : f.call(null,G__22689,G__22690,G__22691));
});
var G__22725__2 = (function (x,y){
var G__22692 = arg1;
var G__22693 = arg2;
var G__22694 = x;
var G__22695 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22692,G__22693,G__22694,G__22695) : f.call(null,G__22692,G__22693,G__22694,G__22695));
});
var G__22725__3 = (function (x,y,z){
var G__22696 = arg1;
var G__22697 = arg2;
var G__22698 = x;
var G__22699 = y;
var G__22700 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22696,G__22697,G__22698,G__22699,G__22700) : f.call(null,G__22696,G__22697,G__22698,G__22699,G__22700));
});
var G__22725__4 = (function() { 
var G__22726__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__22726 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22727__i = 0, G__22727__a = new Array(arguments.length -  3);
while (G__22727__i < G__22727__a.length) {G__22727__a[G__22727__i] = arguments[G__22727__i + 3]; ++G__22727__i;}
  args = new cljs.core.IndexedSeq(G__22727__a,0);
} 
return G__22726__delegate.call(this,x,y,z,args);};
G__22726.cljs$lang$maxFixedArity = 3;
G__22726.cljs$lang$applyTo = (function (arglist__22728){
var x = cljs.core.first(arglist__22728);
arglist__22728 = cljs.core.next(arglist__22728);
var y = cljs.core.first(arglist__22728);
arglist__22728 = cljs.core.next(arglist__22728);
var z = cljs.core.first(arglist__22728);
var args = cljs.core.rest(arglist__22728);
return G__22726__delegate(x,y,z,args);
});
G__22726.cljs$core$IFn$_invoke$arity$variadic = G__22726__delegate;
return G__22726;
})()
;
G__22725 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22725__0.call(this);
case 1:
return G__22725__1.call(this,x);
case 2:
return G__22725__2.call(this,x,y);
case 3:
return G__22725__3.call(this,x,y,z);
default:
var G__22729 = null;
if (arguments.length > 3) {
var G__22730__i = 0, G__22730__a = new Array(arguments.length -  3);
while (G__22730__i < G__22730__a.length) {G__22730__a[G__22730__i] = arguments[G__22730__i + 3]; ++G__22730__i;}
G__22729 = new cljs.core.IndexedSeq(G__22730__a,0);
}
return G__22725__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22725.cljs$lang$maxFixedArity = 3;
G__22725.cljs$lang$applyTo = G__22725__4.cljs$lang$applyTo;
G__22725.cljs$core$IFn$_invoke$arity$0 = G__22725__0;
G__22725.cljs$core$IFn$_invoke$arity$1 = G__22725__1;
G__22725.cljs$core$IFn$_invoke$arity$2 = G__22725__2;
G__22725.cljs$core$IFn$_invoke$arity$3 = G__22725__3;
G__22725.cljs$core$IFn$_invoke$arity$variadic = G__22725__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22725;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__22731 = null;
var G__22731__0 = (function (){
var G__22701 = arg1;
var G__22702 = arg2;
var G__22703 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22701,G__22702,G__22703) : f.call(null,G__22701,G__22702,G__22703));
});
var G__22731__1 = (function (x){
var G__22704 = arg1;
var G__22705 = arg2;
var G__22706 = arg3;
var G__22707 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22704,G__22705,G__22706,G__22707) : f.call(null,G__22704,G__22705,G__22706,G__22707));
});
var G__22731__2 = (function (x,y){
var G__22708 = arg1;
var G__22709 = arg2;
var G__22710 = arg3;
var G__22711 = x;
var G__22712 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22708,G__22709,G__22710,G__22711,G__22712) : f.call(null,G__22708,G__22709,G__22710,G__22711,G__22712));
});
var G__22731__3 = (function (x,y,z){
var G__22713 = arg1;
var G__22714 = arg2;
var G__22715 = arg3;
var G__22716 = x;
var G__22717 = y;
var G__22718 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22713,G__22714,G__22715,G__22716,G__22717,G__22718) : f.call(null,G__22713,G__22714,G__22715,G__22716,G__22717,G__22718));
});
var G__22731__4 = (function() { 
var G__22732__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__22732 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22733__i = 0, G__22733__a = new Array(arguments.length -  3);
while (G__22733__i < G__22733__a.length) {G__22733__a[G__22733__i] = arguments[G__22733__i + 3]; ++G__22733__i;}
  args = new cljs.core.IndexedSeq(G__22733__a,0);
} 
return G__22732__delegate.call(this,x,y,z,args);};
G__22732.cljs$lang$maxFixedArity = 3;
G__22732.cljs$lang$applyTo = (function (arglist__22734){
var x = cljs.core.first(arglist__22734);
arglist__22734 = cljs.core.next(arglist__22734);
var y = cljs.core.first(arglist__22734);
arglist__22734 = cljs.core.next(arglist__22734);
var z = cljs.core.first(arglist__22734);
var args = cljs.core.rest(arglist__22734);
return G__22732__delegate(x,y,z,args);
});
G__22732.cljs$core$IFn$_invoke$arity$variadic = G__22732__delegate;
return G__22732;
})()
;
G__22731 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22731__0.call(this);
case 1:
return G__22731__1.call(this,x);
case 2:
return G__22731__2.call(this,x,y);
case 3:
return G__22731__3.call(this,x,y,z);
default:
var G__22735 = null;
if (arguments.length > 3) {
var G__22736__i = 0, G__22736__a = new Array(arguments.length -  3);
while (G__22736__i < G__22736__a.length) {G__22736__a[G__22736__i] = arguments[G__22736__i + 3]; ++G__22736__i;}
G__22735 = new cljs.core.IndexedSeq(G__22736__a,0);
}
return G__22731__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22731.cljs$lang$maxFixedArity = 3;
G__22731.cljs$lang$applyTo = G__22731__4.cljs$lang$applyTo;
G__22731.cljs$core$IFn$_invoke$arity$0 = G__22731__0;
G__22731.cljs$core$IFn$_invoke$arity$1 = G__22731__1;
G__22731.cljs$core$IFn$_invoke$arity$2 = G__22731__2;
G__22731.cljs$core$IFn$_invoke$arity$3 = G__22731__3;
G__22731.cljs$core$IFn$_invoke$arity$variadic = G__22731__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22731;
})()
});
var partial__5 = (function() { 
var G__22737__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__22738__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__22738 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22739__i = 0, G__22739__a = new Array(arguments.length -  0);
while (G__22739__i < G__22739__a.length) {G__22739__a[G__22739__i] = arguments[G__22739__i + 0]; ++G__22739__i;}
  args = new cljs.core.IndexedSeq(G__22739__a,0);
} 
return G__22738__delegate.call(this,args);};
G__22738.cljs$lang$maxFixedArity = 0;
G__22738.cljs$lang$applyTo = (function (arglist__22740){
var args = cljs.core.seq(arglist__22740);
return G__22738__delegate(args);
});
G__22738.cljs$core$IFn$_invoke$arity$variadic = G__22738__delegate;
return G__22738;
})()
;
};
var G__22737 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__22741__i = 0, G__22741__a = new Array(arguments.length -  4);
while (G__22741__i < G__22741__a.length) {G__22741__a[G__22741__i] = arguments[G__22741__i + 4]; ++G__22741__i;}
  more = new cljs.core.IndexedSeq(G__22741__a,0);
} 
return G__22737__delegate.call(this,f,arg1,arg2,arg3,more);};
G__22737.cljs$lang$maxFixedArity = 4;
G__22737.cljs$lang$applyTo = (function (arglist__22742){
var f = cljs.core.first(arglist__22742);
arglist__22742 = cljs.core.next(arglist__22742);
var arg1 = cljs.core.first(arglist__22742);
arglist__22742 = cljs.core.next(arglist__22742);
var arg2 = cljs.core.first(arglist__22742);
arglist__22742 = cljs.core.next(arglist__22742);
var arg3 = cljs.core.first(arglist__22742);
var more = cljs.core.rest(arglist__22742);
return G__22737__delegate(f,arg1,arg2,arg3,more);
});
G__22737.cljs$core$IFn$_invoke$arity$variadic = G__22737__delegate;
return G__22737;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__22743 = null;
if (arguments.length > 4) {
var G__22744__i = 0, G__22744__a = new Array(arguments.length -  4);
while (G__22744__i < G__22744__a.length) {G__22744__a[G__22744__i] = arguments[G__22744__i + 4]; ++G__22744__i;}
G__22743 = new cljs.core.IndexedSeq(G__22744__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__22743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__22777 = null;
var G__22777__1 = (function (a){
var G__22761 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22761) : f.call(null,G__22761));
});
var G__22777__2 = (function (a,b){
var G__22762 = (((a == null))?x:a);
var G__22763 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22762,G__22763) : f.call(null,G__22762,G__22763));
});
var G__22777__3 = (function (a,b,c){
var G__22764 = (((a == null))?x:a);
var G__22765 = b;
var G__22766 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22764,G__22765,G__22766) : f.call(null,G__22764,G__22765,G__22766));
});
var G__22777__4 = (function() { 
var G__22778__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__22778 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22779__i = 0, G__22779__a = new Array(arguments.length -  3);
while (G__22779__i < G__22779__a.length) {G__22779__a[G__22779__i] = arguments[G__22779__i + 3]; ++G__22779__i;}
  ds = new cljs.core.IndexedSeq(G__22779__a,0);
} 
return G__22778__delegate.call(this,a,b,c,ds);};
G__22778.cljs$lang$maxFixedArity = 3;
G__22778.cljs$lang$applyTo = (function (arglist__22780){
var a = cljs.core.first(arglist__22780);
arglist__22780 = cljs.core.next(arglist__22780);
var b = cljs.core.first(arglist__22780);
arglist__22780 = cljs.core.next(arglist__22780);
var c = cljs.core.first(arglist__22780);
var ds = cljs.core.rest(arglist__22780);
return G__22778__delegate(a,b,c,ds);
});
G__22778.cljs$core$IFn$_invoke$arity$variadic = G__22778__delegate;
return G__22778;
})()
;
G__22777 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__22777__1.call(this,a);
case 2:
return G__22777__2.call(this,a,b);
case 3:
return G__22777__3.call(this,a,b,c);
default:
var G__22781 = null;
if (arguments.length > 3) {
var G__22782__i = 0, G__22782__a = new Array(arguments.length -  3);
while (G__22782__i < G__22782__a.length) {G__22782__a[G__22782__i] = arguments[G__22782__i + 3]; ++G__22782__i;}
G__22781 = new cljs.core.IndexedSeq(G__22782__a,0);
}
return G__22777__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22777.cljs$lang$maxFixedArity = 3;
G__22777.cljs$lang$applyTo = G__22777__4.cljs$lang$applyTo;
G__22777.cljs$core$IFn$_invoke$arity$1 = G__22777__1;
G__22777.cljs$core$IFn$_invoke$arity$2 = G__22777__2;
G__22777.cljs$core$IFn$_invoke$arity$3 = G__22777__3;
G__22777.cljs$core$IFn$_invoke$arity$variadic = G__22777__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22777;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__22783 = null;
var G__22783__2 = (function (a,b){
var G__22767 = (((a == null))?x:a);
var G__22768 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22767,G__22768) : f.call(null,G__22767,G__22768));
});
var G__22783__3 = (function (a,b,c){
var G__22769 = (((a == null))?x:a);
var G__22770 = (((b == null))?y:b);
var G__22771 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22769,G__22770,G__22771) : f.call(null,G__22769,G__22770,G__22771));
});
var G__22783__4 = (function() { 
var G__22784__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__22784 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22785__i = 0, G__22785__a = new Array(arguments.length -  3);
while (G__22785__i < G__22785__a.length) {G__22785__a[G__22785__i] = arguments[G__22785__i + 3]; ++G__22785__i;}
  ds = new cljs.core.IndexedSeq(G__22785__a,0);
} 
return G__22784__delegate.call(this,a,b,c,ds);};
G__22784.cljs$lang$maxFixedArity = 3;
G__22784.cljs$lang$applyTo = (function (arglist__22786){
var a = cljs.core.first(arglist__22786);
arglist__22786 = cljs.core.next(arglist__22786);
var b = cljs.core.first(arglist__22786);
arglist__22786 = cljs.core.next(arglist__22786);
var c = cljs.core.first(arglist__22786);
var ds = cljs.core.rest(arglist__22786);
return G__22784__delegate(a,b,c,ds);
});
G__22784.cljs$core$IFn$_invoke$arity$variadic = G__22784__delegate;
return G__22784;
})()
;
G__22783 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22783__2.call(this,a,b);
case 3:
return G__22783__3.call(this,a,b,c);
default:
var G__22787 = null;
if (arguments.length > 3) {
var G__22788__i = 0, G__22788__a = new Array(arguments.length -  3);
while (G__22788__i < G__22788__a.length) {G__22788__a[G__22788__i] = arguments[G__22788__i + 3]; ++G__22788__i;}
G__22787 = new cljs.core.IndexedSeq(G__22788__a,0);
}
return G__22783__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22787);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22783.cljs$lang$maxFixedArity = 3;
G__22783.cljs$lang$applyTo = G__22783__4.cljs$lang$applyTo;
G__22783.cljs$core$IFn$_invoke$arity$2 = G__22783__2;
G__22783.cljs$core$IFn$_invoke$arity$3 = G__22783__3;
G__22783.cljs$core$IFn$_invoke$arity$variadic = G__22783__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22783;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__22789 = null;
var G__22789__2 = (function (a,b){
var G__22772 = (((a == null))?x:a);
var G__22773 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22772,G__22773) : f.call(null,G__22772,G__22773));
});
var G__22789__3 = (function (a,b,c){
var G__22774 = (((a == null))?x:a);
var G__22775 = (((b == null))?y:b);
var G__22776 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22774,G__22775,G__22776) : f.call(null,G__22774,G__22775,G__22776));
});
var G__22789__4 = (function() { 
var G__22790__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__22790 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22791__i = 0, G__22791__a = new Array(arguments.length -  3);
while (G__22791__i < G__22791__a.length) {G__22791__a[G__22791__i] = arguments[G__22791__i + 3]; ++G__22791__i;}
  ds = new cljs.core.IndexedSeq(G__22791__a,0);
} 
return G__22790__delegate.call(this,a,b,c,ds);};
G__22790.cljs$lang$maxFixedArity = 3;
G__22790.cljs$lang$applyTo = (function (arglist__22792){
var a = cljs.core.first(arglist__22792);
arglist__22792 = cljs.core.next(arglist__22792);
var b = cljs.core.first(arglist__22792);
arglist__22792 = cljs.core.next(arglist__22792);
var c = cljs.core.first(arglist__22792);
var ds = cljs.core.rest(arglist__22792);
return G__22790__delegate(a,b,c,ds);
});
G__22790.cljs$core$IFn$_invoke$arity$variadic = G__22790__delegate;
return G__22790;
})()
;
G__22789 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22789__2.call(this,a,b);
case 3:
return G__22789__3.call(this,a,b,c);
default:
var G__22793 = null;
if (arguments.length > 3) {
var G__22794__i = 0, G__22794__a = new Array(arguments.length -  3);
while (G__22794__i < G__22794__a.length) {G__22794__a[G__22794__i] = arguments[G__22794__i + 3]; ++G__22794__i;}
G__22793 = new cljs.core.IndexedSeq(G__22794__a,0);
}
return G__22789__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22793);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22789.cljs$lang$maxFixedArity = 3;
G__22789.cljs$lang$applyTo = G__22789__4.cljs$lang$applyTo;
G__22789.cljs$core$IFn$_invoke$arity$2 = G__22789__2;
G__22789.cljs$core$IFn$_invoke$arity$3 = G__22789__3;
G__22789.cljs$core$IFn$_invoke$arity$variadic = G__22789__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22789;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__22825 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__22825) : cljs.core.volatile_BANG_.call(null,G__22825));
})();
return ((function (i){
return (function() {
var G__22855 = null;
var G__22855__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22855__1 = (function (result){
var G__22826 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22826) : rf.call(null,G__22826));
});
var G__22855__2 = (function (result,input){
var G__22827 = result;
var G__22828 = (function (){var G__22829 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__22830 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22829,G__22830) : f.call(null,G__22829,G__22830));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22827,G__22828) : rf.call(null,G__22827,G__22828));
});
G__22855 = function(result,input){
switch(arguments.length){
case 0:
return G__22855__0.call(this);
case 1:
return G__22855__1.call(this,result);
case 2:
return G__22855__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22855.cljs$core$IFn$_invoke$arity$0 = G__22855__0;
G__22855.cljs$core$IFn$_invoke$arity$1 = G__22855__1;
G__22855.cljs$core$IFn$_invoke$arity$2 = G__22855__2;
return G__22855;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13605__auto___22856 = size;
var i_22857 = (0);
while(true){
if((i_22857 < n__13605__auto___22856)){
cljs.core.chunk_append(b,(function (){var G__22851 = (idx + i_22857);
var G__22852 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22857);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22851,G__22852) : f.call(null,G__22851,G__22852));
})());

var G__22858 = (i_22857 + (1));
i_22857 = G__22858;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22853 = idx;
var G__22854 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22853,G__22854) : f.call(null,G__22853,G__22854));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__22877 = null;
var G__22877__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22877__1 = (function (result){
var G__22871 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22871) : rf.call(null,G__22871));
});
var G__22877__2 = (function (result,input){
var v = (function (){var G__22872 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22872) : f.call(null,G__22872));
})();
if((v == null)){
return result;
} else {
var G__22873 = result;
var G__22874 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22873,G__22874) : rf.call(null,G__22873,G__22874));
}
});
G__22877 = function(result,input){
switch(arguments.length){
case 0:
return G__22877__0.call(this);
case 1:
return G__22877__1.call(this,result);
case 2:
return G__22877__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22877.cljs$core$IFn$_invoke$arity$0 = G__22877__0;
G__22877.cljs$core$IFn$_invoke$arity$1 = G__22877__1;
G__22877.cljs$core$IFn$_invoke$arity$2 = G__22877__2;
return G__22877;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13605__auto___22878 = size;
var i_22879 = (0);
while(true){
if((i_22879 < n__13605__auto___22878)){
var x_22880 = (function (){var G__22875 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22879);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22875) : f.call(null,G__22875));
})();
if((x_22880 == null)){
} else {
cljs.core.chunk_append(b,x_22880);
}

var G__22881 = (i_22879 + (1));
i_22879 = G__22881;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22876 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22876) : f.call(null,G__22876));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22882 = this$__$1;
return goog.getUid(G__22882);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__22883 = cljs.core.seq(self__.watches);
var chunk__22884 = null;
var count__22885 = (0);
var i__22886 = (0);
while(true){
if((i__22886 < count__22885)){
var vec__22887 = chunk__22884.cljs$core$IIndexed$_nth$arity$2(null,i__22886);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22887,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22887,(1),null);
var G__22888_22897 = key;
var G__22889_22898 = this$__$1;
var G__22890_22899 = oldval;
var G__22891_22900 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22888_22897,G__22889_22898,G__22890_22899,G__22891_22900) : f.call(null,G__22888_22897,G__22889_22898,G__22890_22899,G__22891_22900));

var G__22901 = seq__22883;
var G__22902 = chunk__22884;
var G__22903 = count__22885;
var G__22904 = (i__22886 + (1));
seq__22883 = G__22901;
chunk__22884 = G__22902;
count__22885 = G__22903;
i__22886 = G__22904;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22883);
if(temp__4126__auto__){
var seq__22883__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22883__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__22883__$1);
var G__22905 = cljs.core.chunk_rest(seq__22883__$1);
var G__22906 = c__13505__auto__;
var G__22907 = cljs.core.count(c__13505__auto__);
var G__22908 = (0);
seq__22883 = G__22905;
chunk__22884 = G__22906;
count__22885 = G__22907;
i__22886 = G__22908;
continue;
} else {
var vec__22892 = cljs.core.first(seq__22883__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22892,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22892,(1),null);
var G__22893_22909 = key;
var G__22894_22910 = this$__$1;
var G__22895_22911 = oldval;
var G__22896_22912 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22893_22909,G__22894_22910,G__22895_22911,G__22896_22912) : f.call(null,G__22893_22909,G__22894_22910,G__22895_22911,G__22896_22912));

var G__22913 = cljs.core.next(seq__22883__$1);
var G__22914 = null;
var G__22915 = (0);
var G__22916 = (0);
seq__22883 = G__22913;
chunk__22884 = G__22914;
count__22885 = G__22915;
i__22886 = G__22916;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__22920__delegate = function (x,p__22917){
var map__22919 = p__22917;
var map__22919__$1 = ((cljs.core.seq_QMARK_(map__22919))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22919):map__22919);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22919__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22919__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__22920 = function (x,var_args){
var p__22917 = null;
if (arguments.length > 1) {
var G__22921__i = 0, G__22921__a = new Array(arguments.length -  1);
while (G__22921__i < G__22921__a.length) {G__22921__a[G__22921__i] = arguments[G__22921__i + 1]; ++G__22921__i;}
  p__22917 = new cljs.core.IndexedSeq(G__22921__a,0);
} 
return G__22920__delegate.call(this,x,p__22917);};
G__22920.cljs$lang$maxFixedArity = 1;
G__22920.cljs$lang$applyTo = (function (arglist__22922){
var x = cljs.core.first(arglist__22922);
var p__22917 = cljs.core.rest(arglist__22922);
return G__22920__delegate(x,p__22917);
});
G__22920.cljs$core$IFn$_invoke$arity$variadic = G__22920__delegate;
return G__22920;
})()
;
atom = function(x,var_args){
var p__22917 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__22923 = null;
if (arguments.length > 1) {
var G__22924__i = 0, G__22924__a = new Array(arguments.length -  1);
while (G__22924__i < G__22924__a.length) {G__22924__a[G__22924__i] = arguments[G__22924__i + 1]; ++G__22924__i;}
G__22923 = new cljs.core.IndexedSeq(G__22924__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__22927 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__22927) : validate.call(null,G__22927));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__22928 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22928) : cljs.core.pr_str.call(null,G__22928));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22935 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22935) : f.call(null,G__22935));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22936 = a.state;
var G__22937 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22936,G__22937) : f.call(null,G__22936,G__22937));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22938 = a.state;
var G__22939 = x;
var G__22940 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22938,G__22939,G__22940) : f.call(null,G__22938,G__22939,G__22940));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__22941__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__22941 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__22942__i = 0, G__22942__a = new Array(arguments.length -  4);
while (G__22942__i < G__22942__a.length) {G__22942__a[G__22942__i] = arguments[G__22942__i + 4]; ++G__22942__i;}
  more = new cljs.core.IndexedSeq(G__22942__a,0);
} 
return G__22941__delegate.call(this,a,f,x,y,more);};
G__22941.cljs$lang$maxFixedArity = 4;
G__22941.cljs$lang$applyTo = (function (arglist__22943){
var a = cljs.core.first(arglist__22943);
arglist__22943 = cljs.core.next(arglist__22943);
var f = cljs.core.first(arglist__22943);
arglist__22943 = cljs.core.next(arglist__22943);
var x = cljs.core.first(arglist__22943);
arglist__22943 = cljs.core.next(arglist__22943);
var y = cljs.core.first(arglist__22943);
var more = cljs.core.rest(arglist__22943);
return G__22941__delegate(a,f,x,y,more);
});
G__22941.cljs$core$IFn$_invoke$arity$variadic = G__22941__delegate;
return G__22941;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__22944 = null;
if (arguments.length > 4) {
var G__22945__i = 0, G__22945__a = new Array(arguments.length -  4);
while (G__22945__i < G__22945__a.length) {G__22945__a[G__22945__i] = arguments[G__22945__i + 4]; ++G__22945__i;}
G__22944 = new cljs.core.IndexedSeq(G__22945__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__22944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23012 = null;
var G__23012__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23012__1 = (function (result){
var G__22979 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22979) : rf.call(null,G__22979));
});
var G__23012__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__22980 = i;
var G__22981 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22980,G__22981) : f.call(null,G__22980,G__22981));
})();
if((v == null)){
return result;
} else {
var G__22982 = result;
var G__22983 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22982,G__22983) : rf.call(null,G__22982,G__22983));
}
});
G__23012 = function(result,input){
switch(arguments.length){
case 0:
return G__23012__0.call(this);
case 1:
return G__23012__1.call(this,result);
case 2:
return G__23012__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23012.cljs$core$IFn$_invoke$arity$0 = G__23012__0;
G__23012.cljs$core$IFn$_invoke$arity$1 = G__23012__1;
G__23012.cljs$core$IFn$_invoke$arity$2 = G__23012__2;
return G__23012;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13605__auto___23013 = size;
var i_23014 = (0);
while(true){
if((i_23014 < n__13605__auto___23013)){
var x_23015 = (function (){var G__23008 = (idx + i_23014);
var G__23009 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23014);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23008,G__23009) : f.call(null,G__23008,G__23009));
})();
if((x_23015 == null)){
} else {
cljs.core.chunk_append(b,x_23015);
}

var G__23016 = (i_23014 + (1));
i_23014 = G__23016;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23010 = idx;
var G__23011 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23010,G__23011) : f.call(null,G__23010,G__23011));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__23230 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23230) : p.call(null,G__23230));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23232 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23232) : p.call(null,G__23232));
})();
if(cljs.core.truth_(and__12706__auto__)){
var G__23233 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23233) : p.call(null,G__23233));
} else {
return and__12706__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23235 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23235) : p.call(null,G__23235));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23237 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23237) : p.call(null,G__23237));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var G__23238 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23238) : p.call(null,G__23238));
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__23407__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__23407 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23408__i = 0, G__23408__a = new Array(arguments.length -  3);
while (G__23408__i < G__23408__a.length) {G__23408__a[G__23408__i] = arguments[G__23408__i + 3]; ++G__23408__i;}
  args = new cljs.core.IndexedSeq(G__23408__a,0);
} 
return G__23407__delegate.call(this,x,y,z,args);};
G__23407.cljs$lang$maxFixedArity = 3;
G__23407.cljs$lang$applyTo = (function (arglist__23409){
var x = cljs.core.first(arglist__23409);
arglist__23409 = cljs.core.next(arglist__23409);
var y = cljs.core.first(arglist__23409);
arglist__23409 = cljs.core.next(arglist__23409);
var z = cljs.core.first(arglist__23409);
var args = cljs.core.rest(arglist__23409);
return G__23407__delegate(x,y,z,args);
});
G__23407.cljs$core$IFn$_invoke$arity$variadic = G__23407__delegate;
return G__23407;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__23410 = null;
if (arguments.length > 3) {
var G__23411__i = 0, G__23411__a = new Array(arguments.length -  3);
while (G__23411__i < G__23411__a.length) {G__23411__a[G__23411__i] = arguments[G__23411__i + 3]; ++G__23411__i;}
G__23410 = new cljs.core.IndexedSeq(G__23411__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23270 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23270) : p1.call(null,G__23270));
})();
if(cljs.core.truth_(and__12706__auto__)){
var G__23271 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23271) : p2.call(null,G__23271));
} else {
return and__12706__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23273 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23273) : p1.call(null,G__23273));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23275 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23275) : p1.call(null,G__23275));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var and__12706__auto____$2 = (function (){var G__23277 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23277) : p2.call(null,G__23277));
})();
if(cljs.core.truth_(and__12706__auto____$2)){
var G__23278 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23278) : p2.call(null,G__23278));
} else {
return and__12706__auto____$2;
}
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23280 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23280) : p1.call(null,G__23280));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23282 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23282) : p1.call(null,G__23282));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var and__12706__auto____$2 = (function (){var G__23284 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23284) : p1.call(null,G__23284));
})();
if(cljs.core.truth_(and__12706__auto____$2)){
var and__12706__auto____$3 = (function (){var G__23286 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23286) : p2.call(null,G__23286));
})();
if(cljs.core.truth_(and__12706__auto____$3)){
var and__12706__auto____$4 = (function (){var G__23288 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23288) : p2.call(null,G__23288));
})();
if(cljs.core.truth_(and__12706__auto____$4)){
var G__23289 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23289) : p2.call(null,G__23289));
} else {
return and__12706__auto____$4;
}
} else {
return and__12706__auto____$3;
}
} else {
return and__12706__auto____$2;
}
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__23412__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23017_SHARP_){
var and__12706__auto__ = (function (){var G__23294 = p1__23017_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23294) : p1.call(null,G__23294));
})();
if(cljs.core.truth_(and__12706__auto__)){
var G__23295 = p1__23017_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23295) : p2.call(null,G__23295));
} else {
return and__12706__auto__;
}
}),args)));
};
var G__23412 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23413__i = 0, G__23413__a = new Array(arguments.length -  3);
while (G__23413__i < G__23413__a.length) {G__23413__a[G__23413__i] = arguments[G__23413__i + 3]; ++G__23413__i;}
  args = new cljs.core.IndexedSeq(G__23413__a,0);
} 
return G__23412__delegate.call(this,x,y,z,args);};
G__23412.cljs$lang$maxFixedArity = 3;
G__23412.cljs$lang$applyTo = (function (arglist__23414){
var x = cljs.core.first(arglist__23414);
arglist__23414 = cljs.core.next(arglist__23414);
var y = cljs.core.first(arglist__23414);
arglist__23414 = cljs.core.next(arglist__23414);
var z = cljs.core.first(arglist__23414);
var args = cljs.core.rest(arglist__23414);
return G__23412__delegate(x,y,z,args);
});
G__23412.cljs$core$IFn$_invoke$arity$variadic = G__23412__delegate;
return G__23412;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__23415 = null;
if (arguments.length > 3) {
var G__23416__i = 0, G__23416__a = new Array(arguments.length -  3);
while (G__23416__i < G__23416__a.length) {G__23416__a[G__23416__i] = arguments[G__23416__i + 3]; ++G__23416__i;}
G__23415 = new cljs.core.IndexedSeq(G__23416__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23341 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23341) : p1.call(null,G__23341));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23343 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23343) : p2.call(null,G__23343));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var G__23344 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23344) : p3.call(null,G__23344));
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23346 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23346) : p1.call(null,G__23346));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23348 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23348) : p2.call(null,G__23348));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var and__12706__auto____$2 = (function (){var G__23350 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23350) : p3.call(null,G__23350));
})();
if(cljs.core.truth_(and__12706__auto____$2)){
var and__12706__auto____$3 = (function (){var G__23352 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23352) : p1.call(null,G__23352));
})();
if(cljs.core.truth_(and__12706__auto____$3)){
var and__12706__auto____$4 = (function (){var G__23354 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23354) : p2.call(null,G__23354));
})();
if(cljs.core.truth_(and__12706__auto____$4)){
var G__23355 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23355) : p3.call(null,G__23355));
} else {
return and__12706__auto____$4;
}
} else {
return and__12706__auto____$3;
}
} else {
return and__12706__auto____$2;
}
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12706__auto__ = (function (){var G__23357 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23357) : p1.call(null,G__23357));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23359 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23359) : p2.call(null,G__23359));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var and__12706__auto____$2 = (function (){var G__23361 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23361) : p3.call(null,G__23361));
})();
if(cljs.core.truth_(and__12706__auto____$2)){
var and__12706__auto____$3 = (function (){var G__23363 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23363) : p1.call(null,G__23363));
})();
if(cljs.core.truth_(and__12706__auto____$3)){
var and__12706__auto____$4 = (function (){var G__23365 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23365) : p2.call(null,G__23365));
})();
if(cljs.core.truth_(and__12706__auto____$4)){
var and__12706__auto____$5 = (function (){var G__23367 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23367) : p3.call(null,G__23367));
})();
if(cljs.core.truth_(and__12706__auto____$5)){
var and__12706__auto____$6 = (function (){var G__23369 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23369) : p1.call(null,G__23369));
})();
if(cljs.core.truth_(and__12706__auto____$6)){
var and__12706__auto____$7 = (function (){var G__23371 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23371) : p2.call(null,G__23371));
})();
if(cljs.core.truth_(and__12706__auto____$7)){
var G__23372 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23372) : p3.call(null,G__23372));
} else {
return and__12706__auto____$7;
}
} else {
return and__12706__auto____$6;
}
} else {
return and__12706__auto____$5;
}
} else {
return and__12706__auto____$4;
}
} else {
return and__12706__auto____$3;
}
} else {
return and__12706__auto____$2;
}
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__23417__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23018_SHARP_){
var and__12706__auto__ = (function (){var G__23379 = p1__23018_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23379) : p1.call(null,G__23379));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23381 = p1__23018_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23381) : p2.call(null,G__23381));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var G__23382 = p1__23018_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23382) : p3.call(null,G__23382));
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
}),args)));
};
var G__23417 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23418__i = 0, G__23418__a = new Array(arguments.length -  3);
while (G__23418__i < G__23418__a.length) {G__23418__a[G__23418__i] = arguments[G__23418__i + 3]; ++G__23418__i;}
  args = new cljs.core.IndexedSeq(G__23418__a,0);
} 
return G__23417__delegate.call(this,x,y,z,args);};
G__23417.cljs$lang$maxFixedArity = 3;
G__23417.cljs$lang$applyTo = (function (arglist__23419){
var x = cljs.core.first(arglist__23419);
arglist__23419 = cljs.core.next(arglist__23419);
var y = cljs.core.first(arglist__23419);
arglist__23419 = cljs.core.next(arglist__23419);
var z = cljs.core.first(arglist__23419);
var args = cljs.core.rest(arglist__23419);
return G__23417__delegate(x,y,z,args);
});
G__23417.cljs$core$IFn$_invoke$arity$variadic = G__23417__delegate;
return G__23417;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__23420 = null;
if (arguments.length > 3) {
var G__23421__i = 0, G__23421__a = new Array(arguments.length -  3);
while (G__23421__i < G__23421__a.length) {G__23421__a[G__23421__i] = arguments[G__23421__i + 3]; ++G__23421__i;}
G__23420 = new cljs.core.IndexedSeq(G__23421__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__23422__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23019_SHARP_){
var G__23398 = x;
return (p1__23019_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23019_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23398) : p1__23019_SHARP_.call(null,G__23398));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23020_SHARP_){
var and__12706__auto__ = (function (){var G__23400 = x;
return (p1__23020_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23020_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23400) : p1__23020_SHARP_.call(null,G__23400));
})();
if(cljs.core.truth_(and__12706__auto__)){
var G__23401 = y;
return (p1__23020_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23020_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23401) : p1__23020_SHARP_.call(null,G__23401));
} else {
return and__12706__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23021_SHARP_){
var and__12706__auto__ = (function (){var G__23403 = x;
return (p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23403) : p1__23021_SHARP_.call(null,G__23403));
})();
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__23405 = y;
return (p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23405) : p1__23021_SHARP_.call(null,G__23405));
})();
if(cljs.core.truth_(and__12706__auto____$1)){
var G__23406 = z;
return (p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23406) : p1__23021_SHARP_.call(null,G__23406));
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__23423__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23022_SHARP_){
return cljs.core.every_QMARK_(p1__23022_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__23423 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23424__i = 0, G__23424__a = new Array(arguments.length -  3);
while (G__23424__i < G__23424__a.length) {G__23424__a[G__23424__i] = arguments[G__23424__i + 3]; ++G__23424__i;}
  args = new cljs.core.IndexedSeq(G__23424__a,0);
} 
return G__23423__delegate.call(this,x,y,z,args);};
G__23423.cljs$lang$maxFixedArity = 3;
G__23423.cljs$lang$applyTo = (function (arglist__23425){
var x = cljs.core.first(arglist__23425);
arglist__23425 = cljs.core.next(arglist__23425);
var y = cljs.core.first(arglist__23425);
arglist__23425 = cljs.core.next(arglist__23425);
var z = cljs.core.first(arglist__23425);
var args = cljs.core.rest(arglist__23425);
return G__23423__delegate(x,y,z,args);
});
G__23423.cljs$core$IFn$_invoke$arity$variadic = G__23423__delegate;
return G__23423;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__23426 = null;
if (arguments.length > 3) {
var G__23427__i = 0, G__23427__a = new Array(arguments.length -  3);
while (G__23427__i < G__23427__a.length) {G__23427__a[G__23427__i] = arguments[G__23427__i + 3]; ++G__23427__i;}
G__23426 = new cljs.core.IndexedSeq(G__23427__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__23422 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23428__i = 0, G__23428__a = new Array(arguments.length -  3);
while (G__23428__i < G__23428__a.length) {G__23428__a[G__23428__i] = arguments[G__23428__i + 3]; ++G__23428__i;}
  ps = new cljs.core.IndexedSeq(G__23428__a,0);
} 
return G__23422__delegate.call(this,p1,p2,p3,ps);};
G__23422.cljs$lang$maxFixedArity = 3;
G__23422.cljs$lang$applyTo = (function (arglist__23429){
var p1 = cljs.core.first(arglist__23429);
arglist__23429 = cljs.core.next(arglist__23429);
var p2 = cljs.core.first(arglist__23429);
arglist__23429 = cljs.core.next(arglist__23429);
var p3 = cljs.core.first(arglist__23429);
var ps = cljs.core.rest(arglist__23429);
return G__23422__delegate(p1,p2,p3,ps);
});
G__23422.cljs$core$IFn$_invoke$arity$variadic = G__23422__delegate;
return G__23422;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__23430 = null;
if (arguments.length > 3) {
var G__23431__i = 0, G__23431__a = new Array(arguments.length -  3);
while (G__23431__i < G__23431__a.length) {G__23431__a[G__23431__i] = arguments[G__23431__i + 3]; ++G__23431__i;}
G__23430 = new cljs.core.IndexedSeq(G__23431__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__23637 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23637) : p.call(null,G__23637));
});
var sp1__2 = (function (x,y){
var or__12718__auto__ = (function (){var G__23639 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23639) : p.call(null,G__23639));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var G__23640 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23640) : p.call(null,G__23640));
}
});
var sp1__3 = (function (x,y,z){
var or__12718__auto__ = (function (){var G__23642 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23642) : p.call(null,G__23642));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23644 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23644) : p.call(null,G__23644));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var G__23645 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23645) : p.call(null,G__23645));
}
}
});
var sp1__4 = (function() { 
var G__23806__delegate = function (x,y,z,args){
var or__12718__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__23806 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23807__i = 0, G__23807__a = new Array(arguments.length -  3);
while (G__23807__i < G__23807__a.length) {G__23807__a[G__23807__i] = arguments[G__23807__i + 3]; ++G__23807__i;}
  args = new cljs.core.IndexedSeq(G__23807__a,0);
} 
return G__23806__delegate.call(this,x,y,z,args);};
G__23806.cljs$lang$maxFixedArity = 3;
G__23806.cljs$lang$applyTo = (function (arglist__23808){
var x = cljs.core.first(arglist__23808);
arglist__23808 = cljs.core.next(arglist__23808);
var y = cljs.core.first(arglist__23808);
arglist__23808 = cljs.core.next(arglist__23808);
var z = cljs.core.first(arglist__23808);
var args = cljs.core.rest(arglist__23808);
return G__23806__delegate(x,y,z,args);
});
G__23806.cljs$core$IFn$_invoke$arity$variadic = G__23806__delegate;
return G__23806;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__23809 = null;
if (arguments.length > 3) {
var G__23810__i = 0, G__23810__a = new Array(arguments.length -  3);
while (G__23810__i < G__23810__a.length) {G__23810__a[G__23810__i] = arguments[G__23810__i + 3]; ++G__23810__i;}
G__23809 = new cljs.core.IndexedSeq(G__23810__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12718__auto__ = (function (){var G__23677 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23677) : p1.call(null,G__23677));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var G__23678 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23678) : p2.call(null,G__23678));
}
});
var sp2__2 = (function (x,y){
var or__12718__auto__ = (function (){var G__23680 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23680) : p1.call(null,G__23680));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23682 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23682) : p1.call(null,G__23682));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var G__23684 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23684) : p2.call(null,G__23684));
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
var G__23685 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23685) : p2.call(null,G__23685));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12718__auto__ = (function (){var G__23687 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23687) : p1.call(null,G__23687));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23689 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23689) : p1.call(null,G__23689));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var G__23691 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23691) : p1.call(null,G__23691));
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
var or__12718__auto____$3 = (function (){var G__23693 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23693) : p2.call(null,G__23693));
})();
if(cljs.core.truth_(or__12718__auto____$3)){
return or__12718__auto____$3;
} else {
var or__12718__auto____$4 = (function (){var G__23695 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23695) : p2.call(null,G__23695));
})();
if(cljs.core.truth_(or__12718__auto____$4)){
return or__12718__auto____$4;
} else {
var G__23696 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23696) : p2.call(null,G__23696));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__23811__delegate = function (x,y,z,args){
var or__12718__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.some(((function (or__12718__auto__){
return (function (p1__23432_SHARP_){
var or__12718__auto____$1 = (function (){var G__23698 = p1__23432_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23698) : p1.call(null,G__23698));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var G__23699 = p1__23432_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23699) : p2.call(null,G__23699));
}
});})(or__12718__auto__))
,args);
}
};
var G__23811 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23812__i = 0, G__23812__a = new Array(arguments.length -  3);
while (G__23812__i < G__23812__a.length) {G__23812__a[G__23812__i] = arguments[G__23812__i + 3]; ++G__23812__i;}
  args = new cljs.core.IndexedSeq(G__23812__a,0);
} 
return G__23811__delegate.call(this,x,y,z,args);};
G__23811.cljs$lang$maxFixedArity = 3;
G__23811.cljs$lang$applyTo = (function (arglist__23813){
var x = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var y = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var z = cljs.core.first(arglist__23813);
var args = cljs.core.rest(arglist__23813);
return G__23811__delegate(x,y,z,args);
});
G__23811.cljs$core$IFn$_invoke$arity$variadic = G__23811__delegate;
return G__23811;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__23814 = null;
if (arguments.length > 3) {
var G__23815__i = 0, G__23815__a = new Array(arguments.length -  3);
while (G__23815__i < G__23815__a.length) {G__23815__a[G__23815__i] = arguments[G__23815__i + 3]; ++G__23815__i;}
G__23814 = new cljs.core.IndexedSeq(G__23815__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12718__auto__ = (function (){var G__23745 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23745) : p1.call(null,G__23745));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23747 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23747) : p2.call(null,G__23747));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var G__23748 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23748) : p3.call(null,G__23748));
}
}
});
var sp3__2 = (function (x,y){
var or__12718__auto__ = (function (){var G__23750 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23750) : p1.call(null,G__23750));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23752 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23752) : p2.call(null,G__23752));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var G__23754 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23754) : p3.call(null,G__23754));
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
var or__12718__auto____$3 = (function (){var G__23756 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23756) : p1.call(null,G__23756));
})();
if(cljs.core.truth_(or__12718__auto____$3)){
return or__12718__auto____$3;
} else {
var or__12718__auto____$4 = (function (){var G__23758 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23758) : p2.call(null,G__23758));
})();
if(cljs.core.truth_(or__12718__auto____$4)){
return or__12718__auto____$4;
} else {
var G__23759 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23759) : p3.call(null,G__23759));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12718__auto__ = (function (){var G__23761 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23761) : p1.call(null,G__23761));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23763 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23763) : p2.call(null,G__23763));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var G__23765 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23765) : p3.call(null,G__23765));
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
var or__12718__auto____$3 = (function (){var G__23767 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23767) : p1.call(null,G__23767));
})();
if(cljs.core.truth_(or__12718__auto____$3)){
return or__12718__auto____$3;
} else {
var or__12718__auto____$4 = (function (){var G__23769 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23769) : p2.call(null,G__23769));
})();
if(cljs.core.truth_(or__12718__auto____$4)){
return or__12718__auto____$4;
} else {
var or__12718__auto____$5 = (function (){var G__23771 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23771) : p3.call(null,G__23771));
})();
if(cljs.core.truth_(or__12718__auto____$5)){
return or__12718__auto____$5;
} else {
var or__12718__auto____$6 = (function (){var G__23773 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23773) : p1.call(null,G__23773));
})();
if(cljs.core.truth_(or__12718__auto____$6)){
return or__12718__auto____$6;
} else {
var or__12718__auto____$7 = (function (){var G__23775 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23775) : p2.call(null,G__23775));
})();
if(cljs.core.truth_(or__12718__auto____$7)){
return or__12718__auto____$7;
} else {
var G__23776 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23776) : p3.call(null,G__23776));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__23816__delegate = function (x,y,z,args){
var or__12718__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.some(((function (or__12718__auto__){
return (function (p1__23433_SHARP_){
var or__12718__auto____$1 = (function (){var G__23778 = p1__23433_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23778) : p1.call(null,G__23778));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var G__23780 = p1__23433_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23780) : p2.call(null,G__23780));
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
var G__23781 = p1__23433_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23781) : p3.call(null,G__23781));
}
}
});})(or__12718__auto__))
,args);
}
};
var G__23816 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23817__i = 0, G__23817__a = new Array(arguments.length -  3);
while (G__23817__i < G__23817__a.length) {G__23817__a[G__23817__i] = arguments[G__23817__i + 3]; ++G__23817__i;}
  args = new cljs.core.IndexedSeq(G__23817__a,0);
} 
return G__23816__delegate.call(this,x,y,z,args);};
G__23816.cljs$lang$maxFixedArity = 3;
G__23816.cljs$lang$applyTo = (function (arglist__23818){
var x = cljs.core.first(arglist__23818);
arglist__23818 = cljs.core.next(arglist__23818);
var y = cljs.core.first(arglist__23818);
arglist__23818 = cljs.core.next(arglist__23818);
var z = cljs.core.first(arglist__23818);
var args = cljs.core.rest(arglist__23818);
return G__23816__delegate(x,y,z,args);
});
G__23816.cljs$core$IFn$_invoke$arity$variadic = G__23816__delegate;
return G__23816;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__23819 = null;
if (arguments.length > 3) {
var G__23820__i = 0, G__23820__a = new Array(arguments.length -  3);
while (G__23820__i < G__23820__a.length) {G__23820__a[G__23820__i] = arguments[G__23820__i + 3]; ++G__23820__i;}
G__23819 = new cljs.core.IndexedSeq(G__23820__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23819);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__23821__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__23434_SHARP_){
var G__23797 = x;
return (p1__23434_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23434_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23797) : p1__23434_SHARP_.call(null,G__23797));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__23435_SHARP_){
var or__12718__auto__ = (function (){var G__23799 = x;
return (p1__23435_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23435_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23799) : p1__23435_SHARP_.call(null,G__23799));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var G__23800 = y;
return (p1__23435_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23435_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23800) : p1__23435_SHARP_.call(null,G__23800));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__23436_SHARP_){
var or__12718__auto__ = (function (){var G__23802 = x;
return (p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23802) : p1__23436_SHARP_.call(null,G__23802));
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var G__23804 = y;
return (p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23804) : p1__23436_SHARP_.call(null,G__23804));
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var G__23805 = z;
return (p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23805) : p1__23436_SHARP_.call(null,G__23805));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__23822__delegate = function (x,y,z,args){
var or__12718__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.some(((function (or__12718__auto__,ps__$1){
return (function (p1__23437_SHARP_){
return cljs.core.some(p1__23437_SHARP_,args);
});})(or__12718__auto__,ps__$1))
,ps__$1);
}
};
var G__23822 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23823__i = 0, G__23823__a = new Array(arguments.length -  3);
while (G__23823__i < G__23823__a.length) {G__23823__a[G__23823__i] = arguments[G__23823__i + 3]; ++G__23823__i;}
  args = new cljs.core.IndexedSeq(G__23823__a,0);
} 
return G__23822__delegate.call(this,x,y,z,args);};
G__23822.cljs$lang$maxFixedArity = 3;
G__23822.cljs$lang$applyTo = (function (arglist__23824){
var x = cljs.core.first(arglist__23824);
arglist__23824 = cljs.core.next(arglist__23824);
var y = cljs.core.first(arglist__23824);
arglist__23824 = cljs.core.next(arglist__23824);
var z = cljs.core.first(arglist__23824);
var args = cljs.core.rest(arglist__23824);
return G__23822__delegate(x,y,z,args);
});
G__23822.cljs$core$IFn$_invoke$arity$variadic = G__23822__delegate;
return G__23822;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__23825 = null;
if (arguments.length > 3) {
var G__23826__i = 0, G__23826__a = new Array(arguments.length -  3);
while (G__23826__i < G__23826__a.length) {G__23826__a[G__23826__i] = arguments[G__23826__i + 3]; ++G__23826__i;}
G__23825 = new cljs.core.IndexedSeq(G__23826__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__23821 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23827__i = 0, G__23827__a = new Array(arguments.length -  3);
while (G__23827__i < G__23827__a.length) {G__23827__a[G__23827__i] = arguments[G__23827__i + 3]; ++G__23827__i;}
  ps = new cljs.core.IndexedSeq(G__23827__a,0);
} 
return G__23821__delegate.call(this,p1,p2,p3,ps);};
G__23821.cljs$lang$maxFixedArity = 3;
G__23821.cljs$lang$applyTo = (function (arglist__23828){
var p1 = cljs.core.first(arglist__23828);
arglist__23828 = cljs.core.next(arglist__23828);
var p2 = cljs.core.first(arglist__23828);
arglist__23828 = cljs.core.next(arglist__23828);
var p3 = cljs.core.first(arglist__23828);
var ps = cljs.core.rest(arglist__23828);
return G__23821__delegate(p1,p2,p3,ps);
});
G__23821.cljs$core$IFn$_invoke$arity$variadic = G__23821__delegate;
return G__23821;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__23829 = null;
if (arguments.length > 3) {
var G__23830__i = 0, G__23830__a = new Array(arguments.length -  3);
while (G__23830__i < G__23830__a.length) {G__23830__a[G__23830__i] = arguments[G__23830__i + 3]; ++G__23830__i;}
G__23829 = new cljs.core.IndexedSeq(G__23830__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__23885 = null;
var G__23885__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23885__1 = (function (result){
var G__23871 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23871) : rf.call(null,G__23871));
});
var G__23885__2 = (function (result,input){
var G__23872 = result;
var G__23873 = (function (){var G__23874 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23874) : f.call(null,G__23874));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23872,G__23873) : rf.call(null,G__23872,G__23873));
});
var G__23885__3 = (function() { 
var G__23886__delegate = function (result,input,inputs){
var G__23875 = result;
var G__23876 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23875,G__23876) : rf.call(null,G__23875,G__23876));
};
var G__23886 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__23887__i = 0, G__23887__a = new Array(arguments.length -  2);
while (G__23887__i < G__23887__a.length) {G__23887__a[G__23887__i] = arguments[G__23887__i + 2]; ++G__23887__i;}
  inputs = new cljs.core.IndexedSeq(G__23887__a,0);
} 
return G__23886__delegate.call(this,result,input,inputs);};
G__23886.cljs$lang$maxFixedArity = 2;
G__23886.cljs$lang$applyTo = (function (arglist__23888){
var result = cljs.core.first(arglist__23888);
arglist__23888 = cljs.core.next(arglist__23888);
var input = cljs.core.first(arglist__23888);
var inputs = cljs.core.rest(arglist__23888);
return G__23886__delegate(result,input,inputs);
});
G__23886.cljs$core$IFn$_invoke$arity$variadic = G__23886__delegate;
return G__23886;
})()
;
G__23885 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__23885__0.call(this);
case 1:
return G__23885__1.call(this,result);
case 2:
return G__23885__2.call(this,result,input);
default:
var G__23889 = null;
if (arguments.length > 2) {
var G__23890__i = 0, G__23890__a = new Array(arguments.length -  2);
while (G__23890__i < G__23890__a.length) {G__23890__a[G__23890__i] = arguments[G__23890__i + 2]; ++G__23890__i;}
G__23889 = new cljs.core.IndexedSeq(G__23890__a,0);
}
return G__23885__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__23889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23885.cljs$lang$maxFixedArity = 2;
G__23885.cljs$lang$applyTo = G__23885__3.cljs$lang$applyTo;
G__23885.cljs$core$IFn$_invoke$arity$0 = G__23885__0;
G__23885.cljs$core$IFn$_invoke$arity$1 = G__23885__1;
G__23885.cljs$core$IFn$_invoke$arity$2 = G__23885__2;
G__23885.cljs$core$IFn$_invoke$arity$variadic = G__23885__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23885;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13605__auto___23891 = size;
var i_23892 = (0);
while(true){
if((i_23892 < n__13605__auto___23891)){
cljs.core.chunk_append(b,(function (){var G__23877 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23892);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23877) : f.call(null,G__23877));
})());

var G__23893 = (i_23892 + (1));
i_23892 = G__23893;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23878 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23878) : f.call(null,G__23878));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__23879 = cljs.core.first(s1);
var G__23880 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23879,G__23880) : f.call(null,G__23879,G__23880));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__23881 = cljs.core.first(s1);
var G__23882 = cljs.core.first(s2);
var G__23883 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23881,G__23882,G__23883) : f.call(null,G__23881,G__23882,G__23883));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__23894__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__23831_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__23831_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__23894 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23895__i = 0, G__23895__a = new Array(arguments.length -  4);
while (G__23895__i < G__23895__a.length) {G__23895__a[G__23895__i] = arguments[G__23895__i + 4]; ++G__23895__i;}
  colls = new cljs.core.IndexedSeq(G__23895__a,0);
} 
return G__23894__delegate.call(this,f,c1,c2,c3,colls);};
G__23894.cljs$lang$maxFixedArity = 4;
G__23894.cljs$lang$applyTo = (function (arglist__23896){
var f = cljs.core.first(arglist__23896);
arglist__23896 = cljs.core.next(arglist__23896);
var c1 = cljs.core.first(arglist__23896);
arglist__23896 = cljs.core.next(arglist__23896);
var c2 = cljs.core.first(arglist__23896);
arglist__23896 = cljs.core.next(arglist__23896);
var c3 = cljs.core.first(arglist__23896);
var colls = cljs.core.rest(arglist__23896);
return G__23894__delegate(f,c1,c2,c3,colls);
});
G__23894.cljs$core$IFn$_invoke$arity$variadic = G__23894__delegate;
return G__23894;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__23897 = null;
if (arguments.length > 4) {
var G__23898__i = 0, G__23898__a = new Array(arguments.length -  4);
while (G__23898__i < G__23898__a.length) {G__23898__a[G__23898__i] = arguments[G__23898__i + 4]; ++G__23898__i;}
G__23897 = new cljs.core.IndexedSeq(G__23898__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23907 = null;
var G__23907__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23907__1 = (function (result){
var G__23904 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23904) : rf.call(null,G__23904));
});
var G__23907__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__23905 = result;
var G__23906 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23905,G__23906) : rf.call(null,G__23905,G__23906));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__23907 = function(result,input){
switch(arguments.length){
case 0:
return G__23907__0.call(this);
case 1:
return G__23907__1.call(this,result);
case 2:
return G__23907__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23907.cljs$core$IFn$_invoke$arity$0 = G__23907__0;
G__23907.cljs$core$IFn$_invoke$arity$1 = G__23907__1;
G__23907.cljs$core$IFn$_invoke$arity$2 = G__23907__2;
return G__23907;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23914 = null;
var G__23914__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23914__1 = (function (result){
var G__23911 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23911) : rf.call(null,G__23911));
});
var G__23914__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__23912 = result;
var G__23913 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23912,G__23913) : rf.call(null,G__23912,G__23913));
}
});
G__23914 = function(result,input){
switch(arguments.length){
case 0:
return G__23914__0.call(this);
case 1:
return G__23914__1.call(this,result);
case 2:
return G__23914__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23914.cljs$core$IFn$_invoke$arity$0 = G__23914__0;
G__23914.cljs$core$IFn$_invoke$arity$1 = G__23914__1;
G__23914.cljs$core$IFn$_invoke$arity$2 = G__23914__2;
return G__23914;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__23915 = (n__$1 - (1));
var G__23916 = cljs.core.rest(s);
n__$1 = G__23915;
coll__$1 = G__23916;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__23919 = cljs.core.next(s);
var G__23920 = cljs.core.next(lead);
s = G__23919;
lead = G__23920;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__23933 = null;
var G__23933__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23933__1 = (function (result){
var G__23927 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23927) : rf.call(null,G__23927));
});
var G__23933__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12706__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12706__auto__)){
var G__23928 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23928) : pred.call(null,G__23928));
} else {
return and__12706__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__23929 = result;
var G__23930 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23929,G__23930) : rf.call(null,G__23929,G__23930));
}
});
G__23933 = function(result,input){
switch(arguments.length){
case 0:
return G__23933__0.call(this);
case 1:
return G__23933__1.call(this,result);
case 2:
return G__23933__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23933.cljs$core$IFn$_invoke$arity$0 = G__23933__0;
G__23933.cljs$core$IFn$_invoke$arity$1 = G__23933__1;
G__23933.cljs$core$IFn$_invoke$arity$2 = G__23933__2;
return G__23933;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12706__auto__ = s;
if(and__12706__auto__){
var G__23932 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23932) : pred__$1.call(null,G__23932));
} else {
return and__12706__auto__;
}
})())){
var G__23934 = pred__$1;
var G__23935 = cljs.core.rest(s);
pred__$1 = G__23934;
coll__$1 = G__23935;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__23944 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23944) : f.call(null,G__23944));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__23947__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__23947 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23948__i = 0, G__23948__a = new Array(arguments.length -  2);
while (G__23948__i < G__23948__a.length) {G__23948__a[G__23948__i] = arguments[G__23948__i + 2]; ++G__23948__i;}
  colls = new cljs.core.IndexedSeq(G__23948__a,0);
} 
return G__23947__delegate.call(this,c1,c2,colls);};
G__23947.cljs$lang$maxFixedArity = 2;
G__23947.cljs$lang$applyTo = (function (arglist__23949){
var c1 = cljs.core.first(arglist__23949);
arglist__23949 = cljs.core.next(arglist__23949);
var c2 = cljs.core.first(arglist__23949);
var colls = cljs.core.rest(arglist__23949);
return G__23947__delegate(c1,c2,colls);
});
G__23947.cljs$core$IFn$_invoke$arity$variadic = G__23947__delegate;
return G__23947;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__23950 = null;
if (arguments.length > 2) {
var G__23951__i = 0, G__23951__a = new Array(arguments.length -  2);
while (G__23951__i < G__23951__a.length) {G__23951__a[G__23951__i] = arguments[G__23951__i + 2]; ++G__23951__i;}
G__23950 = new cljs.core.IndexedSeq(G__23951__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__23950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__23966 = null;
var G__23966__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23966__1 = (function (result){
var G__23959 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23959) : rf.call(null,G__23959));
});
var G__23966__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__23960 = result;
var G__23961 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23960,G__23961) : rf.call(null,G__23960,G__23961));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__23962 = sepr;
var G__23963 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23962,G__23963) : rf.call(null,G__23962,G__23963));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__23964 = result;
var G__23965 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23964,G__23965) : rf.call(null,G__23964,G__23965));
}
});
G__23966 = function(result,input){
switch(arguments.length){
case 0:
return G__23966__0.call(this);
case 1:
return G__23966__1.call(this,result);
case 2:
return G__23966__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23966.cljs$core$IFn$_invoke$arity$0 = G__23966__0;
G__23966.cljs$core$IFn$_invoke$arity$1 = G__23966__1;
G__23966.cljs$core$IFn$_invoke$arity$2 = G__23966__2;
return G__23966;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__23975__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__23975 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__23976__i = 0, G__23976__a = new Array(arguments.length -  1);
while (G__23976__i < G__23976__a.length) {G__23976__a[G__23976__i] = arguments[G__23976__i + 1]; ++G__23976__i;}
  colls = new cljs.core.IndexedSeq(G__23976__a,0);
} 
return G__23975__delegate.call(this,f,colls);};
G__23975.cljs$lang$maxFixedArity = 1;
G__23975.cljs$lang$applyTo = (function (arglist__23977){
var f = cljs.core.first(arglist__23977);
var colls = cljs.core.rest(arglist__23977);
return G__23975__delegate(f,colls);
});
G__23975.cljs$core$IFn$_invoke$arity$variadic = G__23975__delegate;
return G__23975;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__23978 = null;
if (arguments.length > 1) {
var G__23979__i = 0, G__23979__a = new Array(arguments.length -  1);
while (G__23979__i < G__23979__a.length) {G__23979__a[G__23979__i] = arguments[G__23979__i + 1]; ++G__23979__i;}
G__23978 = new cljs.core.IndexedSeq(G__23979__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__23998 = null;
var G__23998__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23998__1 = (function (result){
var G__23992 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23992) : rf.call(null,G__23992));
});
var G__23998__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23993 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23993) : pred.call(null,G__23993));
})())){
var G__23994 = result;
var G__23995 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23994,G__23995) : rf.call(null,G__23994,G__23995));
} else {
return result;
}
});
G__23998 = function(result,input){
switch(arguments.length){
case 0:
return G__23998__0.call(this);
case 1:
return G__23998__1.call(this,result);
case 2:
return G__23998__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23998.cljs$core$IFn$_invoke$arity$0 = G__23998__0;
G__23998.cljs$core$IFn$_invoke$arity$1 = G__23998__1;
G__23998.cljs$core$IFn$_invoke$arity$2 = G__23998__2;
return G__23998;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13605__auto___23999 = size;
var i_24000 = (0);
while(true){
if((i_24000 < n__13605__auto___23999)){
if(cljs.core.truth_((function (){var G__23996 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24000);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23996) : pred.call(null,G__23996));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24000));
} else {
}

var G__24001 = (i_24000 + (1));
i_24000 = G__24001;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__23997 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23997) : pred.call(null,G__23997));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__24008 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__24008) : branch_QMARK_.call(null,G__24008));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__24009 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__24009) : children.call(null,G__24009));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24010_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__24010_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__24013 = to;
if(G__24013){
var bit__13392__auto__ = (G__24013.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13392__auto__) || (G__24013.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__24014 = to;
if(G__24014){
var bit__13392__auto__ = (G__24014.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13392__auto__) || (G__24014.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__24016 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24016) : f.call(null,G__24016));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__24017__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__24017 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24018__i = 0, G__24018__a = new Array(arguments.length -  4);
while (G__24018__i < G__24018__a.length) {G__24018__a[G__24018__i] = arguments[G__24018__i + 4]; ++G__24018__i;}
  colls = new cljs.core.IndexedSeq(G__24018__a,0);
} 
return G__24017__delegate.call(this,f,c1,c2,c3,colls);};
G__24017.cljs$lang$maxFixedArity = 4;
G__24017.cljs$lang$applyTo = (function (arglist__24019){
var f = cljs.core.first(arglist__24019);
arglist__24019 = cljs.core.next(arglist__24019);
var c1 = cljs.core.first(arglist__24019);
arglist__24019 = cljs.core.next(arglist__24019);
var c2 = cljs.core.first(arglist__24019);
arglist__24019 = cljs.core.next(arglist__24019);
var c3 = cljs.core.first(arglist__24019);
var colls = cljs.core.rest(arglist__24019);
return G__24017__delegate(f,c1,c2,c3,colls);
});
G__24017.cljs$core$IFn$_invoke$arity$variadic = G__24017__delegate;
return G__24017;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__24020 = null;
if (arguments.length > 4) {
var G__24021__i = 0, G__24021__a = new Array(arguments.length -  4);
while (G__24021__i < G__24021__a.length) {G__24021__a[G__24021__i] = arguments[G__24021__i + 4]; ++G__24021__i;}
G__24020 = new cljs.core.IndexedSeq(G__24021__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__24023 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24023) : pred.call(null,G__24023));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__24038 = m__$1;
if(G__24038){
var bit__13399__auto__ = (G__24038.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13399__auto__) || (G__24038.cljs$core$ILookup$)){
return true;
} else {
if((!G__24038.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24038);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24038);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__24039 = sentinel;
var G__24040 = m__$2;
var G__24041 = cljs.core.next(ks__$1);
sentinel = G__24039;
m__$1 = G__24040;
ks__$1 = G__24041;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__24042,v){
var vec__24047 = p__24042;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24047,(0),null);
var ks = cljs.core.nthnext(vec__24047,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__24048,f){
var vec__24086 = p__24048;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24086,(0),null);
var ks = cljs.core.nthnext(vec__24086,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24087 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24087) : f.call(null,G__24087));
})());
}
});
var update_in__4 = (function (m,p__24049,f,a){
var vec__24088 = p__24049;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24088,(0),null);
var ks = cljs.core.nthnext(vec__24088,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24089 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24090 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24089,G__24090) : f.call(null,G__24089,G__24090));
})());
}
});
var update_in__5 = (function (m,p__24050,f,a,b){
var vec__24091 = p__24050;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24091,(0),null);
var ks = cljs.core.nthnext(vec__24091,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24092 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24093 = a;
var G__24094 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24092,G__24093,G__24094) : f.call(null,G__24092,G__24093,G__24094));
})());
}
});
var update_in__6 = (function (m,p__24051,f,a,b,c){
var vec__24095 = p__24051;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24095,(0),null);
var ks = cljs.core.nthnext(vec__24095,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24096 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24097 = a;
var G__24098 = b;
var G__24099 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24096,G__24097,G__24098,G__24099) : f.call(null,G__24096,G__24097,G__24098,G__24099));
})());
}
});
var update_in__7 = (function() { 
var G__24101__delegate = function (m,p__24052,f,a,b,c,args){
var vec__24100 = p__24052;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24100,(0),null);
var ks = cljs.core.nthnext(vec__24100,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__24101 = function (m,p__24052,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__24102__i = 0, G__24102__a = new Array(arguments.length -  6);
while (G__24102__i < G__24102__a.length) {G__24102__a[G__24102__i] = arguments[G__24102__i + 6]; ++G__24102__i;}
  args = new cljs.core.IndexedSeq(G__24102__a,0);
} 
return G__24101__delegate.call(this,m,p__24052,f,a,b,c,args);};
G__24101.cljs$lang$maxFixedArity = 6;
G__24101.cljs$lang$applyTo = (function (arglist__24103){
var m = cljs.core.first(arglist__24103);
arglist__24103 = cljs.core.next(arglist__24103);
var p__24052 = cljs.core.first(arglist__24103);
arglist__24103 = cljs.core.next(arglist__24103);
var f = cljs.core.first(arglist__24103);
arglist__24103 = cljs.core.next(arglist__24103);
var a = cljs.core.first(arglist__24103);
arglist__24103 = cljs.core.next(arglist__24103);
var b = cljs.core.first(arglist__24103);
arglist__24103 = cljs.core.next(arglist__24103);
var c = cljs.core.first(arglist__24103);
var args = cljs.core.rest(arglist__24103);
return G__24101__delegate(m,p__24052,f,a,b,c,args);
});
G__24101.cljs$core$IFn$_invoke$arity$variadic = G__24101__delegate;
return G__24101;
})()
;
update_in = function(m,p__24052,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__24052,f);
case 4:
return update_in__4.call(this,m,p__24052,f,a);
case 5:
return update_in__5.call(this,m,p__24052,f,a,b);
case 6:
return update_in__6.call(this,m,p__24052,f,a,b,c);
default:
var G__24104 = null;
if (arguments.length > 6) {
var G__24105__i = 0, G__24105__a = new Array(arguments.length -  6);
while (G__24105__i < G__24105__a.length) {G__24105__a[G__24105__i] = arguments[G__24105__i + 6]; ++G__24105__i;}
G__24104 = new cljs.core.IndexedSeq(G__24105__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__24052,f,a,b,c, G__24104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24116 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24116) : f.call(null,G__24116));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24117 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24118 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24117,G__24118) : f.call(null,G__24117,G__24118));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24119 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24120 = x;
var G__24121 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24119,G__24120,G__24121) : f.call(null,G__24119,G__24120,G__24121));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24122 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24123 = x;
var G__24124 = y;
var G__24125 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24122,G__24123,G__24124,G__24125) : f.call(null,G__24122,G__24123,G__24124,G__24125));
})());
});
var update__7 = (function() { 
var G__24126__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__24126 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__24127__i = 0, G__24127__a = new Array(arguments.length -  6);
while (G__24127__i < G__24127__a.length) {G__24127__a[G__24127__i] = arguments[G__24127__i + 6]; ++G__24127__i;}
  more = new cljs.core.IndexedSeq(G__24127__a,0);
} 
return G__24126__delegate.call(this,m,k,f,x,y,z,more);};
G__24126.cljs$lang$maxFixedArity = 6;
G__24126.cljs$lang$applyTo = (function (arglist__24128){
var m = cljs.core.first(arglist__24128);
arglist__24128 = cljs.core.next(arglist__24128);
var k = cljs.core.first(arglist__24128);
arglist__24128 = cljs.core.next(arglist__24128);
var f = cljs.core.first(arglist__24128);
arglist__24128 = cljs.core.next(arglist__24128);
var x = cljs.core.first(arglist__24128);
arglist__24128 = cljs.core.next(arglist__24128);
var y = cljs.core.first(arglist__24128);
arglist__24128 = cljs.core.next(arglist__24128);
var z = cljs.core.first(arglist__24128);
var more = cljs.core.rest(arglist__24128);
return G__24126__delegate(m,k,f,x,y,z,more);
});
G__24126.cljs$core$IFn$_invoke$arity$variadic = G__24126__delegate;
return G__24126;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__24129 = null;
if (arguments.length > 6) {
var G__24130__i = 0, G__24130__a = new Array(arguments.length -  6);
while (G__24130__i < G__24130__a.length) {G__24130__a[G__24130__i] = arguments[G__24130__i + 6]; ++G__24130__i;}
G__24129 = new cljs.core.IndexedSeq(G__24130__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__24129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__24131 = (ll - (5));
var G__24132 = r;
ll = G__24131;
ret = G__24132;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24137 = cljs.core.pv_aget(node,(0));
var G__24138 = (level - (5));
node = G__24137;
level = G__24138;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24139 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__24140 = (level - (5));
node = G__24139;
level = G__24140;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24150 = init__$2;
var G__24151 = (j + i);
var G__24152 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24150,G__24151,G__24152) : f.call(null,G__24150,G__24151,G__24152));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24163 = (j + (1));
var G__24164 = init__$3;
j = G__24163;
init__$2 = G__24164;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24153 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24153) : cljs.core.deref.call(null,G__24153));
} else {
var G__24165 = (i + len);
var G__24166 = init__$2;
i = G__24165;
init__$1 = G__24166;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__24154 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__24154) : cljs.core.tv_editable_root.call(null,G__24154));
})(),(function (){var G__24155 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__24155) : cljs.core.tv_editable_tail.call(null,G__24155));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24156 = init__$2;
var G__24157 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24156,G__24157) : f.call(null,G__24156,G__24157));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24167 = (j + (1));
var G__24168 = init__$3;
j = G__24167;
init__$2 = G__24168;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24158 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24158) : cljs.core.deref.call(null,G__24158));
} else {
var G__24169 = (i + len);
var G__24170 = init__$2;
i = G__24169;
init__$1 = G__24170;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__24159 = coll__$1;
var G__24160 = cljs.core.first_array_for_longvec(coll__$1);
var G__24161 = (0);
var G__24162 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24159,G__24160,G__24161,G__24162) : cljs.core.chunked_seq.call(null,G__24159,G__24160,G__24161,G__24162));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13605__auto___24171 = len;
var i_24172 = (0);
while(true){
if((i_24172 < n__13605__auto___24171)){
(new_tail[i_24172] = (self__.tail[i_24172]));

var G__24173 = (i_24172 + (1));
i_24172 = G__24173;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__24174 = null;
var G__24174__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24174__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24174 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24174__2.call(this,self__,k);
case 3:
return G__24174__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24174.cljs$core$IFn$_invoke$arity$2 = G__24174__2;
G__24174.cljs$core$IFn$_invoke$arity$3 = G__24174__3;
return G__24174;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args24149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24149)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__24175 = (i + (1));
var G__24176 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__24175;
out = G__24176;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24177__i = 0, G__24177__a = new Array(arguments.length -  0);
while (G__24177__i < G__24177__a.length) {G__24177__a[G__24177__i] = arguments[G__24177__i + 0]; ++G__24177__i;}
  args = new cljs.core.IndexedSeq(G__24177__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__24178){
var args = cljs.core.seq(arglist__24178);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24179 = self__.vec;
var G__24180 = self__.node;
var G__24181 = self__.i;
var G__24182 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24179,G__24180,G__24181,G__24182) : cljs.core.chunked_seq.call(null,G__24179,G__24180,G__24181,G__24182));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__24183 = self__.vec;
var G__24184 = (self__.i + self__.off);
var G__24185 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24183,G__24184,G__24185) : cljs.core.subvec.call(null,G__24183,G__24184,G__24185));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__24186 = self__.vec;
var G__24187 = (self__.i + self__.off);
var G__24188 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24186,G__24187,G__24188) : cljs.core.subvec.call(null,G__24186,G__24187,G__24188));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24189 = self__.vec;
var G__24190 = self__.node;
var G__24191 = self__.i;
var G__24192 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24189,G__24190,G__24191,G__24192) : cljs.core.chunked_seq.call(null,G__24189,G__24190,G__24191,G__24192));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24193 = self__.vec;
var G__24194 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24195 = end;
var G__24196 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24193,G__24194,G__24195,G__24196) : cljs.core.chunked_seq.call(null,G__24193,G__24194,G__24195,G__24196));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__24197 = self__.vec;
var G__24198 = self__.node;
var G__24199 = self__.i;
var G__24200 = self__.off;
var G__24201 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__24197,G__24198,G__24199,G__24200,G__24201) : cljs.core.chunked_seq.call(null,G__24197,G__24198,G__24199,G__24200,G__24201));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24202 = self__.vec;
var G__24203 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24204 = end;
var G__24205 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24202,G__24203,G__24204,G__24205) : cljs.core.chunked_seq.call(null,G__24202,G__24203,G__24204,G__24205));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__24207 = self__.meta;
var G__24208 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__24209 = self__.start;
var G__24210 = (function (){var x__13035__auto__ = self__.end;
var y__13036__auto__ = (v_pos + (1));
return ((x__13035__auto__ > y__13036__auto__) ? x__13035__auto__ : y__13036__auto__);
})();
var G__24211 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24207,G__24208,G__24209,G__24210,G__24211) : cljs.core.build_subvec.call(null,G__24207,G__24208,G__24209,G__24210,G__24211));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__24212 = self__.meta;
var G__24213 = self__.v;
var G__24214 = self__.start;
var G__24215 = (self__.end - (1));
var G__24216 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24212,G__24213,G__24214,G__24215,G__24216) : cljs.core.build_subvec.call(null,G__24212,G__24213,G__24214,G__24215,G__24216));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__24218 = meta__$1;
var G__24219 = self__.v;
var G__24220 = self__.start;
var G__24221 = self__.end;
var G__24222 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24218,G__24219,G__24220,G__24221,G__24222) : cljs.core.build_subvec.call(null,G__24218,G__24219,G__24220,G__24221,G__24222));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24223 = self__.meta;
var G__24224 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__24225 = self__.start;
var G__24226 = (self__.end + (1));
var G__24227 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24223,G__24224,G__24225,G__24226,G__24227) : cljs.core.build_subvec.call(null,G__24223,G__24224,G__24225,G__24226,G__24227));
});

cljs.core.Subvec.prototype.call = (function() {
var G__24228 = null;
var G__24228__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24228__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24228 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24228__2.call(this,self__,k);
case 3:
return G__24228__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24228.cljs$core$IFn$_invoke$arity$2 = G__24228__2;
G__24228.cljs$core$IFn$_invoke$arity$3 = G__24228__3;
return G__24228;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args24206){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24206)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__24229 = meta;
var G__24230 = v.v;
var G__24231 = (v.start + start);
var G__24232 = (v.start + end);
var G__24233 = __hash;
meta = G__24229;
v = G__24230;
start = G__24231;
end = G__24232;
__hash = G__24233;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj24240 = {};
return obj24240;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__24248 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__24249 = (level - (5));
node = G__24248;
level = G__24249;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__24253 = null;
var G__24253__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24253__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24253 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24253__2.call(this,self__,k);
case 3:
return G__24253__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24253.cljs$core$IFn$_invoke$arity$2 = G__24253__2;
G__24253.cljs$core$IFn$_invoke$arity$3 = G__24253__3;
return G__24253;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args24250){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24250)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12718__auto__ = self__.front;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12718__auto__ = self__.rear;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__24254 = (i + incr);
i = G__24254;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__24255 = (i + (1));
var G__24256 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__24255;
out = G__24256;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj24260 = {};
return obj24260;
})();
var l = ks.length;
var i_24261 = (0);
while(true){
if((i_24261 < l)){
var k_24262 = (ks[i_24261]);
(new_obj[k_24262] = (obj[k_24262]));

var G__24263 = (i_24261 + (1));
i_24261 = G__24263;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12706__auto__ = (function (){var G__24267 = k;
return goog.isString(G__24267);
})();
if(cljs.core.truth_(and__12706__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12706__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__24268 = init__$1;
var G__24269 = k;
var G__24270 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24268,G__24269,G__24270) : f.call(null,G__24268,G__24269,G__24270));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24271 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24271) : cljs.core.deref.call(null,G__24271));
} else {
var G__24277 = cljs.core.rest(keys__$1);
var G__24278 = init__$2;
keys__$1 = G__24277;
init__$1 = G__24278;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12706__auto__ = (function (){var G__24273 = k;
return goog.isString(G__24273);
})();
if(cljs.core.truth_(and__12706__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12706__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__24274 = k;
return goog.isString(G__24274);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12706__auto__ = (function (){var G__24276 = k;
return goog.isString(G__24276);
})();
if(cljs.core.truth_(and__12706__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12706__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__24264_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__24264_SHARP_,(self__.strobj[p1__24264_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__24279 = null;
var G__24279__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24279__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24279 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24279__2.call(this,self__,k);
case 3:
return G__24279__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24279.cljs$core$IFn$_invoke$arity$2 = G__24279__2;
G__24279.cljs$core$IFn$_invoke$arity$3 = G__24279__3;
return G__24279;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args24265){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24265)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj24281 = {};
return obj24281;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__24282 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24282,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24282,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__24283 = (i + (2));
i = G__24283;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__24284 = (i + (2));
i = G__24284;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__24285 = (i + (2));
i = G__24285;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__24286 = (i + (2));
i = G__24286;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__24287 = (i + (2));
i = G__24287;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12718__auto__ = (function (){var G__24291 = k;
return goog.isString(G__24291);
})();
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24292 = (0);
while(true){
if((i_24292 < l)){
(narr[i_24292] = (arr[i_24292]));

var G__24293 = (i_24292 + (1));
i_24292 = G__24293;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24295 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24295) : cljs.core.keys.call(null,G__24295));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24296 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24296) : cljs.core.vals.call(null,G__24296));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24297 = cljs.core.seq(coll);
var chunk__24298 = null;
var count__24299 = (0);
var i__24300 = (0);
while(true){
if((i__24300 < count__24299)){
var vec__24301 = chunk__24298.cljs$core$IIndexed$_nth$arity$2(null,i__24300);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24301,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24301,(1),null);
var G__24302_24315 = v;
var G__24303_24316 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24302_24315,G__24303_24316) : f.call(null,G__24302_24315,G__24303_24316));

var G__24317 = seq__24297;
var G__24318 = chunk__24298;
var G__24319 = count__24299;
var G__24320 = (i__24300 + (1));
seq__24297 = G__24317;
chunk__24298 = G__24318;
count__24299 = G__24319;
i__24300 = G__24320;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24297);
if(temp__4126__auto__){
var seq__24297__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24297__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__24297__$1);
var G__24321 = cljs.core.chunk_rest(seq__24297__$1);
var G__24322 = c__13505__auto__;
var G__24323 = cljs.core.count(c__13505__auto__);
var G__24324 = (0);
seq__24297 = G__24321;
chunk__24298 = G__24322;
count__24299 = G__24323;
i__24300 = G__24324;
continue;
} else {
var vec__24304 = cljs.core.first(seq__24297__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24304,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24304,(1),null);
var G__24305_24325 = v;
var G__24306_24326 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24305_24325,G__24306_24326) : f.call(null,G__24305_24325,G__24306_24326));

var G__24327 = cljs.core.next(seq__24297__$1);
var G__24328 = null;
var G__24329 = (0);
var G__24330 = (0);
seq__24297 = G__24327;
chunk__24298 = G__24328;
count__24299 = G__24329;
i__24300 = G__24330;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24307 = init__$1;
var G__24308 = (self__.arr[i]);
var G__24309 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24307,G__24308,G__24309) : f.call(null,G__24307,G__24308,G__24309));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24310 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24310) : cljs.core.deref.call(null,G__24310));
} else {
var G__24331 = (i + (2));
var G__24332 = init__$2;
i = G__24331;
init__$1 = G__24332;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24311 = other;
if(G__24311){
var bit__13392__auto__ = (G__24311.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13392__auto__) || (G__24311.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__24333 = (i + (2));
i = G__24333;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24313 = {};
return obj24313;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__24334 = (s + (2));
var G__24335 = d;
s = G__24334;
d = G__24335;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__24336 = (s + (2));
var G__24337 = (d + (2));
s = G__24336;
d = G__24337;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24314 = cljs.core.aclone(self__.arr);
(G__24314[(idx + (1))] = v);

return G__24314;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24338 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24339 = cljs.core.next(es);
ret = G__24338;
es = G__24339;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__24340 = null;
var G__24340__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24340__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24340 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24340__2.call(this,self__,k);
case 3:
return G__24340__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24340.cljs$core$IFn$_invoke$arity$2 = G__24340__2;
G__24340.cljs$core$IFn$_invoke$arity$3 = G__24340__3;
return G__24340;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24294){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24294)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24341 = (i + (2));
var G__24342 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24341;
ret = G__24342;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__24343_24351 = self__.arr;
G__24343_24351.pop();

G__24343_24351.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__24344 = self__.len;
var G__24345 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__24344,G__24345) : cljs.core.array__GT_transient_hash_map.call(null,G__24344,G__24345));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__24346 = o;
if(G__24346){
var bit__13399__auto__ = (G__24346.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13399__auto__) || (G__24346.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24346.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24346);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__24347 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24347) : cljs.core.key.call(null,G__24347));
})(),(function (){var G__24348 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24348) : cljs.core.val.call(null,G__24348));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24352 = cljs.core.next(es);
var G__24353 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__24349 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24349) : cljs.core.key.call(null,G__24349));
})(),(function (){var G__24350 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24350) : cljs.core.val.call(null,G__24350));
})());
es = G__24352;
tcoll__$2 = G__24353;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__24354 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__24355 = (i + (2));
out = G__24354;
i = G__24355;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__24358 = cljs.core.aclone(arr);
(G__24358[i] = a);

return G__24358;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__24359 = cljs.core.aclone(arr);
(G__24359[i] = a);

(G__24359[j] = b);

return G__24359;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__24364 = init__$1;
var G__24365 = k;
var G__24366 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24364,G__24365,G__24366) : f.call(null,G__24364,G__24365,G__24366));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24367 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24367) : cljs.core.deref.call(null,G__24367));
} else {
var G__24368 = (i + (2));
var G__24369 = init__$2;
i = G__24368;
init__$1 = G__24369;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24370 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24370) : cljs.core.create_inode_seq.call(null,G__24370));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24384 = (0);
var j_24385 = (0);
while(true){
if((i_24384 < (32))){
if((((self__.bitmap >>> i_24384) & (1)) === (0))){
var G__24386 = (i_24384 + (1));
var G__24387 = j_24385;
i_24384 = G__24386;
j_24385 = G__24387;
continue;
} else {
(nodes[i_24384] = ((!(((self__.arr[j_24385]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_24385])),(self__.arr[j_24385]),(self__.arr[(j_24385 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24385 + (1))])));

var G__24388 = (i_24384 + (1));
var G__24389 = (j_24385 + (2));
i_24384 = G__24388;
j_24385 = G__24389;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24371 = edit__$1;
var G__24372 = (shift + (5));
var G__24373 = key_or_nil;
var G__24374 = val_or_node;
var G__24375 = hash;
var G__24376 = key;
var G__24377 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377) : cljs.core.create_node.call(null,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24390 = (0);
var j_24391 = (0);
while(true){
if((i_24390 < (32))){
if((((self__.bitmap >>> i_24390) & (1)) === (0))){
var G__24392 = (i_24390 + (1));
var G__24393 = j_24391;
i_24390 = G__24392;
j_24391 = G__24393;
continue;
} else {
(nodes[i_24390] = ((!(((self__.arr[j_24391]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_24391])),(self__.arr[j_24391]),(self__.arr[(j_24391 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24391 + (1))])));

var G__24394 = (i_24390 + (1));
var G__24395 = (j_24391 + (2));
i_24390 = G__24394;
j_24391 = G__24395;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24378 = (shift + (5));
var G__24379 = key_or_nil;
var G__24380 = val_or_node;
var G__24381 = hash;
var G__24382 = key;
var G__24383 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24378,G__24379,G__24380,G__24381,G__24382,G__24383) : cljs.core.create_node.call(null,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__24396 = (i + (1));
var G__24397 = (j + (2));
var G__24398 = (bitmap | ((1) << i));
i = G__24396;
j = G__24397;
bitmap = G__24398;
continue;
} else {
var G__24399 = (i + (1));
var G__24400 = j;
var G__24401 = bitmap;
i = G__24399;
j = G__24400;
bitmap = G__24401;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24402 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__24402) : cljs.core.create_array_node_seq.call(null,G__24402));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24403 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24403) : cljs.core.deref.call(null,G__24403));
} else {
var G__24404 = (i + (1));
var G__24405 = init__$2;
i = G__24404;
init__$1 = G__24405;
continue;
}
} else {
var G__24406 = (i + (1));
var G__24407 = init__$1;
i = G__24406;
init__$1 = G__24407;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__24408 = (i + (2));
i = G__24408;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24409 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24409) : cljs.core.create_inode_seq.call(null,G__24409));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__24410 = self__.nodes;
var G__24411 = (self__.i + (2));
var G__24412 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24410,G__24411,G__24412) : cljs.core.create_inode_seq.call(null,G__24410,G__24411,G__24412));
} else {
var G__24413 = self__.nodes;
var G__24414 = self__.i;
var G__24415 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24413,G__24414,G__24415) : cljs.core.create_inode_seq.call(null,G__24413,G__24414,G__24415));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__24419 = (j + (2));
j = G__24419;
continue;
}
} else {
var G__24420 = (j + (2));
j = G__24420;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24421 = null;
var G__24422 = self__.nodes;
var G__24423 = self__.i;
var G__24424 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24421,G__24422,G__24423,G__24424) : cljs.core.create_array_node_seq.call(null,G__24421,G__24422,G__24423,G__24424));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__24429 = (j + (1));
j = G__24429;
continue;
}
} else {
var G__24430 = (j + (1));
j = G__24430;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24432 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24432) : cljs.core.keys.call(null,G__24432));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24433 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24433) : cljs.core.vals.call(null,G__24433));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24434 = cljs.core.seq(coll);
var chunk__24435 = null;
var count__24436 = (0);
var i__24437 = (0);
while(true){
if((i__24437 < count__24436)){
var vec__24438 = chunk__24435.cljs$core$IIndexed$_nth$arity$2(null,i__24437);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24438,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24438,(1),null);
var G__24439_24450 = v;
var G__24440_24451 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24439_24450,G__24440_24451) : f.call(null,G__24439_24450,G__24440_24451));

var G__24452 = seq__24434;
var G__24453 = chunk__24435;
var G__24454 = count__24436;
var G__24455 = (i__24437 + (1));
seq__24434 = G__24452;
chunk__24435 = G__24453;
count__24436 = G__24454;
i__24437 = G__24455;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24434);
if(temp__4126__auto__){
var seq__24434__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24434__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__24434__$1);
var G__24456 = cljs.core.chunk_rest(seq__24434__$1);
var G__24457 = c__13505__auto__;
var G__24458 = cljs.core.count(c__13505__auto__);
var G__24459 = (0);
seq__24434 = G__24456;
chunk__24435 = G__24457;
count__24436 = G__24458;
i__24437 = G__24459;
continue;
} else {
var vec__24441 = cljs.core.first(seq__24434__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24441,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24441,(1),null);
var G__24442_24460 = v;
var G__24443_24461 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24442_24460,G__24443_24461) : f.call(null,G__24442_24460,G__24443_24461));

var G__24462 = cljs.core.next(seq__24434__$1);
var G__24463 = null;
var G__24464 = (0);
var G__24465 = (0);
seq__24434 = G__24462;
chunk__24435 = G__24463;
count__24436 = G__24464;
i__24437 = G__24465;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__24444 = init;
var G__24445 = null;
var G__24446 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24444,G__24445,G__24446) : f.call(null,G__24444,G__24445,G__24446));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24447 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24447) : cljs.core.deref.call(null,G__24447));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj24449 = {};
return obj24449;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24466 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24467 = cljs.core.next(es);
ret = G__24466;
es = G__24467;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__24468 = null;
var G__24468__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24468__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24468 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24468__2.call(this,self__,k);
case 3:
return G__24468__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24468.cljs$core$IFn$_invoke$arity$2 = G__24468__2;
G__24468.cljs$core$IFn$_invoke$arity$3 = G__24468__3;
return G__24468;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args24431){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24431)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24469 = (i + (2));
var G__24470 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24469;
ret = G__24470;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24471 = (i + (1));
var G__24472 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__24471;
out = G__24472;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__24473 = o;
if(G__24473){
var bit__13399__auto__ = (G__24473.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13399__auto__) || (G__24473.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24473);
}
})()){
return tcoll.assoc_BANG_((function (){var G__24474 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24474) : cljs.core.key.call(null,G__24474));
})(),(function (){var G__24475 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24475) : cljs.core.val.call(null,G__24475));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24478 = cljs.core.next(es);
var G__24479 = tcoll__$1.assoc_BANG_((function (){var G__24476 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24476) : cljs.core.key.call(null,G__24476));
})(),(function (){var G__24477 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24477) : cljs.core.val.call(null,G__24477));
})());
es = G__24478;
tcoll__$1 = G__24479;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__24480 = ((ascending_QMARK_)?t.left:t.right);
var G__24481 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__24480;
stack__$1 = G__24481;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24494 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24494) : cljs.core.deref.call(null,G__24494));
} else {
var init__$2 = (function (){var G__24495 = init__$1;
var G__24496 = node.key;
var G__24497 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24495,G__24496,G__24497) : f.call(null,G__24495,G__24496,G__24497));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24498 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24498) : cljs.core.deref.call(null,G__24498));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__24499 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24499) : cljs.core.deref.call(null,G__24499));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__24501 = null;
var G__24501__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24501__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24501 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24501__2.call(this,self__,k);
case 3:
return G__24501__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24501.cljs$core$IFn$_invoke$arity$2 = G__24501__2;
G__24501.cljs$core$IFn$_invoke$arity$3 = G__24501__3;
return G__24501;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args24500){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24500)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__24503 = null;
var G__24503__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24503__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24503 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24503__2.call(this,self__,k);
case 3:
return G__24503__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24503.cljs$core$IFn$_invoke$arity$2 = G__24503__2;
G__24503.cljs$core$IFn$_invoke$arity$3 = G__24503__3;
return G__24503;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args24502){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24502)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__24516 = k;
var G__24517 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24516,G__24517) : comp.call(null,G__24516,G__24517));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__24536 = k;
var G__24537 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24536,G__24537) : comp.call(null,G__24536,G__24537));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__24548 = k;
var G__24549 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24548,G__24549) : comp.call(null,G__24548,G__24549));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24551 = cljs.core.seq(coll);
var chunk__24552 = null;
var count__24553 = (0);
var i__24554 = (0);
while(true){
if((i__24554 < count__24553)){
var vec__24555 = chunk__24552.cljs$core$IIndexed$_nth$arity$2(null,i__24554);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24555,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24555,(1),null);
var G__24556_24568 = v;
var G__24557_24569 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24556_24568,G__24557_24569) : f.call(null,G__24556_24568,G__24557_24569));

var G__24570 = seq__24551;
var G__24571 = chunk__24552;
var G__24572 = count__24553;
var G__24573 = (i__24554 + (1));
seq__24551 = G__24570;
chunk__24552 = G__24571;
count__24553 = G__24572;
i__24554 = G__24573;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24551);
if(temp__4126__auto__){
var seq__24551__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24551__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__24551__$1);
var G__24574 = cljs.core.chunk_rest(seq__24551__$1);
var G__24575 = c__13505__auto__;
var G__24576 = cljs.core.count(c__13505__auto__);
var G__24577 = (0);
seq__24551 = G__24574;
chunk__24552 = G__24575;
count__24553 = G__24576;
i__24554 = G__24577;
continue;
} else {
var vec__24558 = cljs.core.first(seq__24551__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24558,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24558,(1),null);
var G__24559_24578 = v;
var G__24560_24579 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24559_24578,G__24560_24579) : f.call(null,G__24559_24578,G__24560_24579));

var G__24580 = cljs.core.next(seq__24551__$1);
var G__24581 = null;
var G__24582 = (0);
var G__24583 = (0);
seq__24551 = G__24580;
chunk__24552 = G__24581;
count__24553 = G__24582;
i__24554 = G__24583;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24561 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24561) : cljs.core.keys.call(null,G__24561));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24562 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24562) : cljs.core.vals.call(null,G__24562));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24563 = k;
var G__24564 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24563,G__24564) : self__.comp.call(null,G__24563,G__24564));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__24584 = t.left;
t = G__24584;
continue;
} else {
var G__24585 = t.right;
t = G__24585;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24586 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24587 = cljs.core.next(es);
ret = G__24586;
es = G__24587;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__24588 = null;
var G__24588__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24588__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24588 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24588__2.call(this,self__,k);
case 3:
return G__24588__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24588.cljs$core$IFn$_invoke$arity$2 = G__24588__2;
G__24588.cljs$core$IFn$_invoke$arity$3 = G__24588__3;
return G__24588;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args24550){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24550)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24565 = k;
var G__24566 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24565,G__24566) : self__.comp.call(null,G__24565,G__24566));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__24589 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24590 = t.left;
stack = G__24589;
t = G__24590;
continue;
} else {
var G__24591 = stack;
var G__24592 = t.right;
stack = G__24591;
t = G__24592;
continue;
}
} else {
if((c > (0))){
var G__24593 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24594 = t.right;
stack = G__24593;
t = G__24594;
continue;
} else {
var G__24595 = stack;
var G__24596 = t.left;
stack = G__24595;
t = G__24596;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__24567 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24567) : cljs.core.key.call(null,G__24567));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__24597 = cljs.core.nnext(in$);
var G__24598 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24597;
out = G__24598;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24599__i = 0, G__24599__a = new Array(arguments.length -  0);
while (G__24599__i < G__24599__a.length) {G__24599__a[G__24599__i] = arguments[G__24599__i + 0]; ++G__24599__i;}
  keyvals = new cljs.core.IndexedSeq(G__24599__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__24600){
var keyvals = cljs.core.seq(arglist__24600);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24601__i = 0, G__24601__a = new Array(arguments.length -  0);
while (G__24601__i < G__24601__a.length) {G__24601__a[G__24601__i] = arguments[G__24601__i + 0]; ++G__24601__i;}
  keyvals = new cljs.core.IndexedSeq(G__24601__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__24602){
var keyvals = cljs.core.seq(arglist__24602);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj24606 = {};
return obj24606;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__24607 = cljs.core.nnext(kvs);
kvs = G__24607;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24608__i = 0, G__24608__a = new Array(arguments.length -  0);
while (G__24608__i < G__24608__a.length) {G__24608__a[G__24608__i] = arguments[G__24608__i + 0]; ++G__24608__i;}
  keyvals = new cljs.core.IndexedSeq(G__24608__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__24609){
var keyvals = cljs.core.seq(arglist__24609);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__24610 = cljs.core.nnext(in$);
var G__24611 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24610;
out = G__24611;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24612__i = 0, G__24612__a = new Array(arguments.length -  0);
while (G__24612__i < G__24612__a.length) {G__24612__a[G__24612__i] = arguments[G__24612__i + 0]; ++G__24612__i;}
  keyvals = new cljs.core.IndexedSeq(G__24612__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__24613){
var keyvals = cljs.core.seq(arglist__24613);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__24614 = cljs.core.nnext(in$);
var G__24615 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24614;
out = G__24615;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__24616__i = 0, G__24616__a = new Array(arguments.length -  1);
while (G__24616__i < G__24616__a.length) {G__24616__a[G__24616__i] = arguments[G__24616__i + 1]; ++G__24616__i;}
  keyvals = new cljs.core.IndexedSeq(G__24616__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__24617){
var comparator = cljs.core.first(arglist__24617);
var keyvals = cljs.core.rest(arglist__24617);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24618 = self__.mseq;
if(G__24618){
var bit__13399__auto__ = (G__24618.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13399__auto__) || (G__24618.cljs$core$INext$)){
return true;
} else {
if((!G__24618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24618);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24619 = self__.mseq;
if(G__24619){
var bit__13399__auto__ = (G__24619.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13399__auto__) || (G__24619.cljs$core$INext$)){
return true;
} else {
if((!G__24619.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24619);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24619);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24620 = self__.mseq;
if(G__24620){
var bit__13399__auto__ = (G__24620.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13399__auto__) || (G__24620.cljs$core$INext$)){
return true;
} else {
if((!G__24620.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24620);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24621 = self__.mseq;
if(G__24621){
var bit__13399__auto__ = (G__24621.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13399__auto__) || (G__24621.cljs$core$INext$)){
return true;
} else {
if((!G__24621.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24621);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__24622_SHARP_,p2__24623_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12718__auto__ = p1__24622_SHARP_;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__24623_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__24624__i = 0, G__24624__a = new Array(arguments.length -  0);
while (G__24624__i < G__24624__a.length) {G__24624__a[G__24624__i] = arguments[G__24624__i + 0]; ++G__24624__i;}
  maps = new cljs.core.IndexedSeq(G__24624__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__24625){
var maps = cljs.core.seq(arglist__24625);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24628 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24629 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24628,G__24629) : f.call(null,G__24628,G__24629));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12718__auto__ = m1;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__24630__i = 0, G__24630__a = new Array(arguments.length -  1);
while (G__24630__i < G__24630__a.length) {G__24630__a[G__24630__i] = arguments[G__24630__i + 1]; ++G__24630__i;}
  maps = new cljs.core.IndexedSeq(G__24630__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__24631){
var f = cljs.core.first(arglist__24631);
var maps = cljs.core.rest(arglist__24631);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__24632 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__24633 = cljs.core.next(keys);
ret = G__24632;
keys = G__24633;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24636 = cljs.core.seq(coll);
var chunk__24637 = null;
var count__24638 = (0);
var i__24639 = (0);
while(true){
if((i__24639 < count__24638)){
var vec__24640 = chunk__24637.cljs$core$IIndexed$_nth$arity$2(null,i__24639);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24640,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24640,(1),null);
var G__24641_24646 = v;
var G__24642_24647 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24641_24646,G__24642_24647) : f.call(null,G__24641_24646,G__24642_24647));

var G__24648 = seq__24636;
var G__24649 = chunk__24637;
var G__24650 = count__24638;
var G__24651 = (i__24639 + (1));
seq__24636 = G__24648;
chunk__24637 = G__24649;
count__24638 = G__24650;
i__24639 = G__24651;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24636);
if(temp__4126__auto__){
var seq__24636__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24636__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__24636__$1);
var G__24652 = cljs.core.chunk_rest(seq__24636__$1);
var G__24653 = c__13505__auto__;
var G__24654 = cljs.core.count(c__13505__auto__);
var G__24655 = (0);
seq__24636 = G__24652;
chunk__24637 = G__24653;
count__24638 = G__24654;
i__24639 = G__24655;
continue;
} else {
var vec__24643 = cljs.core.first(seq__24636__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24643,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24643,(1),null);
var G__24644_24656 = v;
var G__24645_24657 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24644_24656,G__24645_24657) : f.call(null,G__24644_24656,G__24645_24657));

var G__24658 = cljs.core.next(seq__24636__$1);
var G__24659 = null;
var G__24660 = (0);
var G__24661 = (0);
seq__24636 = G__24658;
chunk__24637 = G__24659;
count__24638 = G__24660;
i__24639 = G__24661;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24634_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24634_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__24662 = null;
var G__24662__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24662__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24662 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24662__2.call(this,self__,k);
case 3:
return G__24662__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24662.cljs$core$IFn$_invoke$arity$2 = G__24662__2;
G__24662.cljs$core$IFn$_invoke$arity$3 = G__24662__3;
return G__24662;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args24635){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24635)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24663 = (i + (1));
var G__24664 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__24663;
out = G__24664;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__24665 = (i + (1));
var G__24666 = cljs.core._conj_BANG_(out,(items[i]));
i = G__24665;
out = G__24666;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__24668 = null;
var G__24668__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__24668__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__24668 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24668__2.call(this,self__,k);
case 3:
return G__24668__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24668.cljs$core$IFn$_invoke$arity$2 = G__24668__2;
G__24668.cljs$core$IFn$_invoke$arity$3 = G__24668__3;
return G__24668;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args24667){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24667)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24671 = cljs.core.seq(coll);
var chunk__24672 = null;
var count__24673 = (0);
var i__24674 = (0);
while(true){
if((i__24674 < count__24673)){
var vec__24675 = chunk__24672.cljs$core$IIndexed$_nth$arity$2(null,i__24674);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24675,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24675,(1),null);
var G__24676_24681 = v;
var G__24677_24682 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24676_24681,G__24677_24682) : f.call(null,G__24676_24681,G__24677_24682));

var G__24683 = seq__24671;
var G__24684 = chunk__24672;
var G__24685 = count__24673;
var G__24686 = (i__24674 + (1));
seq__24671 = G__24683;
chunk__24672 = G__24684;
count__24673 = G__24685;
i__24674 = G__24686;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24671);
if(temp__4126__auto__){
var seq__24671__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24671__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__24671__$1);
var G__24687 = cljs.core.chunk_rest(seq__24671__$1);
var G__24688 = c__13505__auto__;
var G__24689 = cljs.core.count(c__13505__auto__);
var G__24690 = (0);
seq__24671 = G__24687;
chunk__24672 = G__24688;
count__24673 = G__24689;
i__24674 = G__24690;
continue;
} else {
var vec__24678 = cljs.core.first(seq__24671__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24678,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24678,(1),null);
var G__24679_24691 = v;
var G__24680_24692 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24679_24691,G__24680_24692) : f.call(null,G__24679_24691,G__24680_24692));

var G__24693 = cljs.core.next(seq__24671__$1);
var G__24694 = null;
var G__24695 = (0);
var G__24696 = (0);
seq__24671 = G__24693;
chunk__24672 = G__24694;
count__24673 = G__24695;
i__24674 = G__24696;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24669_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24669_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__24697 = null;
var G__24697__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24697__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24697 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24697__2.call(this,self__,k);
case 3:
return G__24697__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24697.cljs$core$IFn$_invoke$arity$2 = G__24697__2;
G__24697.cljs$core$IFn$_invoke$arity$3 = G__24697__3;
return G__24697;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args24670){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24670)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13599__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13599__auto__.length)){
var G__24698 = (i + (1));
var G__24699 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__24698;
res = G__24699;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__24700 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__24701 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__24700;
out = G__24701;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__24702__delegate = function (keys){
return cljs.core.set(keys);
};
var G__24702 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24703__i = 0, G__24703__a = new Array(arguments.length -  0);
while (G__24703__i < G__24703__a.length) {G__24703__a[G__24703__i] = arguments[G__24703__i + 0]; ++G__24703__i;}
  keys = new cljs.core.IndexedSeq(G__24703__a,0);
} 
return G__24702__delegate.call(this,keys);};
G__24702.cljs$lang$maxFixedArity = 0;
G__24702.cljs$lang$applyTo = (function (arglist__24704){
var keys = cljs.core.seq(arglist__24704);
return G__24702__delegate(keys);
});
G__24702.cljs$core$IFn$_invoke$arity$variadic = G__24702__delegate;
return G__24702;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__24705 = null;
if (arguments.length > 0) {
var G__24706__i = 0, G__24706__a = new Array(arguments.length -  0);
while (G__24706__i < G__24706__a.length) {G__24706__a[G__24706__i] = arguments[G__24706__i + 0]; ++G__24706__i;}
G__24705 = new cljs.core.IndexedSeq(G__24706__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__24705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24707__i = 0, G__24707__a = new Array(arguments.length -  0);
while (G__24707__i < G__24707__a.length) {G__24707__a[G__24707__i] = arguments[G__24707__i + 0]; ++G__24707__i;}
  keys = new cljs.core.IndexedSeq(G__24707__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__24708){
var keys = cljs.core.seq(arglist__24708);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__24709__i = 0, G__24709__a = new Array(arguments.length -  1);
while (G__24709__i < G__24709__a.length) {G__24709__a[G__24709__i] = arguments[G__24709__i + 1]; ++G__24709__i;}
  keys = new cljs.core.IndexedSeq(G__24709__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__24710){
var comparator = cljs.core.first(arglist__24710);
var keys = cljs.core.rest(arglist__24710);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__24711_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24711_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__24711_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24712_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24712_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__24712_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__24733 = null;
var G__24733__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24733__1 = (function (result){
var G__24723 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24723) : rf.call(null,G__24723));
});
var G__24733__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__24724 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24724) : cljs.core.deref.call(null,G__24724));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__24725 = result;
var G__24726 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24725,G__24726) : rf.call(null,G__24725,G__24726));
}
});
G__24733 = function(result,input){
switch(arguments.length){
case 0:
return G__24733__0.call(this);
case 1:
return G__24733__1.call(this,result);
case 2:
return G__24733__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24733.cljs$core$IFn$_invoke$arity$0 = G__24733__0;
G__24733.cljs$core$IFn$_invoke$arity$1 = G__24733__1;
G__24733.cljs$core$IFn$_invoke$arity$2 = G__24733__2;
return G__24733;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__24731,seen__$1){
while(true){
var vec__24732 = p__24731;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24732,(0),null);
var xs__$1 = vec__24732;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__24734 = cljs.core.rest(s);
var G__24735 = seen__$1;
p__24731 = G__24734;
seen__$1 = G__24735;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__24736 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__24737 = cljs.core.next(s__$1);
ret = G__24736;
s__$1 = G__24737;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__24739 = x;
if(G__24739){
var bit__13392__auto__ = (G__24739.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13392__auto__) || (G__24739.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__24740 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__24741 = cljs.core.next(ks);
var G__24742 = cljs.core.next(vs);
map = G__24740;
ks = G__24741;
vs = G__24742;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__24753 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24753) : k.call(null,G__24753));
})() > (function (){var G__24754 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24754) : k.call(null,G__24754));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__24755__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24743_SHARP_,p2__24744_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__24743_SHARP_,p2__24744_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24755 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24756__i = 0, G__24756__a = new Array(arguments.length -  3);
while (G__24756__i < G__24756__a.length) {G__24756__a[G__24756__i] = arguments[G__24756__i + 3]; ++G__24756__i;}
  more = new cljs.core.IndexedSeq(G__24756__a,0);
} 
return G__24755__delegate.call(this,k,x,y,more);};
G__24755.cljs$lang$maxFixedArity = 3;
G__24755.cljs$lang$applyTo = (function (arglist__24757){
var k = cljs.core.first(arglist__24757);
arglist__24757 = cljs.core.next(arglist__24757);
var x = cljs.core.first(arglist__24757);
arglist__24757 = cljs.core.next(arglist__24757);
var y = cljs.core.first(arglist__24757);
var more = cljs.core.rest(arglist__24757);
return G__24755__delegate(k,x,y,more);
});
G__24755.cljs$core$IFn$_invoke$arity$variadic = G__24755__delegate;
return G__24755;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__24758 = null;
if (arguments.length > 3) {
var G__24759__i = 0, G__24759__a = new Array(arguments.length -  3);
while (G__24759__i < G__24759__a.length) {G__24759__a[G__24759__i] = arguments[G__24759__i + 3]; ++G__24759__i;}
G__24758 = new cljs.core.IndexedSeq(G__24759__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__24770 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24770) : k.call(null,G__24770));
})() < (function (){var G__24771 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24771) : k.call(null,G__24771));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__24772__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24760_SHARP_,p2__24761_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__24760_SHARP_,p2__24761_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24772 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24773__i = 0, G__24773__a = new Array(arguments.length -  3);
while (G__24773__i < G__24773__a.length) {G__24773__a[G__24773__i] = arguments[G__24773__i + 3]; ++G__24773__i;}
  more = new cljs.core.IndexedSeq(G__24773__a,0);
} 
return G__24772__delegate.call(this,k,x,y,more);};
G__24772.cljs$lang$maxFixedArity = 3;
G__24772.cljs$lang$applyTo = (function (arglist__24774){
var k = cljs.core.first(arglist__24774);
arglist__24774 = cljs.core.next(arglist__24774);
var x = cljs.core.first(arglist__24774);
arglist__24774 = cljs.core.next(arglist__24774);
var y = cljs.core.first(arglist__24774);
var more = cljs.core.rest(arglist__24774);
return G__24772__delegate(k,x,y,more);
});
G__24772.cljs$core$IFn$_invoke$arity$variadic = G__24772__delegate;
return G__24772;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__24775 = null;
if (arguments.length > 3) {
var G__24776__i = 0, G__24776__a = new Array(arguments.length -  3);
while (G__24776__i < G__24776__a.length) {G__24776__a[G__24776__i] = arguments[G__24776__i + 3]; ++G__24776__i;}
G__24775 = new cljs.core.IndexedSeq(G__24776__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__24793 = null;
var G__24793__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24793__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24788 = result;
var G__24789 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24788,G__24789) : rf.call(null,G__24788,G__24789));
})());
})());
var G__24790 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24790) : rf.call(null,G__24790));
});
var G__24793__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__24791 = result;
var G__24792 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24791,G__24792) : rf.call(null,G__24791,G__24792));
} else {
return result;
}
});
G__24793 = function(result,input){
switch(arguments.length){
case 0:
return G__24793__0.call(this);
case 1:
return G__24793__1.call(this,result);
case 2:
return G__24793__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24793.cljs$core$IFn$_invoke$arity$0 = G__24793__0;
G__24793.cljs$core$IFn$_invoke$arity$1 = G__24793__1;
G__24793.cljs$core$IFn$_invoke$arity$2 = G__24793__2;
return G__24793;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__24806 = null;
var G__24806__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24806__1 = (function (result){
var G__24801 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24801) : rf.call(null,G__24801));
});
var G__24806__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24802 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24802) : pred.call(null,G__24802));
})())){
var G__24803 = result;
var G__24804 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24803,G__24804) : rf.call(null,G__24803,G__24804));
} else {
return cljs.core.reduced(result);
}
});
G__24806 = function(result,input){
switch(arguments.length){
case 0:
return G__24806__0.call(this);
case 1:
return G__24806__1.call(this,result);
case 2:
return G__24806__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24806.cljs$core$IFn$_invoke$arity$0 = G__24806__0;
G__24806.cljs$core$IFn$_invoke$arity$1 = G__24806__1;
G__24806.cljs$core$IFn$_invoke$arity$2 = G__24806__2;
return G__24806;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__24805 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24805) : pred.call(null,G__24805));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__24811 = (function (){var G__24813 = cljs.core._entry_key(sc,e);
var G__24814 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24813,G__24814) : comp.call(null,G__24813,G__24814));
})();
var G__24812 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24811,G__24812) : test.call(null,G__24811,G__24812));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24818 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24818,(0),null);
var s = vec__24818;
if(cljs.core.truth_((function (){var G__24819 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24819) : include.call(null,G__24819));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24820 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24820,(0),null);
var s = vec__24820;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24824 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24824,(0),null);
var s = vec__24824;
if(cljs.core.truth_((function (){var G__24825 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24825) : include.call(null,G__24825));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24826 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24826,(0),null);
var s = vec__24826;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__24827 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24827) : Math.ceil.call(null,G__24827));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13139__auto__ = self__.__hash;
if(!((h__13139__auto__ == null))){
return h__13139__auto__;
} else {
var h__13139__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13139__auto____$1;

return h__13139__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__24828 = ret;
var G__24829 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24828,G__24829) : f.call(null,G__24828,G__24829));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__24830 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24830) : cljs.core.deref.call(null,G__24830));
} else {
var G__24831 = (i + self__.step);
var G__24832 = ret__$1;
i = G__24831;
ret = G__24832;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24850 = null;
var G__24850__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24850__1 = (function (result){
var G__24847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24847) : rf.call(null,G__24847));
});
var G__24850__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__24848 = result;
var G__24849 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24848,G__24849) : rf.call(null,G__24848,G__24849));
} else {
return result;
}
});
G__24850 = function(result,input){
switch(arguments.length){
case 0:
return G__24850__0.call(this);
case 1:
return G__24850__1.call(this,result);
case 2:
return G__24850__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24850.cljs$core$IFn$_invoke$arity$0 = G__24850__0;
G__24850.cljs$core$IFn$_invoke$arity$1 = G__24850__1;
G__24850.cljs$core$IFn$_invoke$arity$2 = G__24850__2;
return G__24850;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__24872 = null;
var G__24872__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24872__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24863 = result;
var G__24864 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24863,G__24864) : rf.call(null,G__24863,G__24864));
})());
})());
var G__24865 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24865) : rf.call(null,G__24865));
});
var G__24872__2 = (function (result,input){
var pval = (function (){var G__24866 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24866) : cljs.core.deref.call(null,G__24866));
})();
var val = (function (){var G__24867 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24867) : f.call(null,G__24867));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__24868 = result;
var G__24869 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24868,G__24869) : rf.call(null,G__24868,G__24869));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__24872 = function(result,input){
switch(arguments.length){
case 0:
return G__24872__0.call(this);
case 1:
return G__24872__1.call(this,result);
case 2:
return G__24872__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24872.cljs$core$IFn$_invoke$arity$0 = G__24872__0;
G__24872.cljs$core$IFn$_invoke$arity$1 = G__24872__1;
G__24872.cljs$core$IFn$_invoke$arity$2 = G__24872__2;
return G__24872;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__24870 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24870) : f.call(null,G__24870));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__24851_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__24871 = p1__24851_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24871) : f.call(null,G__24871));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__24881 = init;
var G__24882 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24881,G__24882) : f.call(null,G__24881,G__24882));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__24977 = null;
var G__24977__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__24977__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24935 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24935) : f.call(null,G__24935));
})()],null));
});
var G__24977__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24936 = x;
var G__24937 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24936,G__24937) : f.call(null,G__24936,G__24937));
})()],null));
});
var G__24977__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24938 = x;
var G__24939 = y;
var G__24940 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24938,G__24939,G__24940) : f.call(null,G__24938,G__24939,G__24940));
})()],null));
});
var G__24977__4 = (function() { 
var G__24978__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__24978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24979__i = 0, G__24979__a = new Array(arguments.length -  3);
while (G__24979__i < G__24979__a.length) {G__24979__a[G__24979__i] = arguments[G__24979__i + 3]; ++G__24979__i;}
  args = new cljs.core.IndexedSeq(G__24979__a,0);
} 
return G__24978__delegate.call(this,x,y,z,args);};
G__24978.cljs$lang$maxFixedArity = 3;
G__24978.cljs$lang$applyTo = (function (arglist__24980){
var x = cljs.core.first(arglist__24980);
arglist__24980 = cljs.core.next(arglist__24980);
var y = cljs.core.first(arglist__24980);
arglist__24980 = cljs.core.next(arglist__24980);
var z = cljs.core.first(arglist__24980);
var args = cljs.core.rest(arglist__24980);
return G__24978__delegate(x,y,z,args);
});
G__24978.cljs$core$IFn$_invoke$arity$variadic = G__24978__delegate;
return G__24978;
})()
;
G__24977 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24977__0.call(this);
case 1:
return G__24977__1.call(this,x);
case 2:
return G__24977__2.call(this,x,y);
case 3:
return G__24977__3.call(this,x,y,z);
default:
var G__24981 = null;
if (arguments.length > 3) {
var G__24982__i = 0, G__24982__a = new Array(arguments.length -  3);
while (G__24982__i < G__24982__a.length) {G__24982__a[G__24982__i] = arguments[G__24982__i + 3]; ++G__24982__i;}
G__24981 = new cljs.core.IndexedSeq(G__24982__a,0);
}
return G__24977__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24977.cljs$lang$maxFixedArity = 3;
G__24977.cljs$lang$applyTo = G__24977__4.cljs$lang$applyTo;
G__24977.cljs$core$IFn$_invoke$arity$0 = G__24977__0;
G__24977.cljs$core$IFn$_invoke$arity$1 = G__24977__1;
G__24977.cljs$core$IFn$_invoke$arity$2 = G__24977__2;
G__24977.cljs$core$IFn$_invoke$arity$3 = G__24977__3;
G__24977.cljs$core$IFn$_invoke$arity$variadic = G__24977__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24977;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__24983 = null;
var G__24983__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__24983__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24941 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24941) : f.call(null,G__24941));
})(),(function (){var G__24942 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24942) : g.call(null,G__24942));
})()],null));
});
var G__24983__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24943 = x;
var G__24944 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24943,G__24944) : f.call(null,G__24943,G__24944));
})(),(function (){var G__24945 = x;
var G__24946 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24945,G__24946) : g.call(null,G__24945,G__24946));
})()],null));
});
var G__24983__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24947 = x;
var G__24948 = y;
var G__24949 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24947,G__24948,G__24949) : f.call(null,G__24947,G__24948,G__24949));
})(),(function (){var G__24950 = x;
var G__24951 = y;
var G__24952 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24950,G__24951,G__24952) : g.call(null,G__24950,G__24951,G__24952));
})()],null));
});
var G__24983__4 = (function() { 
var G__24984__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__24984 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24985__i = 0, G__24985__a = new Array(arguments.length -  3);
while (G__24985__i < G__24985__a.length) {G__24985__a[G__24985__i] = arguments[G__24985__i + 3]; ++G__24985__i;}
  args = new cljs.core.IndexedSeq(G__24985__a,0);
} 
return G__24984__delegate.call(this,x,y,z,args);};
G__24984.cljs$lang$maxFixedArity = 3;
G__24984.cljs$lang$applyTo = (function (arglist__24986){
var x = cljs.core.first(arglist__24986);
arglist__24986 = cljs.core.next(arglist__24986);
var y = cljs.core.first(arglist__24986);
arglist__24986 = cljs.core.next(arglist__24986);
var z = cljs.core.first(arglist__24986);
var args = cljs.core.rest(arglist__24986);
return G__24984__delegate(x,y,z,args);
});
G__24984.cljs$core$IFn$_invoke$arity$variadic = G__24984__delegate;
return G__24984;
})()
;
G__24983 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24983__0.call(this);
case 1:
return G__24983__1.call(this,x);
case 2:
return G__24983__2.call(this,x,y);
case 3:
return G__24983__3.call(this,x,y,z);
default:
var G__24987 = null;
if (arguments.length > 3) {
var G__24988__i = 0, G__24988__a = new Array(arguments.length -  3);
while (G__24988__i < G__24988__a.length) {G__24988__a[G__24988__i] = arguments[G__24988__i + 3]; ++G__24988__i;}
G__24987 = new cljs.core.IndexedSeq(G__24988__a,0);
}
return G__24983__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24983.cljs$lang$maxFixedArity = 3;
G__24983.cljs$lang$applyTo = G__24983__4.cljs$lang$applyTo;
G__24983.cljs$core$IFn$_invoke$arity$0 = G__24983__0;
G__24983.cljs$core$IFn$_invoke$arity$1 = G__24983__1;
G__24983.cljs$core$IFn$_invoke$arity$2 = G__24983__2;
G__24983.cljs$core$IFn$_invoke$arity$3 = G__24983__3;
G__24983.cljs$core$IFn$_invoke$arity$variadic = G__24983__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24983;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__24989 = null;
var G__24989__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__24989__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24953 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24953) : f.call(null,G__24953));
})(),(function (){var G__24954 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24954) : g.call(null,G__24954));
})(),(function (){var G__24955 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24955) : h.call(null,G__24955));
})()],null));
});
var G__24989__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24956 = x;
var G__24957 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24956,G__24957) : f.call(null,G__24956,G__24957));
})(),(function (){var G__24958 = x;
var G__24959 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24958,G__24959) : g.call(null,G__24958,G__24959));
})(),(function (){var G__24960 = x;
var G__24961 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24960,G__24961) : h.call(null,G__24960,G__24961));
})()],null));
});
var G__24989__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24962 = x;
var G__24963 = y;
var G__24964 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24962,G__24963,G__24964) : f.call(null,G__24962,G__24963,G__24964));
})(),(function (){var G__24965 = x;
var G__24966 = y;
var G__24967 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24965,G__24966,G__24967) : g.call(null,G__24965,G__24966,G__24967));
})(),(function (){var G__24968 = x;
var G__24969 = y;
var G__24970 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24968,G__24969,G__24970) : h.call(null,G__24968,G__24969,G__24970));
})()],null));
});
var G__24989__4 = (function() { 
var G__24990__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__24990 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24991__i = 0, G__24991__a = new Array(arguments.length -  3);
while (G__24991__i < G__24991__a.length) {G__24991__a[G__24991__i] = arguments[G__24991__i + 3]; ++G__24991__i;}
  args = new cljs.core.IndexedSeq(G__24991__a,0);
} 
return G__24990__delegate.call(this,x,y,z,args);};
G__24990.cljs$lang$maxFixedArity = 3;
G__24990.cljs$lang$applyTo = (function (arglist__24992){
var x = cljs.core.first(arglist__24992);
arglist__24992 = cljs.core.next(arglist__24992);
var y = cljs.core.first(arglist__24992);
arglist__24992 = cljs.core.next(arglist__24992);
var z = cljs.core.first(arglist__24992);
var args = cljs.core.rest(arglist__24992);
return G__24990__delegate(x,y,z,args);
});
G__24990.cljs$core$IFn$_invoke$arity$variadic = G__24990__delegate;
return G__24990;
})()
;
G__24989 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24989__0.call(this);
case 1:
return G__24989__1.call(this,x);
case 2:
return G__24989__2.call(this,x,y);
case 3:
return G__24989__3.call(this,x,y,z);
default:
var G__24993 = null;
if (arguments.length > 3) {
var G__24994__i = 0, G__24994__a = new Array(arguments.length -  3);
while (G__24994__i < G__24994__a.length) {G__24994__a[G__24994__i] = arguments[G__24994__i + 3]; ++G__24994__i;}
G__24993 = new cljs.core.IndexedSeq(G__24994__a,0);
}
return G__24989__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24989.cljs$lang$maxFixedArity = 3;
G__24989.cljs$lang$applyTo = G__24989__4.cljs$lang$applyTo;
G__24989.cljs$core$IFn$_invoke$arity$0 = G__24989__0;
G__24989.cljs$core$IFn$_invoke$arity$1 = G__24989__1;
G__24989.cljs$core$IFn$_invoke$arity$2 = G__24989__2;
G__24989.cljs$core$IFn$_invoke$arity$3 = G__24989__3;
G__24989.cljs$core$IFn$_invoke$arity$variadic = G__24989__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24989;
})()
});
var juxt__4 = (function() { 
var G__24995__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__24996 = null;
var G__24996__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24883_SHARP_,p2__24884_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24883_SHARP_,(function (){return (p2__24884_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24884_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24884_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24996__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24885_SHARP_,p2__24886_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24885_SHARP_,(function (){var G__24971 = x;
return (p2__24886_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24886_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24971) : p2__24886_SHARP_.call(null,G__24971));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24996__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24887_SHARP_,p2__24888_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24887_SHARP_,(function (){var G__24972 = x;
var G__24973 = y;
return (p2__24888_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24888_SHARP_.cljs$core$IFn$_invoke$arity$2(G__24972,G__24973) : p2__24888_SHARP_.call(null,G__24972,G__24973));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24996__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24889_SHARP_,p2__24890_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24889_SHARP_,(function (){var G__24974 = x;
var G__24975 = y;
var G__24976 = z;
return (p2__24890_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24890_SHARP_.cljs$core$IFn$_invoke$arity$3(G__24974,G__24975,G__24976) : p2__24890_SHARP_.call(null,G__24974,G__24975,G__24976));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24996__4 = (function() { 
var G__24997__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24891_SHARP_,p2__24892_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24891_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24892_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__24997 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24998__i = 0, G__24998__a = new Array(arguments.length -  3);
while (G__24998__i < G__24998__a.length) {G__24998__a[G__24998__i] = arguments[G__24998__i + 3]; ++G__24998__i;}
  args = new cljs.core.IndexedSeq(G__24998__a,0);
} 
return G__24997__delegate.call(this,x,y,z,args);};
G__24997.cljs$lang$maxFixedArity = 3;
G__24997.cljs$lang$applyTo = (function (arglist__24999){
var x = cljs.core.first(arglist__24999);
arglist__24999 = cljs.core.next(arglist__24999);
var y = cljs.core.first(arglist__24999);
arglist__24999 = cljs.core.next(arglist__24999);
var z = cljs.core.first(arglist__24999);
var args = cljs.core.rest(arglist__24999);
return G__24997__delegate(x,y,z,args);
});
G__24997.cljs$core$IFn$_invoke$arity$variadic = G__24997__delegate;
return G__24997;
})()
;
G__24996 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24996__0.call(this);
case 1:
return G__24996__1.call(this,x);
case 2:
return G__24996__2.call(this,x,y);
case 3:
return G__24996__3.call(this,x,y,z);
default:
var G__25000 = null;
if (arguments.length > 3) {
var G__25001__i = 0, G__25001__a = new Array(arguments.length -  3);
while (G__25001__i < G__25001__a.length) {G__25001__a[G__25001__i] = arguments[G__25001__i + 3]; ++G__25001__i;}
G__25000 = new cljs.core.IndexedSeq(G__25001__a,0);
}
return G__24996__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24996.cljs$lang$maxFixedArity = 3;
G__24996.cljs$lang$applyTo = G__24996__4.cljs$lang$applyTo;
G__24996.cljs$core$IFn$_invoke$arity$0 = G__24996__0;
G__24996.cljs$core$IFn$_invoke$arity$1 = G__24996__1;
G__24996.cljs$core$IFn$_invoke$arity$2 = G__24996__2;
G__24996.cljs$core$IFn$_invoke$arity$3 = G__24996__3;
G__24996.cljs$core$IFn$_invoke$arity$variadic = G__24996__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24996;
})()
;})(fs__$1))
};
var G__24995 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25002__i = 0, G__25002__a = new Array(arguments.length -  3);
while (G__25002__i < G__25002__a.length) {G__25002__a[G__25002__i] = arguments[G__25002__i + 3]; ++G__25002__i;}
  fs = new cljs.core.IndexedSeq(G__25002__a,0);
} 
return G__24995__delegate.call(this,f,g,h,fs);};
G__24995.cljs$lang$maxFixedArity = 3;
G__24995.cljs$lang$applyTo = (function (arglist__25003){
var f = cljs.core.first(arglist__25003);
arglist__25003 = cljs.core.next(arglist__25003);
var g = cljs.core.first(arglist__25003);
arglist__25003 = cljs.core.next(arglist__25003);
var h = cljs.core.first(arglist__25003);
var fs = cljs.core.rest(arglist__25003);
return G__24995__delegate(f,g,h,fs);
});
G__24995.cljs$core$IFn$_invoke$arity$variadic = G__24995__delegate;
return G__24995;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__25004 = null;
if (arguments.length > 3) {
var G__25005__i = 0, G__25005__a = new Array(arguments.length -  3);
while (G__25005__i < G__25005__a.length) {G__25005__a[G__25005__i] = arguments[G__25005__i + 3]; ++G__25005__i;}
G__25004 = new cljs.core.IndexedSeq(G__25005__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__25004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__25006 = cljs.core.next(coll);
coll = G__25006;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__25007 = (n - (1));
var G__25008 = cljs.core.next(coll);
n = G__25007;
coll = G__25008;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__25012 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25012,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25012,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25012,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_25020 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__25021_25027 = cljs.core.first(coll);
var G__25022_25028 = writer;
var G__25023_25029 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25021_25027,G__25022_25028,G__25023_25029) : print_one.call(null,G__25021_25027,G__25022_25028,G__25023_25029));
} else {
}

var coll_25030__$1 = cljs.core.next(coll);
var n_25031 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_25030__$1) && (((n_25031 == null)) || (!((n_25031 === (0)))))){
cljs.core._write(writer,sep);

var G__25024_25032 = cljs.core.first(coll_25030__$1);
var G__25025_25033 = writer;
var G__25026_25034 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25024_25032,G__25025_25033,G__25026_25034) : print_one.call(null,G__25024_25032,G__25025_25033,G__25026_25034));

var G__25035 = cljs.core.next(coll_25030__$1);
var G__25036 = (n_25031 - (1));
coll_25030__$1 = G__25035;
n_25031 = G__25036;
continue;
} else {
if((cljs.core.seq(coll_25030__$1)) && ((n_25031 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_25020;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__25041 = cljs.core.seq(ss);
var chunk__25042 = null;
var count__25043 = (0);
var i__25044 = (0);
while(true){
if((i__25044 < count__25043)){
var s = chunk__25042.cljs$core$IIndexed$_nth$arity$2(null,i__25044);
cljs.core._write(writer,s);

var G__25045 = seq__25041;
var G__25046 = chunk__25042;
var G__25047 = count__25043;
var G__25048 = (i__25044 + (1));
seq__25041 = G__25045;
chunk__25042 = G__25046;
count__25043 = G__25047;
i__25044 = G__25048;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25041);
if(temp__4126__auto__){
var seq__25041__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25041__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__25041__$1);
var G__25049 = cljs.core.chunk_rest(seq__25041__$1);
var G__25050 = c__13505__auto__;
var G__25051 = cljs.core.count(c__13505__auto__);
var G__25052 = (0);
seq__25041 = G__25049;
chunk__25042 = G__25050;
count__25043 = G__25051;
i__25044 = G__25052;
continue;
} else {
var s = cljs.core.first(seq__25041__$1);
cljs.core._write(writer,s);

var G__25053 = cljs.core.next(seq__25041__$1);
var G__25054 = null;
var G__25055 = (0);
var G__25056 = (0);
seq__25041 = G__25053;
chunk__25042 = G__25054;
count__25043 = G__25055;
i__25044 = G__25056;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__25057__i = 0, G__25057__a = new Array(arguments.length -  1);
while (G__25057__i < G__25057__a.length) {G__25057__a[G__25057__i] = arguments[G__25057__i + 1]; ++G__25057__i;}
  ss = new cljs.core.IndexedSeq(G__25057__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__25058){
var writer = cljs.core.first(arglist__25058);
var ss = cljs.core.rest(arglist__25058);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj25060 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj25060;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__25063 = "[\\\\\"\b\f\n\r\t]";
var G__25064 = "g";
return RegExp(G__25063,G__25064);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12706__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12706__auto__)){
var and__12706__auto____$1 = (function (){var G__25078 = obj;
if(G__25078){
var bit__13399__auto__ = (G__25078.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13399__auto__) || (G__25078.cljs$core$IMeta$)){
return true;
} else {
if((!G__25078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25078);
}
})();
if(and__12706__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__25079 = obj;
if(G__25079){
var bit__13392__auto__ = (G__25079.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13392__auto__) || (G__25079.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__25080 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__25081 = pr_writer;
var G__25082 = writer;
var G__25083 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__25080,G__25081,G__25082,G__25083) : cljs.core.print_map.call(null,G__25080,G__25081,G__25082,G__25083));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__25084 = obj;
return goog.isString(G__25084);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__25086 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__25086;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__25085 = obj;
if(G__25085){
var bit__13399__auto__ = (G__25085.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13399__auto__) || (G__25085.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__25085.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25085);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25085);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__25091 = cljs.core.seq(cljs.core.next(objs));
var chunk__25092 = null;
var count__25093 = (0);
var i__25094 = (0);
while(true){
if((i__25094 < count__25093)){
var obj = chunk__25092.cljs$core$IIndexed$_nth$arity$2(null,i__25094);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25095 = seq__25091;
var G__25096 = chunk__25092;
var G__25097 = count__25093;
var G__25098 = (i__25094 + (1));
seq__25091 = G__25095;
chunk__25092 = G__25096;
count__25093 = G__25097;
i__25094 = G__25098;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25091);
if(temp__4126__auto__){
var seq__25091__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25091__$1)){
var c__13505__auto__ = cljs.core.chunk_first(seq__25091__$1);
var G__25099 = cljs.core.chunk_rest(seq__25091__$1);
var G__25100 = c__13505__auto__;
var G__25101 = cljs.core.count(c__13505__auto__);
var G__25102 = (0);
seq__25091 = G__25099;
chunk__25092 = G__25100;
count__25093 = G__25101;
i__25094 = G__25102;
continue;
} else {
var obj = cljs.core.first(seq__25091__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25103 = cljs.core.next(seq__25091__$1);
var G__25104 = null;
var G__25105 = (0);
var G__25106 = (0);
seq__25091 = G__25103;
chunk__25092 = G__25104;
count__25093 = G__25105;
i__25094 = G__25106;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25107__i = 0, G__25107__a = new Array(arguments.length -  0);
while (G__25107__i < G__25107__a.length) {G__25107__a[G__25107__i] = arguments[G__25107__i + 0]; ++G__25107__i;}
  objs = new cljs.core.IndexedSeq(G__25107__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__25108){
var objs = cljs.core.seq(arglist__25108);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25109__i = 0, G__25109__a = new Array(arguments.length -  0);
while (G__25109__i < G__25109__a.length) {G__25109__a[G__25109__i] = arguments[G__25109__i + 0]; ++G__25109__i;}
  objs = new cljs.core.IndexedSeq(G__25109__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__25110){
var objs = cljs.core.seq(arglist__25110);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25111__i = 0, G__25111__a = new Array(arguments.length -  0);
while (G__25111__i < G__25111__a.length) {G__25111__a[G__25111__i] = arguments[G__25111__i + 0]; ++G__25111__i;}
  objs = new cljs.core.IndexedSeq(G__25111__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__25112){
var objs = cljs.core.seq(arglist__25112);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25113__i = 0, G__25113__a = new Array(arguments.length -  0);
while (G__25113__i < G__25113__a.length) {G__25113__a[G__25113__i] = arguments[G__25113__i + 0]; ++G__25113__i;}
  objs = new cljs.core.IndexedSeq(G__25113__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__25114){
var objs = cljs.core.seq(arglist__25114);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25115__i = 0, G__25115__a = new Array(arguments.length -  0);
while (G__25115__i < G__25115__a.length) {G__25115__a[G__25115__i] = arguments[G__25115__i + 0]; ++G__25115__i;}
  objs = new cljs.core.IndexedSeq(G__25115__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__25116){
var objs = cljs.core.seq(arglist__25116);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25117__i = 0, G__25117__a = new Array(arguments.length -  0);
while (G__25117__i < G__25117__a.length) {G__25117__a[G__25117__i] = arguments[G__25117__i + 0]; ++G__25117__i;}
  objs = new cljs.core.IndexedSeq(G__25117__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__25118){
var objs = cljs.core.seq(arglist__25118);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25119__i = 0, G__25119__a = new Array(arguments.length -  0);
while (G__25119__i < G__25119__a.length) {G__25119__a[G__25119__i] = arguments[G__25119__i + 0]; ++G__25119__i;}
  objs = new cljs.core.IndexedSeq(G__25119__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__25120){
var objs = cljs.core.seq(arglist__25120);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25121__i = 0, G__25121__a = new Array(arguments.length -  0);
while (G__25121__i < G__25121__a.length) {G__25121__a[G__25121__i] = arguments[G__25121__i + 0]; ++G__25121__i;}
  objs = new cljs.core.IndexedSeq(G__25121__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__25122){
var objs = cljs.core.seq(arglist__25122);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__25129_25135 = cljs.core.key(e);
var G__25130_25136 = w;
var G__25131_25137 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25129_25135,G__25130_25136,G__25131_25137) : print_one.call(null,G__25129_25135,G__25130_25136,G__25131_25137));

cljs.core._write(w," ");

var G__25132 = cljs.core.val(e);
var G__25133 = w;
var G__25134 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25132,G__25133,G__25134) : print_one.call(null,G__25132,G__25133,G__25134));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__25138__i = 0, G__25138__a = new Array(arguments.length -  2);
while (G__25138__i < G__25138__a.length) {G__25138__a[G__25138__i] = arguments[G__25138__i + 2]; ++G__25138__i;}
  args = new cljs.core.IndexedSeq(G__25138__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__25139){
var iref = cljs.core.first(arglist__25139);
arglist__25139 = cljs.core.next(arglist__25139);
var f = cljs.core.first(arglist__25139);
var args = cljs.core.rest(arglist__25139);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__25142 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25142) : cljs.core.atom.call(null,G__25142));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__25144 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25144) : cljs.core.deref.call(null,G__25144));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__25145_SHARP_,p2__25146_SHARP_){
var ret = (function (){var G__25149 = p1__25145_SHARP_;
var G__25150 = p2__25146_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25149,G__25150) : rf.call(null,G__25149,G__25150));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__25153 = null;
var G__25153__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25153__1 = (function (result){
var G__25152 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25152) : rf.call(null,G__25152));
});
var G__25153__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__25153 = function(result,input){
switch(arguments.length){
case 0:
return G__25153__0.call(this);
case 1:
return G__25153__1.call(this,result);
case 2:
return G__25153__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25153.cljs$core$IFn$_invoke$arity$0 = G__25153__0;
G__25153.cljs$core$IFn$_invoke$arity$1 = G__25153__1;
G__25153.cljs$core$IFn$_invoke$arity$2 = G__25153__2;
return G__25153;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__25162 = null;
var G__25162__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25162__1 = (function (result){
var G__25158 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25158) : rf.call(null,G__25158));
});
var G__25162__2 = (function (result,input){
var prior = (function (){var G__25159 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25159) : cljs.core.deref.call(null,G__25159));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__25160 = result;
var G__25161 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25160,G__25161) : rf.call(null,G__25160,G__25161));
}
});
G__25162 = function(result,input){
switch(arguments.length){
case 0:
return G__25162__0.call(this);
case 1:
return G__25162__1.call(this,result);
case 2:
return G__25162__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25162.cljs$core$IFn$_invoke$arity$0 = G__25162__0;
G__25162.cljs$core$IFn$_invoke$arity$1 = G__25162__1;
G__25162.cljs$core$IFn$_invoke$arity$2 = G__25162__2;
return G__25162;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13696__auto__ = this;
return cljs.core.es6_iterator(this__13696__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25164_SHARP_,p2__25163_SHARP_){
var G__25166 = p2__25163_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__25166) : proc.call(null,G__25166));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj25168 = {};
return obj25168;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._clj__GT_js[(function (){var G__25172 = x__13362__auto__;
return goog.typeOf(G__25172);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._key__GT_js[(function (){var G__25176 = x__13362__auto__;
return goog.typeOf(G__25176);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__25179 = k;
if(G__25179){
var bit__13399__auto__ = null;
if(cljs.core.truth_((function (){var or__12718__auto__ = bit__13399__auto__;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return G__25179.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25179.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25179);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25179);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__25180 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__25180) : cljs.core.clj__GT_js.call(null,G__25180));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__25196 = x;
if(G__25196){
var bit__13399__auto__ = null;
if(cljs.core.truth_((function (){var or__12718__auto__ = bit__13399__auto__;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return G__25196.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25196.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25196);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj25198 = {};
return obj25198;
})();
var seq__25199_25209 = cljs.core.seq(x);
var chunk__25200_25210 = null;
var count__25201_25211 = (0);
var i__25202_25212 = (0);
while(true){
if((i__25202_25212 < count__25201_25211)){
var vec__25203_25213 = chunk__25200_25210.cljs$core$IIndexed$_nth$arity$2(null,i__25202_25212);
var k_25214 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25203_25213,(0),null);
var v_25215 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25203_25213,(1),null);
(m[cljs.core.key__GT_js(k_25214)] = clj__GT_js(v_25215));

var G__25216 = seq__25199_25209;
var G__25217 = chunk__25200_25210;
var G__25218 = count__25201_25211;
var G__25219 = (i__25202_25212 + (1));
seq__25199_25209 = G__25216;
chunk__25200_25210 = G__25217;
count__25201_25211 = G__25218;
i__25202_25212 = G__25219;
continue;
} else {
var temp__4126__auto___25220 = cljs.core.seq(seq__25199_25209);
if(temp__4126__auto___25220){
var seq__25199_25221__$1 = temp__4126__auto___25220;
if(cljs.core.chunked_seq_QMARK_(seq__25199_25221__$1)){
var c__13505__auto___25222 = cljs.core.chunk_first(seq__25199_25221__$1);
var G__25223 = cljs.core.chunk_rest(seq__25199_25221__$1);
var G__25224 = c__13505__auto___25222;
var G__25225 = cljs.core.count(c__13505__auto___25222);
var G__25226 = (0);
seq__25199_25209 = G__25223;
chunk__25200_25210 = G__25224;
count__25201_25211 = G__25225;
i__25202_25212 = G__25226;
continue;
} else {
var vec__25204_25227 = cljs.core.first(seq__25199_25221__$1);
var k_25228 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25204_25227,(0),null);
var v_25229 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25204_25227,(1),null);
(m[cljs.core.key__GT_js(k_25228)] = clj__GT_js(v_25229));

var G__25230 = cljs.core.next(seq__25199_25221__$1);
var G__25231 = null;
var G__25232 = (0);
var G__25233 = (0);
seq__25199_25209 = G__25230;
chunk__25200_25210 = G__25231;
count__25201_25211 = G__25232;
i__25202_25212 = G__25233;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__25205_25234 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__25206_25235 = null;
var count__25207_25236 = (0);
var i__25208_25237 = (0);
while(true){
if((i__25208_25237 < count__25207_25236)){
var x_25238__$1 = chunk__25206_25235.cljs$core$IIndexed$_nth$arity$2(null,i__25208_25237);
arr.push(x_25238__$1);

var G__25239 = seq__25205_25234;
var G__25240 = chunk__25206_25235;
var G__25241 = count__25207_25236;
var G__25242 = (i__25208_25237 + (1));
seq__25205_25234 = G__25239;
chunk__25206_25235 = G__25240;
count__25207_25236 = G__25241;
i__25208_25237 = G__25242;
continue;
} else {
var temp__4126__auto___25243 = cljs.core.seq(seq__25205_25234);
if(temp__4126__auto___25243){
var seq__25205_25244__$1 = temp__4126__auto___25243;
if(cljs.core.chunked_seq_QMARK_(seq__25205_25244__$1)){
var c__13505__auto___25245 = cljs.core.chunk_first(seq__25205_25244__$1);
var G__25246 = cljs.core.chunk_rest(seq__25205_25244__$1);
var G__25247 = c__13505__auto___25245;
var G__25248 = cljs.core.count(c__13505__auto___25245);
var G__25249 = (0);
seq__25205_25234 = G__25246;
chunk__25206_25235 = G__25247;
count__25207_25236 = G__25248;
i__25208_25237 = G__25249;
continue;
} else {
var x_25250__$1 = cljs.core.first(seq__25205_25244__$1);
arr.push(x_25250__$1);

var G__25251 = cljs.core.next(seq__25205_25244__$1);
var G__25252 = null;
var G__25253 = (0);
var G__25254 = (0);
seq__25205_25234 = G__25251;
chunk__25206_25235 = G__25252;
count__25207_25236 = G__25253;
i__25208_25237 = G__25254;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj25256 = {};
return obj25256;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12706__auto__ = x;
if(and__12706__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12706__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13362__auto__ = (((x == null))?null:x);
return (function (){var or__12718__auto__ = (cljs.core._js__GT_clj[(function (){var G__25260 = x__13362__auto__;
return goog.typeOf(G__25260);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__25317__delegate = function (x,opts){
var map__25290 = opts;
var map__25290__$1 = ((cljs.core.seq_QMARK_(map__25290))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25290):map__25290);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25290__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25290,map__25290__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25306 = x__$1;
if(G__25306){
var bit__13399__auto__ = null;
if(cljs.core.truth_((function (){var or__12718__auto__ = bit__13399__auto__;
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return G__25306.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25306.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25306);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25306);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13474__auto__ = ((function (map__25290,map__25290__$1,keywordize_keys,keyfn){
return (function iter__25307(s__25308){
return (new cljs.core.LazySeq(null,((function (map__25290,map__25290__$1,keywordize_keys,keyfn){
return (function (){
var s__25308__$1 = s__25308;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__25308__$1);
if(temp__4126__auto__){
var s__25308__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25308__$2)){
var c__13472__auto__ = cljs.core.chunk_first(s__25308__$2);
var size__13473__auto__ = cljs.core.count(c__13472__auto__);
var b__25310 = cljs.core.chunk_buffer(size__13473__auto__);
if((function (){var i__25309 = (0);
while(true){
if((i__25309 < size__13473__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13472__auto__,i__25309);
cljs.core.chunk_append(b__25310,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25315 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25315) : keyfn.call(null,G__25315));
})(),thisfn((x__$1[k]))], null));

var G__25318 = (i__25309 + (1));
i__25309 = G__25318;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__25310),iter__25307(cljs.core.chunk_rest(s__25308__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__25310),null);
}
} else {
var k = cljs.core.first(s__25308__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25316 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25316) : keyfn.call(null,G__25316));
})(),thisfn((x__$1[k]))], null),iter__25307(cljs.core.rest(s__25308__$2)));
}
} else {
return null;
}
break;
}
});})(map__25290,map__25290__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25290,map__25290__$1,keywordize_keys,keyfn))
;
return iter__13474__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25290,map__25290__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__25317 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__25319__i = 0, G__25319__a = new Array(arguments.length -  1);
while (G__25319__i < G__25319__a.length) {G__25319__a[G__25319__i] = arguments[G__25319__i + 1]; ++G__25319__i;}
  opts = new cljs.core.IndexedSeq(G__25319__a,0);
} 
return G__25317__delegate.call(this,x,opts);};
G__25317.cljs$lang$maxFixedArity = 1;
G__25317.cljs$lang$applyTo = (function (arglist__25320){
var x = cljs.core.first(arglist__25320);
var opts = cljs.core.rest(arglist__25320);
return G__25317__delegate(x,opts);
});
G__25317.cljs$core$IFn$_invoke$arity$variadic = G__25317__delegate;
return G__25317;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__25321 = null;
if (arguments.length > 1) {
var G__25322__i = 0, G__25322__a = new Array(arguments.length -  1);
while (G__25322__i < G__25322__a.length) {G__25322__a[G__25322__i] = arguments[G__25322__i + 1]; ++G__25322__i;}
G__25321 = new cljs.core.IndexedSeq(G__25322__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__25325 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25325) : cljs.core.atom.call(null,G__25325));
})();
return ((function (mem){
return (function() { 
var G__25327__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__25326 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25326) : cljs.core.deref.call(null,G__25326));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__25327 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25328__i = 0, G__25328__a = new Array(arguments.length -  0);
while (G__25328__i < G__25328__a.length) {G__25328__a[G__25328__i] = arguments[G__25328__i + 0]; ++G__25328__i;}
  args = new cljs.core.IndexedSeq(G__25328__a,0);
} 
return G__25327__delegate.call(this,args);};
G__25327.cljs$lang$maxFixedArity = 0;
G__25327.cljs$lang$applyTo = (function (arglist__25329){
var args = cljs.core.seq(arglist__25329);
return G__25327__delegate(args);
});
G__25327.cljs$core$IFn$_invoke$arity$variadic = G__25327__delegate;
return G__25327;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__25331 = ret;
f = G__25331;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__25332__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__25332 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25333__i = 0, G__25333__a = new Array(arguments.length -  1);
while (G__25333__i < G__25333__a.length) {G__25333__a[G__25333__i] = arguments[G__25333__i + 1]; ++G__25333__i;}
  args = new cljs.core.IndexedSeq(G__25333__a,0);
} 
return G__25332__delegate.call(this,f,args);};
G__25332.cljs$lang$maxFixedArity = 1;
G__25332.cljs$lang$applyTo = (function (arglist__25334){
var f = cljs.core.first(arglist__25334);
var args = cljs.core.rest(arglist__25334);
return G__25332__delegate(f,args);
});
G__25332.cljs$core$IFn$_invoke$arity$variadic = G__25332__delegate;
return G__25332;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__25335 = null;
if (arguments.length > 1) {
var G__25336__i = 0, G__25336__a = new Array(arguments.length -  1);
while (G__25336__i < G__25336__a.length) {G__25336__a[G__25336__i] = arguments[G__25336__i + 1]; ++G__25336__i;}
G__25335 = new cljs.core.IndexedSeq(G__25336__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__25339 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25339) : Math.floor.call(null,G__25339));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__25341 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25341) : f.call(null,G__25341));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__25343 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25343) : cljs.core.atom.call(null,G__25343));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25344__i = 0, G__25344__a = new Array(arguments.length -  1);
while (G__25344__i < G__25344__a.length) {G__25344__a[G__25344__i] = arguments[G__25344__i + 1]; ++G__25344__i;}
  args = new cljs.core.IndexedSeq(G__25344__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__25345){
var f = cljs.core.first(arglist__25345);
var args = cljs.core.rest(arglist__25345);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25410 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25410) : cljs.core.deref.call(null,G__25410));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12718__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
var and__12706__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12706__auto__){
var and__12706__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12706__auto____$1){
var and__12706__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12706__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__25435 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__25433 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__25433) : child.call(null,G__25433));
})(),(function (){var G__25434 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__25434) : parent.call(null,G__25434));
})());
var G__25436 = (i + (1));
ret = G__25435;
i = G__25436;
continue;
}
break;
}
} else {
return and__12706__auto____$2;
}
} else {
return and__12706__auto____$1;
}
} else {
return and__12706__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__25440 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25440) : cljs.core.deref.call(null,G__25440));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__25444 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25444) : cljs.core.deref.call(null,G__25444));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__25448 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25448) : cljs.core.deref.call(null,G__25448));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__25457 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__25457) : targets.call(null,G__25457));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__25458 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__25458) : sources.call(null,G__25458));
})()));
});})(tp,td,ta))
;
var or__12718__auto__ = ((cljs.core.contains_QMARK_((function (){var G__25462 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__25462) : tp.call(null,G__25462));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__25463 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25463) : ta.call(null,G__25463));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__25464 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25464) : ta.call(null,G__25464));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__25471 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25471) : parentMap.call(null,G__25471));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__25472 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25472) : parentMap.call(null,G__25472));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__25465_SHARP_){
return cljs.core.cons(cljs.core.first(p1__25465_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__25465_SHARP_),cljs.core.second(p1__25465_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__25473 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25473) : parentMap.call(null,G__25473));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__25466_SHARP_,p2__25467_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__25466_SHARP_,p2__25467_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__25476 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25476) : cljs.core.deref.call(null,G__25476));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__25477 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25477) : cljs.core.deref.call(null,G__25477));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__25493 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25493) : cljs.core.deref.call(null,G__25493));
})().call(null,x);
var or__12718__auto__ = (cljs.core.truth_((function (){var and__12706__auto__ = xprefs;
if(cljs.core.truth_(and__12706__auto__)){
var G__25495 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__25495) : xprefs.call(null,G__25495));
} else {
return and__12706__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__25496 = cljs.core.rest(ps);
ps = G__25496;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12718__auto____$1)){
return or__12718__auto____$1;
} else {
var or__12718__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__25497 = cljs.core.rest(ps);
ps = G__25497;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12718__auto____$2)){
return or__12718__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12718__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12718__auto__)){
return or__12718__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__25511){
var vec__25512 = p__25511;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25512,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25512,(1),null);
var e = vec__25512;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25513 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25513) : cljs.core.deref.call(null,G__25513));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12718__auto__ = (be == null);
if(or__12718__auto__){
return or__12718__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__25514 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25514) : cljs.core.deref.call(null,G__25514));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25515 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25515) : cljs.core.deref.call(null,G__25515));
})(),(function (){var G__25516 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25516) : cljs.core.deref.call(null,G__25516));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj25518 = {};
return obj25518;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._reset[(function (){var G__25522 = x__13362__auto__;
return goog.typeOf(G__25522);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._reset["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._add_method[(function (){var G__25526 = x__13362__auto__;
return goog.typeOf(G__25526);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._add_method["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._remove_method[(function (){var G__25530 = x__13362__auto__;
return goog.typeOf(G__25530);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._prefer_method[(function (){var G__25534 = x__13362__auto__;
return goog.typeOf(G__25534);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._get_method[(function (){var G__25538 = x__13362__auto__;
return goog.typeOf(G__25538);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._get_method["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._methods[(function (){var G__25542 = x__13362__auto__;
return goog.typeOf(G__25542);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._methods["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12706__auto__ = mf;
if(and__12706__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12706__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13362__auto__ = (((mf == null))?null:mf);
return (function (){var or__12718__auto__ = (cljs.core._prefers[(function (){var G__25546 = x__13362__auto__;
return goog.typeOf(G__25546);
})()]);
if(or__12718__auto__){
return or__12718__auto__;
} else {
var or__12718__auto____$1 = (cljs.core._prefers["_"]);
if(or__12718__auto____$1){
return or__12718__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25548 = this$__$1;
return goog.getUid(G__25548);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25549 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25549) : cljs.core.deref.call(null,G__25549));
})(),(function (){var G__25550 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25550) : cljs.core.deref.call(null,G__25550));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__25551 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25551) : cljs.core.deref.call(null,G__25551));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__25552 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25552) : cljs.core.deref.call(null,G__25552));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25553 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25553) : cljs.core.deref.call(null,G__25553));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25554 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25554) : cljs.core.deref.call(null,G__25554));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__26395 = null;
var G__26395__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__26395__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25555 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25555) : self__.dispatch_fn.call(null,G__25555));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25556 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25556) : target_fn.call(null,G__25556));
});
var G__26395__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25557 = a;
var G__25558 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25557,G__25558) : self__.dispatch_fn.call(null,G__25557,G__25558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25559 = a;
var G__25560 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25559,G__25560) : target_fn.call(null,G__25559,G__25560));
});
var G__26395__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25561 = a;
var G__25562 = b;
var G__25563 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25561,G__25562,G__25563) : self__.dispatch_fn.call(null,G__25561,G__25562,G__25563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25564 = a;
var G__25565 = b;
var G__25566 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25564,G__25565,G__25566) : target_fn.call(null,G__25564,G__25565,G__25566));
});
var G__26395__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25567 = a;
var G__25568 = b;
var G__25569 = c;
var G__25570 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25567,G__25568,G__25569,G__25570) : self__.dispatch_fn.call(null,G__25567,G__25568,G__25569,G__25570));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25571 = a;
var G__25572 = b;
var G__25573 = c;
var G__25574 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25571,G__25572,G__25573,G__25574) : target_fn.call(null,G__25571,G__25572,G__25573,G__25574));
});
var G__26395__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25575 = a;
var G__25576 = b;
var G__25577 = c;
var G__25578 = d;
var G__25579 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25575,G__25576,G__25577,G__25578,G__25579) : self__.dispatch_fn.call(null,G__25575,G__25576,G__25577,G__25578,G__25579));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25580 = a;
var G__25581 = b;
var G__25582 = c;
var G__25583 = d;
var G__25584 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25580,G__25581,G__25582,G__25583,G__25584) : target_fn.call(null,G__25580,G__25581,G__25582,G__25583,G__25584));
});
var G__26395__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25585 = a;
var G__25586 = b;
var G__25587 = c;
var G__25588 = d;
var G__25589 = e;
var G__25590 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25585,G__25586,G__25587,G__25588,G__25589,G__25590) : self__.dispatch_fn.call(null,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25591 = a;
var G__25592 = b;
var G__25593 = c;
var G__25594 = d;
var G__25595 = e;
var G__25596 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25591,G__25592,G__25593,G__25594,G__25595,G__25596) : target_fn.call(null,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596));
});
var G__26395__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25597 = a;
var G__25598 = b;
var G__25599 = c;
var G__25600 = d;
var G__25601 = e;
var G__25602 = f;
var G__25603 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603) : self__.dispatch_fn.call(null,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25604 = a;
var G__25605 = b;
var G__25606 = c;
var G__25607 = d;
var G__25608 = e;
var G__25609 = f;
var G__25610 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610) : target_fn.call(null,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610));
});
var G__26395__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25611 = a;
var G__25612 = b;
var G__25613 = c;
var G__25614 = d;
var G__25615 = e;
var G__25616 = f;
var G__25617 = g;
var G__25618 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618) : self__.dispatch_fn.call(null,G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25619 = a;
var G__25620 = b;
var G__25621 = c;
var G__25622 = d;
var G__25623 = e;
var G__25624 = f;
var G__25625 = g;
var G__25626 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626) : target_fn.call(null,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626));
});
var G__26395__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25627 = a;
var G__25628 = b;
var G__25629 = c;
var G__25630 = d;
var G__25631 = e;
var G__25632 = f;
var G__25633 = g;
var G__25634 = h;
var G__25635 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635) : self__.dispatch_fn.call(null,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25636 = a;
var G__25637 = b;
var G__25638 = c;
var G__25639 = d;
var G__25640 = e;
var G__25641 = f;
var G__25642 = g;
var G__25643 = h;
var G__25644 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644) : target_fn.call(null,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644));
});
var G__26395__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25645 = a;
var G__25646 = b;
var G__25647 = c;
var G__25648 = d;
var G__25649 = e;
var G__25650 = f;
var G__25651 = g;
var G__25652 = h;
var G__25653 = i;
var G__25654 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654) : self__.dispatch_fn.call(null,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25655 = a;
var G__25656 = b;
var G__25657 = c;
var G__25658 = d;
var G__25659 = e;
var G__25660 = f;
var G__25661 = g;
var G__25662 = h;
var G__25663 = i;
var G__25664 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664) : target_fn.call(null,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664));
});
var G__26395__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25665 = a;
var G__25666 = b;
var G__25667 = c;
var G__25668 = d;
var G__25669 = e;
var G__25670 = f;
var G__25671 = g;
var G__25672 = h;
var G__25673 = i;
var G__25674 = j;
var G__25675 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675) : self__.dispatch_fn.call(null,G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25676 = a;
var G__25677 = b;
var G__25678 = c;
var G__25679 = d;
var G__25680 = e;
var G__25681 = f;
var G__25682 = g;
var G__25683 = h;
var G__25684 = i;
var G__25685 = j;
var G__25686 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684,G__25685,G__25686) : target_fn.call(null,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684,G__25685,G__25686));
});
var G__26395__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25687 = a;
var G__25688 = b;
var G__25689 = c;
var G__25690 = d;
var G__25691 = e;
var G__25692 = f;
var G__25693 = g;
var G__25694 = h;
var G__25695 = i;
var G__25696 = j;
var G__25697 = k;
var G__25698 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698) : self__.dispatch_fn.call(null,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25699 = a;
var G__25700 = b;
var G__25701 = c;
var G__25702 = d;
var G__25703 = e;
var G__25704 = f;
var G__25705 = g;
var G__25706 = h;
var G__25707 = i;
var G__25708 = j;
var G__25709 = k;
var G__25710 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25699,G__25700,G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710) : target_fn.call(null,G__25699,G__25700,G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710));
});
var G__26395__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25711 = a;
var G__25712 = b;
var G__25713 = c;
var G__25714 = d;
var G__25715 = e;
var G__25716 = f;
var G__25717 = g;
var G__25718 = h;
var G__25719 = i;
var G__25720 = j;
var G__25721 = k;
var G__25722 = l;
var G__25723 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25711,G__25712,G__25713,G__25714,G__25715,G__25716,G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723) : self__.dispatch_fn.call(null,G__25711,G__25712,G__25713,G__25714,G__25715,G__25716,G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25724 = a;
var G__25725 = b;
var G__25726 = c;
var G__25727 = d;
var G__25728 = e;
var G__25729 = f;
var G__25730 = g;
var G__25731 = h;
var G__25732 = i;
var G__25733 = j;
var G__25734 = k;
var G__25735 = l;
var G__25736 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25724,G__25725,G__25726,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733,G__25734,G__25735,G__25736) : target_fn.call(null,G__25724,G__25725,G__25726,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733,G__25734,G__25735,G__25736));
});
var G__26395__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25737 = a;
var G__25738 = b;
var G__25739 = c;
var G__25740 = d;
var G__25741 = e;
var G__25742 = f;
var G__25743 = g;
var G__25744 = h;
var G__25745 = i;
var G__25746 = j;
var G__25747 = k;
var G__25748 = l;
var G__25749 = m;
var G__25750 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750) : self__.dispatch_fn.call(null,G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25751 = a;
var G__25752 = b;
var G__25753 = c;
var G__25754 = d;
var G__25755 = e;
var G__25756 = f;
var G__25757 = g;
var G__25758 = h;
var G__25759 = i;
var G__25760 = j;
var G__25761 = k;
var G__25762 = l;
var G__25763 = m;
var G__25764 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764) : target_fn.call(null,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764));
});
var G__26395__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25765 = a;
var G__25766 = b;
var G__25767 = c;
var G__25768 = d;
var G__25769 = e;
var G__25770 = f;
var G__25771 = g;
var G__25772 = h;
var G__25773 = i;
var G__25774 = j;
var G__25775 = k;
var G__25776 = l;
var G__25777 = m;
var G__25778 = n;
var G__25779 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25765,G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779) : self__.dispatch_fn.call(null,G__25765,G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25780 = a;
var G__25781 = b;
var G__25782 = c;
var G__25783 = d;
var G__25784 = e;
var G__25785 = f;
var G__25786 = g;
var G__25787 = h;
var G__25788 = i;
var G__25789 = j;
var G__25790 = k;
var G__25791 = l;
var G__25792 = m;
var G__25793 = n;
var G__25794 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25780,G__25781,G__25782,G__25783,G__25784,G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794) : target_fn.call(null,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794));
});
var G__26395__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25795 = a;
var G__25796 = b;
var G__25797 = c;
var G__25798 = d;
var G__25799 = e;
var G__25800 = f;
var G__25801 = g;
var G__25802 = h;
var G__25803 = i;
var G__25804 = j;
var G__25805 = k;
var G__25806 = l;
var G__25807 = m;
var G__25808 = n;
var G__25809 = o;
var G__25810 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805,G__25806,G__25807,G__25808,G__25809,G__25810) : self__.dispatch_fn.call(null,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805,G__25806,G__25807,G__25808,G__25809,G__25810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25811 = a;
var G__25812 = b;
var G__25813 = c;
var G__25814 = d;
var G__25815 = e;
var G__25816 = f;
var G__25817 = g;
var G__25818 = h;
var G__25819 = i;
var G__25820 = j;
var G__25821 = k;
var G__25822 = l;
var G__25823 = m;
var G__25824 = n;
var G__25825 = o;
var G__25826 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25811,G__25812,G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825,G__25826) : target_fn.call(null,G__25811,G__25812,G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825,G__25826));
});
var G__26395__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25827 = a;
var G__25828 = b;
var G__25829 = c;
var G__25830 = d;
var G__25831 = e;
var G__25832 = f;
var G__25833 = g;
var G__25834 = h;
var G__25835 = i;
var G__25836 = j;
var G__25837 = k;
var G__25838 = l;
var G__25839 = m;
var G__25840 = n;
var G__25841 = o;
var G__25842 = p;
var G__25843 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843) : self__.dispatch_fn.call(null,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25844 = a;
var G__25845 = b;
var G__25846 = c;
var G__25847 = d;
var G__25848 = e;
var G__25849 = f;
var G__25850 = g;
var G__25851 = h;
var G__25852 = i;
var G__25853 = j;
var G__25854 = k;
var G__25855 = l;
var G__25856 = m;
var G__25857 = n;
var G__25858 = o;
var G__25859 = p;
var G__25860 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25844,G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860) : target_fn.call(null,G__25844,G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860));
});
var G__26395__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25861 = a;
var G__25862 = b;
var G__25863 = c;
var G__25864 = d;
var G__25865 = e;
var G__25866 = f;
var G__25867 = g;
var G__25868 = h;
var G__25869 = i;
var G__25870 = j;
var G__25871 = k;
var G__25872 = l;
var G__25873 = m;
var G__25874 = n;
var G__25875 = o;
var G__25876 = p;
var G__25877 = q;
var G__25878 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25861,G__25862,G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877,G__25878) : self__.dispatch_fn.call(null,G__25861,G__25862,G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877,G__25878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25879 = a;
var G__25880 = b;
var G__25881 = c;
var G__25882 = d;
var G__25883 = e;
var G__25884 = f;
var G__25885 = g;
var G__25886 = h;
var G__25887 = i;
var G__25888 = j;
var G__25889 = k;
var G__25890 = l;
var G__25891 = m;
var G__25892 = n;
var G__25893 = o;
var G__25894 = p;
var G__25895 = q;
var G__25896 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894,G__25895,G__25896) : target_fn.call(null,G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894,G__25895,G__25896));
});
var G__26395__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25897 = a;
var G__25898 = b;
var G__25899 = c;
var G__25900 = d;
var G__25901 = e;
var G__25902 = f;
var G__25903 = g;
var G__25904 = h;
var G__25905 = i;
var G__25906 = j;
var G__25907 = k;
var G__25908 = l;
var G__25909 = m;
var G__25910 = n;
var G__25911 = o;
var G__25912 = p;
var G__25913 = q;
var G__25914 = r;
var G__25915 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910,G__25911,G__25912,G__25913,G__25914,G__25915) : self__.dispatch_fn.call(null,G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910,G__25911,G__25912,G__25913,G__25914,G__25915));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25916 = a;
var G__25917 = b;
var G__25918 = c;
var G__25919 = d;
var G__25920 = e;
var G__25921 = f;
var G__25922 = g;
var G__25923 = h;
var G__25924 = i;
var G__25925 = j;
var G__25926 = k;
var G__25927 = l;
var G__25928 = m;
var G__25929 = n;
var G__25930 = o;
var G__25931 = p;
var G__25932 = q;
var G__25933 = r;
var G__25934 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928,G__25929,G__25930,G__25931,G__25932,G__25933,G__25934) : target_fn.call(null,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928,G__25929,G__25930,G__25931,G__25932,G__25933,G__25934));
});
var G__26395__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25935 = a;
var G__25936 = b;
var G__25937 = c;
var G__25938 = d;
var G__25939 = e;
var G__25940 = f;
var G__25941 = g;
var G__25942 = h;
var G__25943 = i;
var G__25944 = j;
var G__25945 = k;
var G__25946 = l;
var G__25947 = m;
var G__25948 = n;
var G__25949 = o;
var G__25950 = p;
var G__25951 = q;
var G__25952 = r;
var G__25953 = s;
var G__25954 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954) : self__.dispatch_fn.call(null,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25955 = a;
var G__25956 = b;
var G__25957 = c;
var G__25958 = d;
var G__25959 = e;
var G__25960 = f;
var G__25961 = g;
var G__25962 = h;
var G__25963 = i;
var G__25964 = j;
var G__25965 = k;
var G__25966 = l;
var G__25967 = m;
var G__25968 = n;
var G__25969 = o;
var G__25970 = p;
var G__25971 = q;
var G__25972 = r;
var G__25973 = s;
var G__25974 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25955,G__25956,G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973,G__25974) : target_fn.call(null,G__25955,G__25956,G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973,G__25974));
});
var G__26395__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__26395 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26395__1.call(this,self__);
case 2:
return G__26395__2.call(this,self__,a);
case 3:
return G__26395__3.call(this,self__,a,b);
case 4:
return G__26395__4.call(this,self__,a,b,c);
case 5:
return G__26395__5.call(this,self__,a,b,c,d);
case 6:
return G__26395__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26395__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26395__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26395__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26395__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26395__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26395__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26395__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26395__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26395__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26395__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26395__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26395__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26395__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26395__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26395__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26395__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26395.cljs$core$IFn$_invoke$arity$1 = G__26395__1;
G__26395.cljs$core$IFn$_invoke$arity$2 = G__26395__2;
G__26395.cljs$core$IFn$_invoke$arity$3 = G__26395__3;
G__26395.cljs$core$IFn$_invoke$arity$4 = G__26395__4;
G__26395.cljs$core$IFn$_invoke$arity$5 = G__26395__5;
G__26395.cljs$core$IFn$_invoke$arity$6 = G__26395__6;
G__26395.cljs$core$IFn$_invoke$arity$7 = G__26395__7;
G__26395.cljs$core$IFn$_invoke$arity$8 = G__26395__8;
G__26395.cljs$core$IFn$_invoke$arity$9 = G__26395__9;
G__26395.cljs$core$IFn$_invoke$arity$10 = G__26395__10;
G__26395.cljs$core$IFn$_invoke$arity$11 = G__26395__11;
G__26395.cljs$core$IFn$_invoke$arity$12 = G__26395__12;
G__26395.cljs$core$IFn$_invoke$arity$13 = G__26395__13;
G__26395.cljs$core$IFn$_invoke$arity$14 = G__26395__14;
G__26395.cljs$core$IFn$_invoke$arity$15 = G__26395__15;
G__26395.cljs$core$IFn$_invoke$arity$16 = G__26395__16;
G__26395.cljs$core$IFn$_invoke$arity$17 = G__26395__17;
G__26395.cljs$core$IFn$_invoke$arity$18 = G__26395__18;
G__26395.cljs$core$IFn$_invoke$arity$19 = G__26395__19;
G__26395.cljs$core$IFn$_invoke$arity$20 = G__26395__20;
G__26395.cljs$core$IFn$_invoke$arity$21 = G__26395__21;
G__26395.cljs$core$IFn$_invoke$arity$22 = G__26395__22;
return G__26395;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args25547){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25547)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25975 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25975) : self__.dispatch_fn.call(null,G__25975));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25976 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25976) : target_fn.call(null,G__25976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25977 = a;
var G__25978 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25977,G__25978) : self__.dispatch_fn.call(null,G__25977,G__25978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25979 = a;
var G__25980 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25979,G__25980) : target_fn.call(null,G__25979,G__25980));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25981 = a;
var G__25982 = b;
var G__25983 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25981,G__25982,G__25983) : self__.dispatch_fn.call(null,G__25981,G__25982,G__25983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25984 = a;
var G__25985 = b;
var G__25986 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25984,G__25985,G__25986) : target_fn.call(null,G__25984,G__25985,G__25986));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25987 = a;
var G__25988 = b;
var G__25989 = c;
var G__25990 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25987,G__25988,G__25989,G__25990) : self__.dispatch_fn.call(null,G__25987,G__25988,G__25989,G__25990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25991 = a;
var G__25992 = b;
var G__25993 = c;
var G__25994 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25991,G__25992,G__25993,G__25994) : target_fn.call(null,G__25991,G__25992,G__25993,G__25994));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25995 = a;
var G__25996 = b;
var G__25997 = c;
var G__25998 = d;
var G__25999 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25995,G__25996,G__25997,G__25998,G__25999) : self__.dispatch_fn.call(null,G__25995,G__25996,G__25997,G__25998,G__25999));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26000 = a;
var G__26001 = b;
var G__26002 = c;
var G__26003 = d;
var G__26004 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26000,G__26001,G__26002,G__26003,G__26004) : target_fn.call(null,G__26000,G__26001,G__26002,G__26003,G__26004));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26005 = a;
var G__26006 = b;
var G__26007 = c;
var G__26008 = d;
var G__26009 = e;
var G__26010 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26005,G__26006,G__26007,G__26008,G__26009,G__26010) : self__.dispatch_fn.call(null,G__26005,G__26006,G__26007,G__26008,G__26009,G__26010));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26011 = a;
var G__26012 = b;
var G__26013 = c;
var G__26014 = d;
var G__26015 = e;
var G__26016 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26011,G__26012,G__26013,G__26014,G__26015,G__26016) : target_fn.call(null,G__26011,G__26012,G__26013,G__26014,G__26015,G__26016));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26017 = a;
var G__26018 = b;
var G__26019 = c;
var G__26020 = d;
var G__26021 = e;
var G__26022 = f;
var G__26023 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023) : self__.dispatch_fn.call(null,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26024 = a;
var G__26025 = b;
var G__26026 = c;
var G__26027 = d;
var G__26028 = e;
var G__26029 = f;
var G__26030 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26024,G__26025,G__26026,G__26027,G__26028,G__26029,G__26030) : target_fn.call(null,G__26024,G__26025,G__26026,G__26027,G__26028,G__26029,G__26030));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26031 = a;
var G__26032 = b;
var G__26033 = c;
var G__26034 = d;
var G__26035 = e;
var G__26036 = f;
var G__26037 = g;
var G__26038 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038) : self__.dispatch_fn.call(null,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26039 = a;
var G__26040 = b;
var G__26041 = c;
var G__26042 = d;
var G__26043 = e;
var G__26044 = f;
var G__26045 = g;
var G__26046 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046) : target_fn.call(null,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26047 = a;
var G__26048 = b;
var G__26049 = c;
var G__26050 = d;
var G__26051 = e;
var G__26052 = f;
var G__26053 = g;
var G__26054 = h;
var G__26055 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055) : self__.dispatch_fn.call(null,G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26056 = a;
var G__26057 = b;
var G__26058 = c;
var G__26059 = d;
var G__26060 = e;
var G__26061 = f;
var G__26062 = g;
var G__26063 = h;
var G__26064 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064) : target_fn.call(null,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26065 = a;
var G__26066 = b;
var G__26067 = c;
var G__26068 = d;
var G__26069 = e;
var G__26070 = f;
var G__26071 = g;
var G__26072 = h;
var G__26073 = i;
var G__26074 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074) : self__.dispatch_fn.call(null,G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26075 = a;
var G__26076 = b;
var G__26077 = c;
var G__26078 = d;
var G__26079 = e;
var G__26080 = f;
var G__26081 = g;
var G__26082 = h;
var G__26083 = i;
var G__26084 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084) : target_fn.call(null,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26085 = a;
var G__26086 = b;
var G__26087 = c;
var G__26088 = d;
var G__26089 = e;
var G__26090 = f;
var G__26091 = g;
var G__26092 = h;
var G__26093 = i;
var G__26094 = j;
var G__26095 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095) : self__.dispatch_fn.call(null,G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26096 = a;
var G__26097 = b;
var G__26098 = c;
var G__26099 = d;
var G__26100 = e;
var G__26101 = f;
var G__26102 = g;
var G__26103 = h;
var G__26104 = i;
var G__26105 = j;
var G__26106 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104,G__26105,G__26106) : target_fn.call(null,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104,G__26105,G__26106));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26107 = a;
var G__26108 = b;
var G__26109 = c;
var G__26110 = d;
var G__26111 = e;
var G__26112 = f;
var G__26113 = g;
var G__26114 = h;
var G__26115 = i;
var G__26116 = j;
var G__26117 = k;
var G__26118 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26107,G__26108,G__26109,G__26110,G__26111,G__26112,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118) : self__.dispatch_fn.call(null,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26119 = a;
var G__26120 = b;
var G__26121 = c;
var G__26122 = d;
var G__26123 = e;
var G__26124 = f;
var G__26125 = g;
var G__26126 = h;
var G__26127 = i;
var G__26128 = j;
var G__26129 = k;
var G__26130 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26119,G__26120,G__26121,G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130) : target_fn.call(null,G__26119,G__26120,G__26121,G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26131 = a;
var G__26132 = b;
var G__26133 = c;
var G__26134 = d;
var G__26135 = e;
var G__26136 = f;
var G__26137 = g;
var G__26138 = h;
var G__26139 = i;
var G__26140 = j;
var G__26141 = k;
var G__26142 = l;
var G__26143 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26131,G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141,G__26142,G__26143) : self__.dispatch_fn.call(null,G__26131,G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141,G__26142,G__26143));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26144 = a;
var G__26145 = b;
var G__26146 = c;
var G__26147 = d;
var G__26148 = e;
var G__26149 = f;
var G__26150 = g;
var G__26151 = h;
var G__26152 = i;
var G__26153 = j;
var G__26154 = k;
var G__26155 = l;
var G__26156 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26144,G__26145,G__26146,G__26147,G__26148,G__26149,G__26150,G__26151,G__26152,G__26153,G__26154,G__26155,G__26156) : target_fn.call(null,G__26144,G__26145,G__26146,G__26147,G__26148,G__26149,G__26150,G__26151,G__26152,G__26153,G__26154,G__26155,G__26156));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26157 = a;
var G__26158 = b;
var G__26159 = c;
var G__26160 = d;
var G__26161 = e;
var G__26162 = f;
var G__26163 = g;
var G__26164 = h;
var G__26165 = i;
var G__26166 = j;
var G__26167 = k;
var G__26168 = l;
var G__26169 = m;
var G__26170 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169,G__26170) : self__.dispatch_fn.call(null,G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169,G__26170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26171 = a;
var G__26172 = b;
var G__26173 = c;
var G__26174 = d;
var G__26175 = e;
var G__26176 = f;
var G__26177 = g;
var G__26178 = h;
var G__26179 = i;
var G__26180 = j;
var G__26181 = k;
var G__26182 = l;
var G__26183 = m;
var G__26184 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26171,G__26172,G__26173,G__26174,G__26175,G__26176,G__26177,G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184) : target_fn.call(null,G__26171,G__26172,G__26173,G__26174,G__26175,G__26176,G__26177,G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26185 = a;
var G__26186 = b;
var G__26187 = c;
var G__26188 = d;
var G__26189 = e;
var G__26190 = f;
var G__26191 = g;
var G__26192 = h;
var G__26193 = i;
var G__26194 = j;
var G__26195 = k;
var G__26196 = l;
var G__26197 = m;
var G__26198 = n;
var G__26199 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26185,G__26186,G__26187,G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198,G__26199) : self__.dispatch_fn.call(null,G__26185,G__26186,G__26187,G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198,G__26199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26200 = a;
var G__26201 = b;
var G__26202 = c;
var G__26203 = d;
var G__26204 = e;
var G__26205 = f;
var G__26206 = g;
var G__26207 = h;
var G__26208 = i;
var G__26209 = j;
var G__26210 = k;
var G__26211 = l;
var G__26212 = m;
var G__26213 = n;
var G__26214 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26200,G__26201,G__26202,G__26203,G__26204,G__26205,G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214) : target_fn.call(null,G__26200,G__26201,G__26202,G__26203,G__26204,G__26205,G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26215 = a;
var G__26216 = b;
var G__26217 = c;
var G__26218 = d;
var G__26219 = e;
var G__26220 = f;
var G__26221 = g;
var G__26222 = h;
var G__26223 = i;
var G__26224 = j;
var G__26225 = k;
var G__26226 = l;
var G__26227 = m;
var G__26228 = n;
var G__26229 = o;
var G__26230 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26215,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226,G__26227,G__26228,G__26229,G__26230) : self__.dispatch_fn.call(null,G__26215,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226,G__26227,G__26228,G__26229,G__26230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26231 = a;
var G__26232 = b;
var G__26233 = c;
var G__26234 = d;
var G__26235 = e;
var G__26236 = f;
var G__26237 = g;
var G__26238 = h;
var G__26239 = i;
var G__26240 = j;
var G__26241 = k;
var G__26242 = l;
var G__26243 = m;
var G__26244 = n;
var G__26245 = o;
var G__26246 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237,G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246) : target_fn.call(null,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237,G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26247 = a;
var G__26248 = b;
var G__26249 = c;
var G__26250 = d;
var G__26251 = e;
var G__26252 = f;
var G__26253 = g;
var G__26254 = h;
var G__26255 = i;
var G__26256 = j;
var G__26257 = k;
var G__26258 = l;
var G__26259 = m;
var G__26260 = n;
var G__26261 = o;
var G__26262 = p;
var G__26263 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26247,G__26248,G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261,G__26262,G__26263) : self__.dispatch_fn.call(null,G__26247,G__26248,G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261,G__26262,G__26263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26264 = a;
var G__26265 = b;
var G__26266 = c;
var G__26267 = d;
var G__26268 = e;
var G__26269 = f;
var G__26270 = g;
var G__26271 = h;
var G__26272 = i;
var G__26273 = j;
var G__26274 = k;
var G__26275 = l;
var G__26276 = m;
var G__26277 = n;
var G__26278 = o;
var G__26279 = p;
var G__26280 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274,G__26275,G__26276,G__26277,G__26278,G__26279,G__26280) : target_fn.call(null,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274,G__26275,G__26276,G__26277,G__26278,G__26279,G__26280));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26281 = a;
var G__26282 = b;
var G__26283 = c;
var G__26284 = d;
var G__26285 = e;
var G__26286 = f;
var G__26287 = g;
var G__26288 = h;
var G__26289 = i;
var G__26290 = j;
var G__26291 = k;
var G__26292 = l;
var G__26293 = m;
var G__26294 = n;
var G__26295 = o;
var G__26296 = p;
var G__26297 = q;
var G__26298 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287,G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298) : self__.dispatch_fn.call(null,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287,G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26299 = a;
var G__26300 = b;
var G__26301 = c;
var G__26302 = d;
var G__26303 = e;
var G__26304 = f;
var G__26305 = g;
var G__26306 = h;
var G__26307 = i;
var G__26308 = j;
var G__26309 = k;
var G__26310 = l;
var G__26311 = m;
var G__26312 = n;
var G__26313 = o;
var G__26314 = p;
var G__26315 = q;
var G__26316 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26299,G__26300,G__26301,G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316) : target_fn.call(null,G__26299,G__26300,G__26301,G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26317 = a;
var G__26318 = b;
var G__26319 = c;
var G__26320 = d;
var G__26321 = e;
var G__26322 = f;
var G__26323 = g;
var G__26324 = h;
var G__26325 = i;
var G__26326 = j;
var G__26327 = k;
var G__26328 = l;
var G__26329 = m;
var G__26330 = n;
var G__26331 = o;
var G__26332 = p;
var G__26333 = q;
var G__26334 = r;
var G__26335 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335) : self__.dispatch_fn.call(null,G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26336 = a;
var G__26337 = b;
var G__26338 = c;
var G__26339 = d;
var G__26340 = e;
var G__26341 = f;
var G__26342 = g;
var G__26343 = h;
var G__26344 = i;
var G__26345 = j;
var G__26346 = k;
var G__26347 = l;
var G__26348 = m;
var G__26349 = n;
var G__26350 = o;
var G__26351 = p;
var G__26352 = q;
var G__26353 = r;
var G__26354 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354) : target_fn.call(null,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26355 = a;
var G__26356 = b;
var G__26357 = c;
var G__26358 = d;
var G__26359 = e;
var G__26360 = f;
var G__26361 = g;
var G__26362 = h;
var G__26363 = i;
var G__26364 = j;
var G__26365 = k;
var G__26366 = l;
var G__26367 = m;
var G__26368 = n;
var G__26369 = o;
var G__26370 = p;
var G__26371 = q;
var G__26372 = r;
var G__26373 = s;
var G__26374 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26355,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374) : self__.dispatch_fn.call(null,G__26355,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26375 = a;
var G__26376 = b;
var G__26377 = c;
var G__26378 = d;
var G__26379 = e;
var G__26380 = f;
var G__26381 = g;
var G__26382 = h;
var G__26383 = i;
var G__26384 = j;
var G__26385 = k;
var G__26386 = l;
var G__26387 = m;
var G__26388 = n;
var G__26389 = o;
var G__26390 = p;
var G__26391 = q;
var G__26392 = r;
var G__26393 = s;
var G__26394 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26375,G__26376,G__26377,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392,G__26393,G__26394) : target_fn.call(null,G__26375,G__26376,G__26377,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392,G__26393,G__26394));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26396 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__26396);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13305__auto__,writer__13306__auto__,opt__13307__auto__){
return cljs.core._write(writer__13306__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__26401 = msg;
return Error(G__26401);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__26406 = x;
var G__26407 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26406,G__26407) : pred.call(null,G__26406,G__26407));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__26408 = y;
var G__26409 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26408,G__26409) : pred.call(null,G__26408,G__26409));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1424021759168